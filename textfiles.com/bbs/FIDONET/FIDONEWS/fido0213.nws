FIDONEWS     --           13 May 85  00:00:48           Page 1

        Volume 2, Number 13                              13 May 1985
        +----------------------------------------------------------+
        |                                             _            |
        |                                            /  \          |
        |    - FidoNews -                           /|oo \         |
        |                                          (_|  /_)        |
        |  Fido and FidoNet                         _`@/_ \    _   |
        |    Users  Group                          |     | \   \\  |
        |     Newsletter                           | (*) |  \   )) |
        |                             ______       |__U__| /  \//  |
        |                            / FIDO \       _//|| _\   /   |
        |                           (________)     (_/(_|(____/    |
        |                                                (jm)      |
        +----------------------------------------------------------+

        Publisher:              Fido #375
        Chief Procrastinator:   Thom Henderson

        Fidonews is published weekly by SEAboard, Fido 107/375.  You 
        are encouraged to submit articles for publication in 
        Fidonews.  Article submission standards are contained in the 
        file FIDONEWS.DOC, available from Fido 107/375.

        Disclaimer or don't-blame-us:

        The contents of the articles contained here are not our 
        responsibility, nor do we necessarily agree with them; 
        everything here is subject to debate. We publish EVERYTHING 
        received.  





                               Electronic Hate

        Computer bulletin boards exist for almost every special 
        interest group, from ham radio to ban-the-bomb.  Now we even 
        have bulletin boards dedicated to spreading the gospel of 
        hate.  

        Some of you may have heard about this already.  For the rest 
        of us, this comes as a shock.  There are boards in this 
        country which are dedicated to using computers to spread 
        vicious neo-nazi propaganda.  I've had the dubious privilege 
        of logging onto a board in Texas that has (among other 
        things): 

        1)  A section giving addresses of "patriotic" groups, 
            including several offices of the Ku Klux Klan.

        2)  A section of essays on topics such as Klan philosophy, a 
            proposed "point system" for determining extermination 
            targets (based on "value to the anti-Christ, pro-
            Communist system"), the Biblical basis for extermination 
            of homosexuals, and the use of computer bulletin boards 
            to establish an "Aryan nations brain trust".







FIDONEWS     --           13 May 85  00:00:50           Page 2


        3)  A section titled "Know Your Enemy", listing the offices 
            of the Anti-Defamation League.

        4)  A "hit list" of Federal witnesses who have informed on 
            the Klan and other "patriotic" groups.

        5)  A restricted section titled "Names and addresses of race 
            traitors".

        I think that the Tcimpidis case -- and other related 
        incidents -- has shown us that electronic bulletin boards 
        are in a rather precarious position in the eyes of the 
        public.  I don't really feel that we can afford to be 
        associated with this sort of element, however tenuously.  
        But I must confess that I am at somewhat of a loss as to 
        exactly what we should do about it.

        Does anyone have any suggestions?  I would especially 
        appreciate some input from any lawyers out there who can 
        advise us on the legalities of the situation, but ideas from 
        any quarter are welcome.


                               Fido 10i Update

        Even as you read this, Fido 10i may be spreading across the 
        country.  It was delayed because a large crop of bugs 
        suddenly sprang up when Tom Jennings made a couple of minor 
        changes.  After much hair-pulling, it was discovered that 
        his master copy of the DEC support library had been 
        corrupted.  He went back to his backup copy, and the bugs 
        vanished.

        The DEC version of 10i has already passed Beta testing, and 
        Fido 10i will be released as soon as the IBM version also 
        passes Beta test, which should happen at any moment.

        Tom Jennings has also promised to provide documentation for 
        the upgrade, so check that out as well.  With any luck, the 
        transition will go smoothly.

        There is also a new(er) version of NODELIST available.  It 
        won't handle some of the fancy stuff Fido 10i is doing, but 
        it WILL handle up to seven hundred nodes.  (This is 
        important, as I am told we now have five hundred nodes!) 


















FIDONEWS     --           13 May 85  00:00:52           Page 3

        ============================================================
                                  NEWS
        ============================================================
        *** PROBLEM REPORT:  Microsoft Macro Assembler v. 3.0 ***

                by Tom Hanlin, from the Bears_Den (FIDO 74)


             The Macro Assembler is virtually the standard tool
        for writing assembly code for MS-DOS systems.  It's all
        the more shocking, then, that Microsoft has introduced a
        compatibility problem into version 3.0 of its assembler,
        which makes it practically useless for producing linkable
        libraries for public use.


        Background:

             There are many times when a project needs the speed
        or flexibility of assembly language, but doesn't have to
        be done entirely in assembly code.  For this purpose,
        there is a standard utility called LINK which allows you
        to link object code produced by higher-level languages
        (such as BASIC, FORTRAN, Pascal, C, et al) with assembly
        language subroutines.  This gives you the flexibility and
        speed of assembly language, combined with the power and
        ease of programming of the higher level language.  Also,
        since there may well be many routines which need to be
        linked, there is a utility called LIB which combines the
        separate object modules into a library, from which LINK
        can pull the appropriate routines as necessary.  LINK is
        needed in every case, and so it is provided not only with
        the assembler and higher-level languages, but even with
        MS-DOS itself.  LIB, on the other hand, is needed only by
        the person creating the linkable library, and is provided
        only with the assembler.  Therein lies the problem.


        Problem:

             The LIB utility provided with the Microsoft Macro
        Assembler, version 3.0, has a nasty compatibility problem
        in that produces code that can't be used by any version
        of LINK prior to 3.0.  This means that the only people who
        can use the libraries it produces are those who have either
        the Macro Assembler v3.0, or possibly MS-DOS v3.x (although
        I haven't tested its linker, it may not work).  In other
        words, the great majority of users will be totally unable
        to use the library.  It can't be linked with the linker
        provided with MS-DOS version 1.x or 2.x, or the linker
        provided with the higher-level language.  Microsoft is now
        releasing the appropriate linker with its FORTRAN and
        Pascal compilers, but if you use their BASIC or C com-
        pilers, IBM's BASIC Compiler, or other products... tough
        luck, dude.  Microsoft doesn't care.  They know about the
        problem, and have no intention of doing anything about it.
        Phone up the tech hotline at (206) 828-8089, and ask them







FIDONEWS     --           13 May 85  00:00:55           Page 4

        about it.


        Solution:

             Personally, I'm going to look for an earlier version
        of the LIB utility which is compatible with the versions of
        LINK that are more widely available.  As for anyone who's
        thinking of buying the Macro Assembler version 3.0... think
        twice, if you're planning to ever use it to produce libraries
        for public distribution.  Not much of a solution, but what
        can you do with a software company that won't support its
        own languages?  (Read the licensing agreement sometime).





        ------------------------------------------------------------













































FIDONEWS     --           13 May 85  00:00:55           Page 5

        Tom Jennings
        Fido #1
        9 May 85


                NETWORK CHANGES and FIDO VERSION 10I

                Surely you have heard that there is a new version of
        Fido coming out, with tremendous changes in the network.
        There are a lot of rumors floating around, so I thought I'd
        clear some up.

                The changes are major, and not that big a deal at
        the same time. For users the changes will be simple, and
        will make entering messages a lot easier.

                For sysops, the changes are slightly more. You have
        to get a net number (later on that) and set it with the 4
        command. No big deal.

                The real change is in the net organization. FidoNet
        has DOUBLED in size every two months; this is ridiculous,
        but true. Things are totally crazy, some areas of the
        country never get newsletters, have a hard time finding node
        lists, and believe it or not, have never heard of
        NODELIST.EXE and ROUTEGEN.EXE!

                Sysops who belong to a local net such as SoCal,
        Boston or St. Louis have a lot of benefits. They get node
        lists, a bunch of other sysops they can talk to about
        getting help or missing files, and other little things that
        add up to a lot. The "stragglers" (sysops out in the
        boonies) get screwed, they have to scrounge around for
        themselves.

                Basically, the new network is about making sysops
        who aren't in a local net part of a "region". The bad news
        is, each region will have to keep it's own node list. (This
        should only be for about 5 - 10 systems though in each
        region.) Each region will send it's nodelist to Fido 51, who
        compiles the biggie that gets distributed.

                The good news is that all of a sudden the guys in
        the boonies have some power and other advantages. Each
        region hub will get the following files on a regular basis:

                Newsletter, on time
                Node lists, on time
                Latest version info

                Hopefully, each region hub will have enough disk
        space to stock all the Fido files, NODELIST, ROUTEGEN, etc.
        On a day to day basis, a region, like a local net, will be
        somewhat self contained. Most of the advantages are small,
        but make all the difference in the world. If you are
        creative, I'm sure you can think of all sorts of things you
        can do with the region and net setup.







FIDONEWS     --           13 May 85  00:00:57           Page 6



                "Current" Fidos (10g and older) are compatible with
        the new stuff, though it is highly recomended that you get
        the new stuff as soon as possible. You can't do region stuff
        until you get it, you'll have to remain out in the boonies.
        Also, 10I will fix most if not ALL of the bugs in 10G. The
        reason for the delay in releasing 10I is that it is actually
        being TESTED before release. (Previous versions were NOT
        tested first.) Eventually, it will become "mandatory" that
        you use 10I or later, since we are going to have to rely on
        the new features very soon. In two or three months, everyone
        should be swapped over to the new network version.

                "Regions" and "nets" can be any sort of thing. There
        is a seperate "pee cee junior" net, currently not in the
        nodelist, that assigns their own nodes. They can have a net
        number, pass out their own node lists and all, and still be
        in the national net.

                The only difference between a "region" and a "net"
        is that in a net, all mail for all nodes in that net get
        routed through the host automatically. Regions don't; if you
        send a msg to a node in a region, it goes directly, like it
        does now. A region is a "logical entity" only. A net means
        that some group of nodes, usually all in the same city or
        whatever, has an incoming host.

                So, the changes are both complex and simple. My
        guess is that things will be confusing for about two weeks,
        then settle down into a smooth conversion.

                NEVER FORGET that FidoNet is supposed to be FUN,
        that is it's ONLY purpose. It has NO OTHER PURPOSE. I did
        this for shits and grins, I don't make any money from it, it
        was just for the hell of it. If it starts to get too
        serious, please make suggestions and yell a lot, but keep in
        mind that even though it is for FUN, it does take some work.
        The work that is done by the St. Louis group and I is not
        magical, we didn't take it on, it started out simple and
        just grew. (Now YOU get to do some of it ...)

                Never for a minute think that we know what we are
        doing; we are winging it like any other honest person will
        tell you. We learn as we go, and make mistakes. The new
        network organization will eliminiate some work, and push
        some of it onto net and region hubs. Keep in mind that
        FidoNet has doubled every two months since May 84 ... we'll
        get it right yet!


        ------------------------------------------------------------












FIDONEWS     --           13 May 85  00:00:59           Page 7

        ===========================================================
                      IBM PC-AT Failures. Again....
        ===========================================================
        Greetings  once again from  Fido 59, Washco  Fidonet.  I am 
        writing to ask all Fido users who have purchased an IBM PC-
        AT to assist me  in gathering some  data by filling out and 
        sending in the questionnaire below.

        The reason  I write is  because recently, a  friend of mine 
        laid down $6,000 (wow...) for a NEW PC-AT and no sooner had 
        he gotten it home and started using it when it promptly and 
        summarily failed.  The cause of the failure is unknown, but 
        it is hard-disk related. The system had about 8 or so hours
        (roughly) of use when it died. At last report, he was going 
        to take it  back  and get a  full refund.  One ramification
        of this is that  he lost a LOT of credibility by recommend-
        ing this machine to a client, who in turn put out the order 
        for another  half-dozen  or so machines.  This is extremely 
        disturbing. What we are doing is gathering any and all data 
        related to ANY failures of the AT for any reason whatsoever. 
        Your help is MUCHLY appreciated.  Please take a few minutes 
        and fill this out  and send it back via the net or thru the
        U.S. Postal Service.  We want to  make a case  that IBM  is 
        STILL shipping defective machines. Thank you for your time.
        -----------------------------------------------------------
        Has your PC-AT failed for any of the following reasons:
        (Enter an "X" on the appropriate line).
        -----------------------------------------------------------
        1)A physical hard-disk failure        _____

        2)A harddisk controller logic failure _____

        3)Operating system failure            _____

        4)Scrambled FAT table                 _____

        5)RAM failure                         _____

        6)What is the disk-type in your AT?
        :__________________________________

        7)What is the date of purchase?
        :____/____/____

        8)Serial #:________________________

        9)Do you have any other comments ?

        :__________________________________________________________

        :__________________________________________________________

        :__________________________________________________________

        ===========================================================
        *Please send all replies to Fido 59, 1-503-643-2284, or:
        Sysop, Fido 59







FIDONEWS     --           13 May 85  00:01:01           Page 8

        13787 SW Farmington Rd. #148
        Beaverton, Oregon 97006
        Again, THANKS!
        ===========================================================

        ------------------------------------------------------------


























































FIDONEWS     --           13 May 85  00:01:02           Page 9

        WATCHDOG -- THE ULTIMATE IN SYSTEM SECURITY -- 05/08/85

        Recently we obtained WATCHDOG, and as a result can now 
        breath a lot easier. For those of you not familiar with the 
        software, it provides TOTAL system security. While it will 
        not stop someone from removing your computer, it WILL STOP 
        someone from removing software or files stored on your 
        computer.
        The software comes on 2 disks, with a COMPREHENSIVE manual 
        divided into 3 parts. Sections one and three are for your 
        system users, and section 2 is for the person who will run 
        the system.
        Installing the software entails several steps. The first 
        step is simply running the install program which asks you 
        questions about your systems configuration, and is 
        generally finished in 5 minutes or less.
        To enter the second stage requires a little more thought on 
        your part. It helps for you to have planned what software 
        will go into what AREA (15 areas allowed) before you reach 
        this stage, although you can do it as you go along, which 
        is the way we proceeded. Now you will create some or all of 
        the 15 areas WATCHDOG allows you use. An area can consist 
        of many programs, and is not limited to one program per 
        area.
        You create the area name, primary, alternate, and one time 
        passwords at this time, for each area you wish to activate 
        at this time. Each one of these areas are considered 
        <protected> and we will discuss that later. You must also 
        set up the user file deciding on user access and passwords 
        if you desire to use them. Each area set up can be password 
        protected, as well as hidden from any user not entitled to 
        access that area, as pre-determined by the system operator.
        Now, all you have to do is establish a UNIQUE And hopefully 
        easy to remember password for use by the Sysop ONLY. DO NOT 
        WRITE THIS DOWN ON THE SIDE OF YOUR COMPUTER, OR ANY WHERE 
        IT CAN BE FOUND. The whole purpose of WATCHDOG is to 
        provide security, and this is the FIRST step to take to 
        make sure the system is secure. Once you have finished this 
        the system will revert to the <A> prompt. Now, just re-boot 
        the system and WATCHDOG is in control.
        At this time enter your I.D. and then your password, and 
        just hit return for the next prompt and viola' you are now 
        at the main menu. The areas you just set up are all listed 
        by number, and WATCHDOG is waiting for you. From here on in 
        it is easy sailing !
        Now comes the easy part, that is copying the software into 
        the protected areas. It is simple, just log into the area 
        on the main menu, hit F9 to drop to Dos, and copy the 
        software from drive A, or from another NON-WATCHDOG area on 
        the disk. As the software is copied, WATCHDOG encrypts it, 
        and only writes the encrypted form to the disk. Once all 
        the programs have been copied, simply type WD MENU to set 
        up the actual menu for those freshly copied programs.
        But you ask, What if the program I want to copy into this 
        area is already in another area on the disk, that I have 
        previously set up as a WATCHDOG area ? Can I still copy 
        freely between security areas ? Yes can still copy between 







FIDONEWS     --           13 May 85  00:01:04           Page 10

        areas, but not like we just copied from the A drive. Part 
        of WATCHDOG's internal security prevents anyone from using 
        the Dos command CD\ and the reason should be obvious. The 
        only way for you to access the WATCHDOG areas is from the 
        main menu, so viola' the authors have provided the F8 key 
        for you to use. This brings up the utility menu and we can 
        use function 5, Inter area copy, to effect the copying we 
        want to do. When WATCHDOG makes a copy from area to area 
        the data is maintained in ENCRYPTED form AT ALL TIMES to 
        safeguard system security.
        Once all the areas, and menus are set up and you have 
        assigned the user passwords, and checked out all passwords 
        and menu functions, it is time to make a back up. The 
        easiest way to backup the disk, is again the F8 key, and 
        select the Encrypted Backup Function. This uses the regular 
        backup program supplied with Dos, and provides full prompts 
        for all disk changes, etc; and then returns you to the main 
        menu when finished.
        Well we are almost finished now. Just one last thing to do, 
        so place the S.A. disk in drive A and type WDSYSADM. Select 
        the option that controls disk booting, and lock the hard 
        drive(software lock) that boots the system. THIS PREVENTS 
        THE SYSTEM FROM BOOTING FROM THE FLOPPY DRIVE THUS ASSURING 
        THAT ALL USERS MUST GO THROUGH THE WATCHDOG SECURITY 
        ROUTINES!
        Why did we purchase WATCHDOG ? Well the program is now set 
        up with our three bulletin Boards running in one section of 
        WATCHDOG, with only BBS programs in that area. A separate 
        account was established for the Bulletin Boards, and that 
        account is authorized to enter only the BBS area. When 
        someone drops to DOS FROM the BBS, or goes to play one of 
        the several on-line games, I am confident that he/she will 
        not be able to change areas, download any of my software, 
        or otherwise wreck havoc, since the account id used to 
        start the BBS is locked into that area.
        I hope this review has helped some of you decide whether or 
        not WATCHDOG is the software for you.



























FIDONEWS     --           13 May 85  00:01:06           Page 11

        ============================================================
                               COLUMNS
        ============================================================
        From: Tim Meyers Fido #365 & #442
        Fido Source Code.

        For about 2 months now I have an  operational  Fido  look-a-
        like  written  in  Turbo-pascal.   The  commands  are  quite 
        different from Fido,  The situation started when I asked Tom 
        Jennings  if  he  had  considered  writing a CP/M version of 
        Fido,  but of course he hasn't got the time,  so I  took  it 
        into my hands to do the best that I could. Since then I have 
        2 versions, the generic CP/M version and the MS-DOS version.  
        I  am  going  to turn over the CP/M version to Doug Good,and 
        Scot Aschraft of Fido #50,  I just do NOT HAVE THE  TIME  to 
        keep  up  with 2 different versions.  Although the source is 
        not yet available,  it  should  be  as  soon  as  I  get  it 
        debugged.  

        The  CP/M  version contains almost everything Fido contains, 
        even Kermit, but the MS-DOS version lacks Kermit. I just did 
        not know anything about  Kermit,  so  I  took  and  existing 
        KERMIT  ext.  and  incorporated  it  into  the CP/M version, 
        wasn't too lucky with the MS-DOS version.  Also I need  lots 
        of  help.  If  anyone  knows  of  an  async handler that can 
        handle buffered input/output please send it to fido #442, or 
        at least give me and idea where I can  get  a  copy  of  it.  
        I'll  consider  writing  my own later,  but at this point it 
        seems everyone would just like the  source  code  to  mingle 
        thru, and that,s just one more thing to debug.  

        Hopefully  by  the  time  this  has been printed I will have 
        already sent 60 or 70% of the files to Fido #50.  Now  about 
        the  source,  Fido  Isn't  one  of the greatest BBS programs 
        around,  it has many nice features and  many  disadvantages, 
        Mr.  Jennings  will  agree  it's not very nice to first time 
        users, and neither are many BBS programs. Here is my idea of 
        how a Fidonet compatible should be written.  

        First,  sort of a standard.  As all bbs  program's  everyone 
        knows of the standard Read, Write, and File Commands, within 
        little  diffrences all BBS programs are somewhat in the same 
        bounds of commands,  but are they  enough?  What  should  be 
        added?  Where ?  Why? These are all questions that should be 
        asked before writing a BBS.  For instance, Fido uses the (+) 
        to read a reply to that particular message allowing  you  to 
        keep track of a story, but why not a (+N) that will read all 
        messages from that reply on?  What we need is a common place 
        were  people  if any,  are going to meet and get ideas about 
        creating a Fido!  

        2nd. The biggest question is, what do people wish to have on 
        a Fidonet compatible system or a Fido BBS compatible system. 
        I asked the users of both of my systems and they  had  about 
        the  same  answers;  we  like  Fidonet,  but things could be 
        changed in the way the BBS runs.  How true, Mr. Jennings has 
        written a great  piece  of  software!  What  makes  Fido  so 







FIDONEWS     --           13 May 85  00:01:08           Page 12

        unigue is the network.  It's a first, but surely not a last. 
        He  has  set  a  standard  on which everything from now will 
        probably be based.  

        3rd.  Problems,  when I started my Fido compatible system  I 
        was  totally  dismayed by routing.  I had no idea of what it 
        involved,  and still have no idea.  My BBS works great as  a 
        whole but has no way of routing,  a major function,  so with 
        this in mind,  I think,  why not give the source to  someone 
        who  knows  a lot more about routing (hint Mr.  Baker.).  It 
        requires you to know  the  concept  and  ethics  behind  the 
        operation before you can start writing the software.  

        4th.  The  idea  of  taking  in  modules  and compiling them 
        together, forget it!  It causes many problems, and after you 
        have  had 300 different people pulling and changing code you 
        are invoked with a massive  piece  of  trash.  I  tried  the 
        idea,  I  gave  the  source  to  3  people in Huntsville,  a 
        software consultant,  computer science major,  and a  former 
        NASA  programmer.  Each week I sorted at least 25 changes of 
        which all took the approch, eliminate this,  delete this and 
        its 40% faster,  BUT, you give up this, and no more this and 
        sorry can't do that anymore.  Havoc! Within about 3 weeks, I 
        decided that it was'nt going to be worth the time and/or the 
        effort to allow several people to be changing  the  program.  
        You  run  into non-compatible changes,  changes no-one knows 
        about,  and 400 different versions,  one for each  node.  My 
        idea  would be to have a national vote,  get the best in all 
        areas,  one  programmer  writes  the  async  routines,  Comm 
        controls,  after  this  is  done  another writes the message 
        areas,  another the file  area  and  then  routing,  not  10 
        different people writting the message area, 20 the file area 
        and so on. This presents many problems that everone can see.  
        Once the software is written, give it out only to the people 
        who  will  assure  that any revision will be reported to the 
        headquarters.  A great example of this is  RBBS-PC.  It  has 
        been  changed  so  many  times,  there  is  no idea how many 
        changes good or bad has been  made,  this  is  exactly  what 
        causes a BBS program to vanish from existance.  Fido is sort 
        of  a  family,  everything is kept at one point and everyone 
        knows almost everything that  goes  on.  If  you  create  65 
        different  versions  and  let  everyone change that then you 
        create many problems.  This field is open, I beleive this is 
        a problem, how does everyone else think?  

        5th.  Languages,  lets say for instance we are going to have 
        to write somthing in a universal language. Here is a listing 
        and what I think about each: 

            Language  #1,  BASIC.   This  is  very  much  universal.  
            Everyone can  at  least  program  and  make  changes  as 
            needed,  and  almost  everyone owns the product.  It has 
            problems tho. It just cannot handle modem I/O as well as 
            many other languages,  it's slow,  and cumbersome.  Many 
            people  will  agree  it isn't what someone would wish to 
            write a BBS in,  but come to reality people not  everone 
            know's  C or Pascal or Ada,  nor do they own it,  so the 







FIDONEWS     --           13 May 85  00:01:11           Page 13

            question is here,  give up speed or knowlege,  which  is 
            it?  If  you  have several good programers BASIC will do 
            almost everything that any other language will do, minus 
            the speed.  

            Language  #2,   Forth.   I  chipped  this  in  to  stump 
            everyone.  I  happen  to  know  Forth,  so  do  5  other 
            programmers out there,  But again the programmer who  is 
            doing  the routing doesn't.  We have presented ourselves 
            with 2 problems.  First,  do we pick another language or 
            do we pick another programmer, and the answer is another 
            language!  We are creating a masterpiece, only the best, 
            so  we  wish to use only the best people and ideas.  Not 
            the best tools.  Remember Rome wasn't built  in  a  day, 
            neither  will  a  compatible Fido system,  If it takes 5 
            months to write it in C and 3 months  in  Forth  but  we 
            have  lost  one  of the programmers it just wasn't worth 
            it.  

            Language #3, Lattice C.  My favorite, but what about the 
            guy  who  is doing the message section?  C will be great 
            for the guy doing the files area,  but again what  about 
            the  guy  doing  the message area?  We just have to pick 
            who can do what and make sure that  they  can  use  that 
            particular language.  

            Language #4, ASM. This Is another favorite, great speed, 
            and   without  a  doubt  the  smallest.   But,   another 
            compatible change there,  it's a pain to program in  and 
            impossible  to debug.  Many people have not even got the 
            faintest how it works.  

            Language #5 Turbo Pascal. It has already been done. As I 
            look to the right, I see 135 pages of pure hell. I spent 
            many late nights and  unbearibly  long  compiles  before 
            finding  out  I  had  left  off  a ';' at the end of the 
            program, or a careless error in my fault.  This is not a 
            language  that  best  suits  the  needs  of  a   Fidonet 
            compatible system.  I have little room free with it now, 
            6 Inc.  files and 10 minutes of compiling before I  find 
            out,  NA, that's not the way I wanted that to work.  One 
            great point is the generic version,  we open a range  of 
            computers not there if we create it in another language.  
            My  idea is to create a Fidonet compatible CP/M version.  
            Once I have it finished, ship it off and not bother with 
            it again.  Once it has been created one person will have 
            the rights to change it and now it looks like it will be 
            Doug  Good  of Fido #50.  He has shown the most interest 
            and spent much of his time communicating with me by long 
            distance,  thanks again Doug and Mr.  Ashcraft the sysop 
            of Node #50.  

            Language  #6  Better  basic.  This is what I wish to see 
            the language written in. The speed is comparible to that 
            of  C  or  Pascal.   Structure  and  matrix  arrays  are 
            completely supported unlike Microsoft Basic.  Anyone not 
            owning  a version can modify the program via text editor 







FIDONEWS     --           13 May 85  00:01:14           Page 14

            send it to the host and get it compiled.  I realize this 
            can be done in all other languages too, but you can even 
            use  Microsoft  BASIC  to test it out before you ship it 
            off.  Full DOS 2.xx support,  and the file  handling  is 
            great.  We  are  still  presented  with  the  problem of 
            buffered input/output,  but that can be  overcome.  Size 
            is  dependent  on  memory  and  can  be  up to 640k.  It 
            supports windowing, Errorlevel,  Xmodem Control thru the 
            BASIC  interpreter  itself.  Varible  listings with size 
            and definitions, what lines are used how many times etc. 
            etc.  It's without a doubt the best BASIC  that  I  have 
            seen  in  many  days.  Unless IBM presents us with a new 
            compiler to handle most of the DOS 2.xx features then we 
            may be stuck with this.  

        There are many others out there,  but let's face the  facts.  
        These are the most favorite and at least the most usual.  It 
        would  be  interesting  to know how many people prefer which 
        language  to  which.   Remeber  tho,   we  cannot  give   up 
        programers.  That's  what  makes the strength of the program 
        itself.  

        6th.  Outline of what happens, why, when, where,  etc.  This 
        is very very brief.  It just gives and example of what could 
        possible happen if a Fido look-a-like was to be created.  

        I. Choosing the People.
           A.Who Does what.
           B.Ask if they Wish to participate.
        II.National Vote 
           A.Each Sysop of the Node votes.
        III.Calculations.
           A.Chosen programers are notified.
           B.Each confirms each others role.
        IV.The language.
           A.Decide who can do what.
           B.Decide what will do the best for what cost.
        V.The Program.
           A.Inital creation. 
           B.Message addition.
           C.File section. 
        VI.Program Changes. 
           A.By individual.
           B.Updates sent to host.
           C.Distributed from there.

        7th.  After all of this has been done we have  a  nice  neat 
        package that can be changed as needed.  For Fido to continue 
        to  be  a  family  of  independent  nodes  it might be a big 
        mistake to actually give out the source code, as you can see 
        from RBBS, the Fidos will no longer be a family it will be a 
        mass of confussion bad or good.  Any one that has any  ideas 
        please send it to Fido #442. Thanks Tim Meyers.  











FIDONEWS     --           13 May 85  00:01:16           Page 15

        ============================================================
                              FOR SALE
        ============================================================
        =========================================================
        =========================================================
        We now have our Lottery Analyzer available for public 
        sale and use after a long period of testing.
        This product is the result of several years of intensive 
        work, and is based on the contributions of several authors
        all of whom play the Lottery for a living. The software is 
        hueristic in nature, and learns from past experiences. The 
        software stores more than a years worth of data, and 
        allows you to select numbers based on several criteria. 
        You may also store your frequently played numbers and then 
        check each game's results at the touch of a key. You may 
        also generate SIMULATIONS for each weeks games based on 
        the past drawings data. Available now for the IBM PC and 
        XT Computers with a special AT version coming soon.
        To order send a check or money order for $ 29.95
                              Lotto
                              137 Prospect Street
                              Nanuet, New York  10954
        =========================================================
        =========================================================

        ------------------------------------------------------------






































FIDONEWS     --           13 May 85  00:01:17           Page 16

        ==========================================================
        Date:     May 9, 1985
        From:     Allen Miller
                  Fido 85

             I have made up a Fido 'business' card displaying the 
        Fido doggie logo, Fido system name, node number and tele-
        phone number.  I print a sheet of these on a laser printer 
        with 'cut on the dotted lines' lines.  This can be used as a 
        master to run copies on a copy machine to create nice 
        2" x 3.5" cards to carry in your wallet to hand out your 
        phone number.

             For any sysop that is interested and willing to send 
        $10.00 and a Self addressed stamped envelope, I will produce 
        a similar master sheet with your system information and 
        return to you.

             Mail your inquiries to me at:

             Allen Miller
             3153 Hanna Avenue
             Cincinnati, Ohio  45211

             Be sure and indicate your 1) System name, 2) node 
        number, 3) Sysop name, 4) system phone number and 5) baud 
        supported.  Here is an enlarged sample of the card.

        ---------------------------------------------------------------+
                                 __
              The World's First /  \       A l l e n's   B O A R D
                 BBS Network   /|oo \      F I D O   8 5
                 * FidoNet *  (_| _/_)
                               _ @/_ \    _     Allen Miller
                              |     | \   \\    Sysop
                              | (*) |  \   ))
                   ______     |__U__| /  \//
                  / FIDO \     _//|| _\   /     513/579-2587
                 (________)   (_/(_|(____/(jm)  2400/1200/300


        ---------------------------------------------------------------+






















FIDONEWS     --           13 May 85  00:01:18           Page 17

        ============================================================
                               NOTICES
        ============================================================
          *** W A R N I N G *** W A R N I N G *** W A R N I N G ***

                            PSHIFT Piracy Warning

        Someone has been spreading around a library called PSHIFT 
        (for Program/Shift), consisting of the files PS.EXE and 
        PSINST.EXE.  This is being billed as a freeware version of a 
        package called Memory/Shift.  

                         THIS IS STOLEN SOFTWARE!!!

        Someone apparently took an early copy of Memory/Shift, broke 
        the copy protection, and patched in a new name and the 
        banner "PUBLIC DOMAIN SOFTWARE".  The code is identical to 
        the original.  Reported versions of the pirate copy give the 
        author's name as "Ali Mulsti".

        Ezra Shapiro has spoken to Jim Buckley at North American 
        Business Systems (the owners of the package), and they are 
        aware of the problem.  NABS has no intentions of going after 
        sysops or BBS operators, but they would like to know who is 
        behind this.  If you know anything, please contact Jim at 
        314-534-7404, or write to him at:

            North American Business Systems
            3840 Lindell Blvd.
            St. Louis, MO  63108

        This appears to be a vicious act of vandalism, aimed at both 
        the software industry and BBS operators.  Please, if this 
        package has been uploaded to your system, GET RID OF IT!

        ------------------------------------------------------------
                         *** Calendar of Events ***

        17 May 85 The Next Occasional New York/New Jersey Sysop 
                  Meeting.  Same place as before, but we need a new 
                  host.

        19 May 85 Submissions deadline for next issue of Fidonews.  

        27 May 85 through 31 May 85; Spring 1985 DECUS symposium, 
                  New Orleans, LA.  Among other events, Kurt Reisler 
                  (sysop Fido 74) will give a 1 hour talk on Fido.  







        If you have any event you want listed in this calendar, 
        please send a note to node 107/375.  








