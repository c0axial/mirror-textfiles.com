FidoNet came together literally in one instant -- after months orç
years of accumulated thoughts and ideas, many or most otherç
peoples'.

Unless you use one of these damn things regularly, it's hard toç
understand, not because anyone is stupid, but because there's aç
number of assumptions that you have to make or understand beforeç
you get what ``network'' really means. 

A ``network'' is what you and all your friends are -- even beforeç
it became New-Agey to say so. You're all interconnected, in theç
sense that ``messages'' or whatever from one person to another,ç
get delivered or heard. Usually, you simply talk to them, inç
person or on the phone. Less important news, who's doing whatç
these days, etc, just sorta filters around, until everyoneç
(usually) hears about it. People sometimes add, subtract, orç
modify information, or simply tell fun stories.

Well -- the ``network'' part is the {\it how}, the connections.ç
It's usually indulgent to talk about informal human networks. Butç
for computers, they are so stupid you have to lead them to water,ç
and tell them where their mouths are. And to put water in it.

OK, so what does a computer ``network''? Why, whatever you tellç
them to, of course.

I will not attempt to explain to you how a computer stores text.ç
You've seen it done, and if you haven't, you'll simply have toç
take it on faith. In one sentence: each graphical symbol (letter,ç
puctuation marks, etc) are encoded numerically, and the computerç
stores {\it that}. OK, so now you know you can store ``text''.

The trick to a computer network -- interconnected computers withç
the ability to do with ``text'' what you do with your personalç
messages (lose them, pretend you didn't hear, tell the wrongç
person, etc) is to somehow wire the machines together. Computersç
are electrical devices, and so they need wires to connect themç
together. (Keep comments about radio etc to yourself.)

Stringing wires to and from every computer you might want toç
``network'' to is obviously not practical. But, there just soç
happens (probably\dots) to be a wire in your house that {\itç
does} run to everyone elses house -- the telephone system.

To cut short a hundred years of boring technological developmentç
-- there's a thing that, you put electrical signals into one end,ç
and it makes sound signals out the other end, so that it canç
essentially talk in rigid mathemetical tones. It can listen toç
this crap too. ``Talk'' here means simply transcribe, computerç
says ``1'', device talks ``high tone''\dots device hears ``highç
tone'', and talks ``1''. The thing is called a modem. You buyç
them in a store for \$75 or more.

So what you do is get one for every computer. One end connects toç
the computer, the other to the telephone line. Your secondç
telephone line, dedicated to this thing, because I can tell youç
you don't want to share the phone with a machine this stupid.

What happens when you do this? Absolutely nothing.

YOu can stare at, threaten and bang upon your computer all dayç
long, but it still ain't gonna let you write a letter until youç
run the word processor program. What if it was 1971, and thereç
were no word processor programs? You'd be shit out of luck,ç
that's what!

And this brings us back to the present dwelling upon the past --ç
FidoNet. There were ``computer networks'' at the time I wroteç
FidoNet, but none that a mere mortal could have. (And I was toldç
in no uncertain terms that it was (variously) impossible to do onç
a personal computer, or already done, why bother.)

Digression once again. 

About 1979 or so I had a decent (for the time) CP/M computer, forç
it's time the equivelant to a PC clone 286. I could run most anyç
commercial program, and I wrote my own. I bought what was a bitç
of exotica from a surplus store -- an accoustic modem, which is aç
modem that literally made screaming tones, with what looked likeç
ear muffs into which you jammed the telephone handset afterç
dialing what you hoped was a computer on the other end. I used aç
barbaric program that simply sent every keyboard character to theç
modem, and took whatever data appeared form the modem, to theç
local console screen. Lo, you could type to and from the remoteç
computer.

What the remote computer ran was a program called a Bulletinç
Board System, or BBS, which were invented by Ward Christensen andç
Randy Suess, in Chicago, in 1977 or so. It was simply anotherç
decent-sized computer, with a slightly more sophisticated modemç
that could tell when the phone was ringing, and answer itç
automatically (it connected directly to the phone wires, insteadç
of my primitive ear muffs).

What was unique was that Ward'n'Randy had written a program thatç
emulated the social structure (if you will) of a supermarketç
bulletin board. There were about 200 slots for text messages.ç
After calling in, you could post messages (type them in by hand),ç
read existing messages (after specifying which one, by number),ç
and you could do things that you couldn't do on a supermarketç
bulletin board -- concepts like the ``next'' or ``previous''ç
message (the one posted after or before the one you just read),ç
search for a word within messages, and so on. (These additionalç
things or functions are called ``features'' and like in a movieç
theatre, patrons (users) sit and wait to see what's next. It canç
lead to a disease peculiar to computer programmers calledç
``creeping featuritis''.)

Ever listen to ham radio? Boooring. Unless you are into it -- inç
which case drawn out detailed conversations on antennaç
particulars, including number of elements, where bought, 
bad-weather and bird-shit tall tales, so'n'so's fell down, howç
those screws you sold me got rusty, and so on are excruciatinglyç
interesting.

Which they were to me, and a fe thousand others, at that time.ç
Mainly it was programmers talking about programmer junk. I can'tç
recall a single thing.

In Boston in 1980 there were maybe a dozen? BBS's total. Thereç
were two I called regularly; NECS, the New England COmputerç
Society BBS (I was a member for a while) and the cnode, basedç
upon a software system I never really did understand very well,ç
run by a totally cool guy whose name escapes my now, in Andoverç
MA. ANyways, (I am getting back to FidoNet here, hold on) on theç
cnode someone proposed a ``east coast -- west coast computerç
network'', with the incomplete idea of interconnecting a zillionç
computers, enough so that there'd be one in every local-dialingç
area, so you could get a message from one computer to another byç
hopping across each local-call area. Ugh. A mind-bogglingç
prospect.\footnote*{And ten years later, it has almost happenedç
-- the FidoNet has gotten so dense in the Eastern metrosprawlç
that most mail I think from DE to DC to NJ is sent this way. Itç
is alleged to involve incomprehensibly complex routing.}

So I read that, along with many other people, and many otherç
messages on many other subjects. I never forgot it though. And Iç
never remembered the author, who persisted in his folly for quiteç
some time. (Silly person.)

I worked for Phoenix Software, for Neilç
Colvin\footnote\dag{Though we frequently got on each others'ç
nerves, Neil is probably the best person I've ever worked for,ç
and the most honest and least cheapskate, and occasionallyç
downright generous. Once for no reason other than they wereç
totally cool, he bought a half-dozen of the then-extreme-tech 
HP-16C programmers calculators, just to give to his employees.ç
Now that's hardcore techie! And I still absolutely relish mine;ç
nine years later, I positively love using it, unlike {\it any}ç
other techie tool I have.}, at home, on my Multibuss-basedç
computer I got for implementing CP/M on it for the manufacturerç
(Comark Inc). Since we all worked at home, 40 miles or moreç
apart, delivering programs and such was a drag; or worse, afterç
driving from West Medford to North Easton, finding out I forgotç
some damn file or other. So we had modems (by this time almostç
useful; Hayes Smartmodem 1200's, direct-connect no more earç
muffs), and the same barbaric software, and we would call eachç
other up and say ``OK, I have the program for you. Hang up, andç
the next call will be my modem calling'' then I would issue theç
appropriate dial commands to my modem, and Neil would wait forç
the phone to ring, then command his modem to answer the phone,ç
and if we were lucky (someone else didn't call, all 10,000 of theç
critical parameters were set properly, etc) you got the {\ttç
CONNECT 1200} message on your screen. You could then proceed toç
type at each other (about as useful as calling on the telephone,ç
then putting a rag over your your mouth, and mumbling) and then,ç
the magic: transmitting a program or text file from one computerç
to another. (I'm skipping the arcane history and development ofç
what is known as ``file transfer protocols'', or 
``error-correcting protocols'', how the computers actuallyç
transmit computer files from one computer to another, phone linesç
or not. Explaining them now would only make things worse.)

It was better than driving back the 40 or so miles, to say theç
least, even though the whole thing just sucked. Never mind theç
phone bills.

Right before I moved to San Francisco, December `83, I even had aç
simple program that would make my modem answer the phone, make meç
enter a password, and if I got it right, I could operate myç
computer remotely! 

January 1984 was when the telephone company ``break-up'' (sic)ç
was to happen, and I took advantage of it to get a free modemç
from Ma Bell. I was having trouble to get any modem to work atç
high speed over my phone line. The same modems would work on anyç
other line, but not mine. It was obviously the phone line, butç
just try to convince the telco about that. They said, andç
rightly, that they only guarenteed voice quality, and it soundedç
fine. So, I ordered an AT\&T modem, and had {\it them} installç
it, knowing it would fail too. And it did. When the repair guyç
would come over, he would shit bricks when he saw the AT\&Tç
modem. The third repair guy was cool though, and interested inç
modems and such. So he order a frequency-spectrum analysis done,ç
and found a ``bad spot'' that suppressed certain frequencies. Butç
nope, there was nothing they could do about it.

So when I moved I swiped it. I refused to pay the bill (\$250ç
installation, \$40/month, in 1984!) since it never worked, andç
called from SF to disconnect my service. ``And where is theç
equipment?'' the telco drone asks. ``Right here'' said I. Butç
then, it was New England Bell who installed AT\&T equipment, andç
they were trapped in bureaucratic deadlock, because they ewre nowç
all ``separate''! . I never heard from them again.

So I'm in San Francisco, and I have an extra computer (an Otronaç
Attach\'e 8:16), and now, an extra modem. I've got all thisç
techie files'n'stuff, and not much to do. BBS technology had ofç
course expanded


