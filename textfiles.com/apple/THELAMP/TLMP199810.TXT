[HEA]    _____________________   ___                                   _    |___   ______________| |   |                                 | |        |  | _             |   |                                 | |        |  || |            |   |                                 | |        |  || |            |   |                                 | |        |  || |            |   |   ____ _   _ _   _   ______     | |        |  || |            |   |  / __ \ | | / \_/ \  | ___ \    | |        |  || |__   ____   |   | / /  \  | |  /\ /\ \ | |  \ \   | |        |  ||  _ \ |  _ \  |   | \ \__/  | | | |_|| | | |__/ /   | |        |  || | | || |_||  |   |  \___/|_| |_|    |_| | ____/    |_|        |  || | | || |__   |   |____________________  | |         _        |__||_| |_|\____/  |________________________| | |        |_|                                                      | |         Lighting Your Apple II Path On Delphi        | |                                                      |_|                       >>> WELCOME TO THE LAMP! <<<                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                        FREEWARE FAVORITES: Quit-To              AND THE BEST OF THE A2 AND A2PRO MESSAGE BOARDS            "Teaching the Apple II user how to fish since 1998" :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: The Lamp!            An Onipa'a Software Production       Vol. 1, No. 10 :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: Publisher & Editor.......................Ryan M. Suenaga, M.S.W., L.S.W. Internet Email........................................thelamp@delphi.com ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::                             TABLE OF CONTENTS                             ~~~~~~~~~~~~~~~~~                             October 15, 1998OPENING PITCH     Never Mind The iMac, Here's The iIgs --------------------------- [OPN]A FUNNY THING HAPPENED                                                [FOR]     The Heat Is On ------------------------------------------------- [HET]     Miscellanea                                                      [MSC]     Rumor Mill ----------------------------------------------------- [RMR]     Public Postings                                                  [PUB]     Best Of The Best ----------------------------------------------- [BOB]A2Pro_DUCTIVITY     Checking out A2PRO on Delphi ----------------------------------- [A2P]FREEWARE FAVORITES     Quit-TO -------------------------------------------------------- [FRE]EXTRA INNINGS     About The Lamp! ------------------------------------------------ [INN]                                [*] [*] [*]READING THE LAMP!   The index system used by The Lamp! is designed to make"""""""""""""""""   your reading easier.  To use this system, load thisissue into any word processor or text editor.  In the index you will findsomething like:EXTRA INNINGS     About The Lamp! ------------------------------------------------ [INN]To read this article, simply use your search or find command to locate[INN].  There is a similar tag at the end of each article: [EOA].         :: DISCUSSED ON DELPHI ::::::::::::::::::::::::::::::::::         :                                                       :         :    A little inaccuracy saves a lot of explanation.    :         :                                                       :         ::::::::::::::::::::::::::::::::::::::::: TONYW1 ::::::::[EOA][OPN]------------------------------                     OPENING PITCH |-----------------------------------From The Editor"""""""""""""""by Ryan M. Suenaga, B.A., M.S.W., L.S.W.                    [thelamp@delphi.com]                   NEVER MIND THE iMAC, HERE'S THE iIGS                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~     Our old friends at Apple Computer, Inc. made quite a stir when theybrought out the _iMac_.  Wildly popular and at least as controversial, the_iMac_ is, if nothing else, a very different kind of computer.  More likethe "appliance" that The Rest Of Them have been wanting since 1984, anddesigned from the bottom up for the Internet.     The Apple II has never had the sex appeal or the controversy of theMacintosh, particularly its newest member, and it wasn't designed for theInternet, because the Internet as we know it didn't exist when the Apple IIwas designed.  What the Apple II was designed for, from the bottom up, wasversatility, and in 1998 it was that very versatility that brought theApple II someplace that didn't even exist in 1977.     In late September, _Marinetti 2.0_ arrived for the eagerly waitingApple II community, proving once again, even though it couldn't be done, itwas done.     We may never create the splash that Apple Computer, Inc. does with ourApple II's, but once again, we're on common ground.     Apple II Forever.  And Forever on the Internet.                                [*] [*] [*]     Hard To Say I'm Sorry Department: While I've never gotten a flood ofmail on _The Lamp!_, I do get the occasional trickle.  However, at somepoint, Delphi discontinued forwarding of its email from Web based accountsto other email accounts and one piece of email in particular from JeffBlakeney, Dean of the Apple II University on Delphi, announcing a newcourse that deserved coverage here in _The Lamp!_ lay dormant in the abyss.I found the mail only after sending a POP3 mail client out after my lostthelamp@delphi.com email after chatting with Just Dave Miller on Delphi fora bit.  My apologies to Jeff and to those of you who read _The Lamp!_ eachmonth.  The gist of the letter containing the announcement is in one ofJeff's forum posts printed this month.Ryanthelamp@delphi.comASCII ART BEGINS_________  _                     _                                      _|__   __| | |                   | |                                    | |   | |    | |                   | |                                    | |   | |    | |___     ____       | |       _____   __ ___ _   _ _____   | |   | |    | ___ \   / __ \      | |      /____ \  | v   v | | v ___ \  | |   | |    | |  | | | /__\ \     | |       ____| | | /\ /\ | |  /   \ \ | |   | |    | |  | | | _____|     | |      / ___  | | || || | | |    | | |_|   | |    | |  | | | |_____     | |____  | |__| | | || || | |  \___/ /  _   |_|    |_|  |_| \______|     |______| \____^_| |_||_||_| | |\____/  |_|                                                            | |                                                            | |                                                            |_|ASCII ART ENDS[EOA][OPN]------------------------------     A FUNNY THING HAPPENED. . . . |-----------------------------------Checking out A2 on Delphi"""""""""""""""""""""""""by Ryan M. Suenaga, B.A., M.S.W., L.S.W.                    [thelamp@delphi.com]       * The Heat Is On              * Miscellanea                     * Rumor Mill                            * Public Postings                                        * Best Of The Best                              THE HEAT IS ON                              """"""""""""""     [*] Telecommunications         ....... Finally--PPP     [*] User Groups & Publications ....... Wanted: A Bug Free NiftySpell     [*] Productivity Software      ....... The New Appleworks     [*] Hardware Hacker            ....... IDE?  SCSI?  Apple II?     [*] Productivity Software      ....... !Help! I Need Somebody                                MISCELLANEA                                """""""""""MAXIMUM SERIAL PORT SPEEDS ON THE //C+   The issue is not the serial port""""""""""""""""""""""""""""""""""""""   chips themselves, it is simplythat there aren't the proper pins on the serial port connector to do aproper hardware handshake, and XON/XOFF is not sufficient at speeds higherthan 9600 in the vast majority of cases.That said, I have had the //c+ working at 19200, but not reliably andrepeatedly.- Ryan M. Suenaga, M.S.W., L.S.W.  --  rsuenaga@apple2.org Editor and Publisher, _The Lamp!_, published monthly on Delphi Posted by PTMM v2.5 - The integrated information solution                       (RSUENAGA, 16342, GO COM A2)SQUEEZING OUT FRESH JUICED   The September issue of Juiced.GS (V3I3) went""""""""""""""""""""""""""   to the printer on Wednesday morning, andthey're hoping to have it back in my hands by Friday evening, Mondaymorning at the latest.If all goes well, I may get some of the issues out in Saturday's mail, therest in Monday's mail.At any rate, it won't be long now!FYI, this is a 24-page issue with lots of goodies, including reviews of thenewest IIGS software and a complete report (with photos!) from Kfest '98. Max Jones, Juiced.GS http://www.wbwip.com/juiced.gs Delivered by Spectrum 2.1 and Crock O' Gold 2.5                       (JUICEDGS, 16159, GO COM A2)<<<<<   GreetinGS!"""""The September issue of Juiced.GS is printed and ready for final processing.It would be going out in Tuesday's mail, but I got very busy at work todayand the print shop had just closed when I arrived to pick up the magazines.DARNIT!!!Never fear, I will pick them early tomorrow. Bar famine, plague, naturaldisaster, or another Ken Starr report, they will be in the mail earlyWednesday morning.Sorry for the slight delay. Your issues should begin arriving late thisweek. Max Jones, Juiced.GS http://www.wbwip.com/juiced.gs Delivered by Spectrum 2.1 and Crock O' Gold 2.5                       (JUICEDGS, 16257, GO COM A2)<<<<<   The September issue of Juiced.GS went out in Wednesday's mail."""""My guess is that it will begin arriving in U.S. mail boxes on Friday, andin foreign locations by the middle of next week.Hope you all enjoy the issue!I will be along in a few days with a complete index of the issue, providedmainly so those who don't subscribe can see what they're missing. :-) Max Jones, Juiced.GS http://www.wbwip.com/juiced.gs Delivered by Spectrum 2.1 and Crock O' Gold 2.5                       (JUICEDGS, 16327, GO COM A2)KFEST '99 LOGO FROM ENGLAND   Thanks to Ewen Wannop, the new logo is done!!"""""""""""""""""""""""""""You can see it at the official KFest webpage -        http://www.kfest.orgThe Big Cheese Cindy Adams -- cindyadams@delphi.com http://www.kfest.org                      (CINDYADAMS, 15844, GO COM A2)IIGS SYSTEM SOFTWARE FROM APPLE FTP VIA THE MAC   It is not 100% clear to"""""""""""""""""""""""""""""""""""""""""""""""   me, but I'm guessingyou're asking if there's any way to download the Apple IIgs system softwarewith your Macintosh and have it be converted into Apple IIgs usable disks.If this is indeed what you're asking, the answer is yes.There are several ways to go about doing this, but the simplest way wouldbe to get disk copy images of the IIgs system software and use Disk Copy orShrinkWrap or an equivalent on your Mac to convert them into usable AppleIIgs ProDOS 800k disks.If you access the files at:ftp://ftp.apple.com/Apple_Support_Area/Apple.Software.Updates/US/Apple_II    /Apple_IIGS_System_6.0.1(all on one line) the disks with the .sea.bin suffixes are the ones inDiskCopy format. - Ryan M. Suenaga, M.S.W., L.S.W. - rsuenaga@apple2.org Editor and Publisher, _The Lamp!_, published monthly on Delphi "Teaching the Apple II user how to fish since 1982" Posted by PTMM v2.5 - The integrated information solution                       (RSUENAGA, 16477, GO COM A2)SMALL HARD DRIVES ARE BIG ENOUGH FOR THE IIGS   There are no disk repair"""""""""""""""""""""""""""""""""""""""""""""   utilities for HFS volumesthat will work on the GS.So, while you can set up a huge HFS partition on the GS, and use it, whensomething goes wrong with the data on the disk (and something WILL, trustme on that), you have no way of repairing it.And, really, for most people, 20-50 megs is entirely adequate for an AppleII.Gary R. Utter                         (UTTER, 15708, GO COM A2)>>>>>   A combination of what Gary said (no HFS repair utilities, adequate"""""   space with small hard drives) and the fact that the Focus isextraordinarily easy to deal with (just pop it in a slot, no cables,termination, IDs, just go).-Ryan M. Suenaga, M.S.W., L.S.W. - rsuenaga@apple2.orgEditor and Publisher, _The Lamp!_, published monthly on DelphiDelivered via FFNSS alpha .6                       (RSUENAGA, 15725, GO COM A2)>>>>>   Because for most people that's all they need."""""GS/OS stopped growing, it's not a drive hog. :)With the ProDOS limit being 32MB per partition, and not everyone wanting tohave their screen filled with partitions like the one IIgs I drag aroundwith me, a 200MB drive is most anyone really needs for just your averagecomputer usage. HFS is not the answer. When, not if, When it crashes,unless you have a Mac handy you can't fix it. ..and even if there is a Machandy chances are the drive will not have the Mac driver installed so itwont be mountable for the average user to run Disk First Aid and fix it. Ifyou have the drive on a RAMFast, forget it. The Mac driver will have beeneaten already. If you set the drive up with Chinook SCSI, there is nodriver and probably no space to add one. If you used Advanced Disk Util, itwasn't installed but space exists, but most other Mac SCSI utils will notinstall the driver due to 'lack of space'.So, for all but seasoned users, HFS is out of the question in my opinion,it will go corrupt, patch or no patch, Mac or IIgs formatted/initialized...Tony                        (T_DIAZ, 15784, GO COM A2)PROS AND CONS OF .PDF DOCUMENTATION   PDF is cool, and it certainly has its"""""""""""""""""""""""""""""""""""   uses, but for standard text documentsit's a complete waste of disk space and bandwidth. I see no point in takinga perfectly good 300K text manual and converting it into a multiplemegabyte "portable" format just to preserve some pretty formatting. And howdifficult would it be to make a plain text version available right next tothe pdf version?The cost of printing may have gone up in recent years, but by switching toelectronic documentation the software and hardware manufacturers certainlyhaven't reduced their prices. In fact, the cost has gone way up when youconsider that you have to use your own paper (tons of it) if you reallywant a hardcopy of their manuals.I applaud USR (3Com) for including printed installation and basic usagemanuals, but then that's one of the reasons you pay extra for their modems.However, I vote thumbs down on their discontinuation of plan textelectronic manuals. I spent a good 20 minutes on their toll-free supportnumber (a benefit of paying for the Courier, BTW) and finally arranged tohave a text manual sent to me. ----------------------------------------------------- Tony Ward, A2 Database Manager [Delivered with Spectrum 2.1 and Crock O' Gold 2.5] -- To be intoxicated is to feel sophisticated but not be able to say it.                        (TONYW1, 15875, GO COM A2)30 WAYS ULTRAMACROS 4 IS BETTER THAN ULTRAMACROS 3   According to the July,""""""""""""""""""""""""""""""""""""""""""""""""""   1992 issue of TheAppleWorks Forum, UltraMacros 4 added 30 new commands to UltraMacros.According to the article, UM 4.x requires (at least) an Enhanced IIe with256k of RAM.Joe Kohn                       (JOE_KOHN, 15966, GO COM A2)WEBWORKS GS AND HIERARCHIC   WebWorks GS may work with the 1.6.1 version of""""""""""""""""""""""""""   Hierarchic; however, I've been advised bythose in the know that I can't guarantee this, so you should be sure toupgrade to the CDev version.Sorry for this mixup -- I've corrected the WebWorks GS master disk I keepso this won't happen again.Joe will be sending replacement disks to everyone that got an incorrectWebWorks GS disk.Eric "Sheppy" ShepherdMacintosh & PowerPC Programmers Forum                        (SHEPPY, 16306, GO COM A2)GSHISEN ANONYMOUS   Well, sooner or later, I suppose, it just had to"""""""""""""""""   happen...I'd like to call this meeting to order, and introduce to you the newestmember of our online self-help group..."Hello. My name is Joe and I'm an addict.""One day, not that long ago, life looked like easy street, but there weredangers at my door. I was innocent and quite naive, yet I trembled as Ipressed the download button. Little did I realize at the time, but clickingthat button changed my life. Ever since, I've been unable to eat or sleep,and all I can think about is getting my next fix. I need help. I am anaddict. I cannot control my desire to play GShisen.""Please help me to understand my addiction. You can do that by downloadingKelvin Sherlock's GShisen, and then you can share with me how you were ableto avoid addiction. Please do that at once, as my addiction is gettingworse by the minute. I need help. I am an addict. GShisen - it's my wifeand it's my life."Welcome to GShisen Anonymous, Joe. You've taken a very positive step byadmitting your addiction, and you are commended for being the first toadmit your addiction to GShisen; you've paved the way for many others whosuffer from GShisen addiction. With help Joe, you and others can break thehorrible cycle of addiction to GShisen.If you, or someone you love, suffers from the same symptoms as poor Joe,you too can get help. Just pick up your phone and dial 1-800-GShisen;sympathetic operators are standing by.                       (JOE_KOHN, 16437, GO COM A2)>>>>>   folks"""""there is an evil man among usKelvin Sherlock has produced what he jokingly calls a game (GShisen)Be warned ... this is not a game ... this thing takes over your lifeExcuse me while I go and play another few dozen gamesWell done Kelvin!!!!Kevin Noonan                       (GSWOMBAT, 16484, GO COM A2)PRINTING TO A LASERWRITER VIA APPLEWORKS   Easiest thing in the world! I'm""""""""""""""""""""""""""""""""""""""""   assuming that you have a IIgs,since the WorkStation (AppleTalk) cards for a IIe are sort of rare. I'malso assuming that you're using a PostScript laser printer, for similarreasons. Now, in AppleWorks, set up a custom printer called "Laser" orwhatever. It should be just like an ImageWriter printer, but should printto the slot that is turned on for AppleTalk. That's slot 7 in a ROM 01,probably slot 1 in a ROM 3. Now quit back to the Finder and get the NetPrinter Control Panel (Select Apple menu, Control Panels, Net Printer...).Click on the button for uploading the ImageWriter Emulator to the printer.This convinces the LaserWriter, for as long as you don't turn it off, thatit is actually an ImageWriter. Now you can print from AppleWorks as normal,just using the "Laser" custom printer. The proportional fonts "P1" and "P2"will print in the Times font. I hope that this answers your question.                        (GARETH, 15776, GO COM A2)>>>>>   It's been a _long_ time, so I may be fuzzy on these details."""""To print from AppleWorks to a LaserWriter Plus with a //c+, I'd suggestusing either Diablo Emulation mode, or using Imagewriter Emulation mode.I _think_ Diablo Emulation mode can be selected by a DIP switch or frontpanel control on the printer. Otherwise, it is _probably_ selected by thefollowing software command:              statusdict begin x setsoftwareiomodewhere x = an integer between 1 and 5. I don't have the info handy.To use Imagewriter Emulation mode, the text file 'IWEM' (found on GS/OSsystem disks) must be sent to the printer. On a IIGS or //e withworkstation card, this is usually handled as part of the Appletalkinitialization process. Then, before every print job, the Appletalkfirmware prepends the command '_WBJ_' to invoke the emulator.On a //c+, you would do this manually, by sending the IWEM file to theprinter and prepending the _WBJ_ to the print job. Alternatively, it seemsI once added the '_WBJ_' command to the end of the IWEM file and also setan infinite job timeout on the printer so that I never had to worry aboutsending the '_WBJ_' command again.In summary, I'd recommend option #1 as it is simpler. But, if Imagewriteremulation is important, I'll put on my thinking cap and give you exactinstructions on how to send the IWEM file manually with the mods Imentioned. It may just take me a week or so to get to it.BTW, AppleWorks 5.1 works well for sending the PostScript text files andcommands to the LaserWriter. You just need to set up a special customprinter that sends harmless CTRL-J's at the beginning of each line insteadof the normal LPI and CPI control commands.Alternatively, a fine program called ProTerm 3.x does a great job ofinterfacing with a PostScript printer. You may have heard of it. <g> <g>Hugh...                       (HUGHHOOD, 16377, GO COM A2)EXTENDED KEYBOARD LIGHT SUPPORT ON THE IIGS   The lights on an extended"""""""""""""""""""""""""""""""""""""""""""   keyboard (any brand) won'twork on the IIgs unless you install a system extra to activate them. Theexception is the ROM 3 IIgs, which I think automatically supports the capslock light. I use a tiny (and very interrupt friendly) init called Lightsfrom an old issue of 8/16 Central which lets me assign various functions tothe lights. A similar, and much more recent, option is Sheppy'sKeyNotifier.To activate the extended keys, I use Bill Tudor's Keyboard Extender. ----------------------------------------------------- Tony Ward, A2 Database Manager [Delivered with Spectrum 2.1 and Crock O' Gold 2.5] -- Is virus a 'micro' organism?                        (TONYW1, 15880, GO COM A2)ANOTHER TRIP TO 6502 MEMORY LANE   Not only did I use a tape drive for the""""""""""""""""""""""""""""""""   first few months that I owned my AppleII, I also bought my first TV to serve as a monitor.The first assembler I ever used on an Apple II was tape based, too--and theeditor was on a different tape from the assembler. A typical session was:1. Load the editor.2. Enter a program.3. Load the assembler.4. Assemble the program.5. Run the program. (crash)6. Go to step 1.I never had much sympathy when people complained about the speed of adevelopment system after that. :)Mike Westerfield                       (BYTEWORKS, 16039, GO COM A2)IDE VS. SCSI, APPLE II STYLE   IDE = Integrated Drive Electronics.""""""""""""""""""""""""""""   Virtually everything needed to connect thistype of drive to an Intel-compatible type computer is included in the driveitself, and due to market forces, it is usually available cheap.  However,don't think that means you can't use it on other computers.  For instance,many recent Macs use IDE drives, and a lot of Apple II hard drive setupswere IDE based, including the Vulcan, Innerdrive, Focus, Turbo IDE, andMicrodrive setups.SCSI = Small Computer Systems Interface.  This is what we've been using onApple II's and Macs for years.You can get a pretty decent primer on IDE and its successors at:http://www.netmeg.net/faq/computers/hardware/pc/enhanced-ideIf you want a pretty decent primer on SCSI, you can check:http://www.cis.ohio-state.edu/hypertext/faq/usenet/scsi-faq/top.htmlWith the appropriate controller (such as //SHH Systeme's TurboIDE,Microdrive, or Microdrive Turbo), you certainly can use an IDE drive on anApple II. - Ryan M. Suenaga, M.S.W., L.S.W. - rsuenaga@apple2.org Editor and Publisher, _The Lamp!_, published monthly on Delphi "Teaching the Apple II user how to fish since 1982" Posted by PTMM v2.5 - The integrated information solution                       (RSUENAGA, 15851, GO COM A2)CD ROM FORMATS AND THE APPLE II   Most commonly with an Apple II, the CD"""""""""""""""""""""""""""""""   Roms you encounter will have partitionsformatted as either High Sierra (ISO 9660 compatible, supposedly), HFS, orProDOS.It's possible to have CD Roms formatted as other operating systems too, butthat's less common. - Ryan M. Suenaga, M.S.W., L.S.W. - rsuenaga@apple2.org Editor and Publisher, _The Lamp!_, published monthly on Delphi "Teaching the Apple II user how to fish since 1982" Posted by PTMM v2.5 - The integrated information solution                       (RSUENAGA, 16213, GO COM A2)AND WHO SAID APPLE II'S AREN'T MADE ANYMORE?   Aw, come on, Ryan. The""""""""""""""""""""""""""""""""""""""""""""   1400cs _is_ an Apple II. Itjust runs that "other" O/S, too. ;)In fact, I developed a lot of GSoft BASIC on my 1400cs. (The rest wasdeveloped on my other Apple II, my M*Power 200 MHz 604e tower computer.)Mike Westerfield                       (BYTEWORKS, 16038, GO COM A2)>>>>>   Okay, okay. . . I admit it.  The Apple II I use the most nowadays"""""   is my 1400cs as well.  However, every week I use every single AppleII I have set up here, particularly my //c+, which I think might be thecoolest //c+ in captivity (1 meg memory, 40 meg hard drive, LCD screen, //cET monitor, //c Color Composite monitor, mouse, modem, clock :) except forthose weeks I forget about my other portable Apple II, the Duo 2300c ;-)In fact, this message is going to be delivered by the very Apple II 1400csI mentioned above and ProTERM 3 via the in development Fat Free Non StickSpray scripts.-Ryan M. Suenaga, M.S.W., L.S.W. - rsuenaga@apple2.orgEditor and Publisher, _The Lamp!_, published monthly on DelphiDelivered via FFNSS alpha .77 -- beta coming soon                       (RSUENAGA, 16061, GO COM A2)DO YOU REMEMBER. . . CV TECH?   I was out scrounging in one of my favorite"""""""""""""""""""""""""""""   part dumps today and came across a CV TechGS RAM card. It appears to be equipped with 1MB DRAMs, only the top row isfilled -- so it's a 2 meg board, expandable to 4...(right?) and there isalso an extra slot next to the card.The CV Tech stuff came out long after I first left the Apple // scene, so Iam ignorant of card's configuration and expansion capabilities. Any helpwould be appreciated, thanks in advance.1.) Specifically which DRAMs are required to finish the board?2.) What goes into the extra slot?3.) Are there docs and util software available anywhere online (legally)?                        (SFAHEY, 16042, GO COM A2)>>>>>   RE: CV Tech GS Memory Board""""" >  1.) Specifically which DRAMs are required to finish the board?The chips are 1Mb by 1 DRAM memory chips.  You must use 120ns rated orfaster chips. >  2.) What goes into the extra slot?Any other GS memory board up to 4Mb in capacity, that will fit between theCV Tech card and the GS case (this can be a tight fit).  You'll have tomake sure that there is some sort of insulated spacer between thepiggy-back board and the GS case, and maybe between the two boards, if oneis twisted enough that the wire leads from the CV Tech board hit the chipleads on the ICs of the add-on board. The docs indicate that anypiggy-backed cards must be fully populated, although the CV Tech card doesnot have to be fully populated in this configuration. >  3.) Are there docs and util software available anywhere online >  (legally)?There was no software provided with the card.  The documentation I got was4 printed pages; only two of which were meaningful for usage.  The othertwo were the title page and warranty information.One thing you need to establish is whether this is a Rev A or Rev B board.I have a Rev B board.  Someone else will have to give you information onthe Rev A board.  The Rev B board has jumpers that are used to configurethe card for the amount of memory installed on the card, as follows:    1Mb       2Mb       3Mb       4Mb   -----     -----     -----     -----   A B C     A B C     A B C     A B C2  O=O O     O=O O     O O=O     O O=O1  O=O O     O O=O     O=O O     O O=O - Don (IronTooth)Delivered by my ANSITerm off-line reader scripts...                         They're OLRight!                       (DZAHNISER, 16047, GO COM A2)>>>>>   This was/is a known problem, and there is a fix. It requires a"""""   specific ROM chip that CV Tech supplied. I had a fully populatedRev A card with a fully populated Apple 1meg card in the piggy backconnector, for a total of 5 megs that was recognized on my ROM 01 GS. But,it required the special ROM chip.I doubt that Sequential carries that chip, but you could give them a try. Iupdated the card to a Rev B, so I no longer have the chip.Jeff CarrCruising the 'rainbow' path provided by:Spectrum v2.1 and Crock O' Gold v2.5                       (LUMITECH, 16095, GO COM A2)<<<<<   I've been looking for RAM for my CV Tech GS memory board and"""""   compiled a (short) list of compatible DRAMs. I thought I'd share itwith everyone -- and if anyone is doing a FAQ, feel free to use the list.I got lucky, the board is a revision "B". Thanks everyone!Toshiba TC511000P-85 1Mx1 page mode DRAMToshiba TC511000P-10 1Mx1 page mode DRAMSamsung KM41C1000P-10 1Mx1 page mode DRAMSamsung KM41C1000P-80 1Mx1 page mode DRAMMitsubishi M5M4100AP 1Mx1 page mode DRAMMotorola MCM511000P-10 1Mx1 page mode DRAMMotorola MCM511000P-85 1Mx1 page mode DRAMSiemens HYB511000-85 1Mx1 page mode DRAMSiemens HYB511000-70 1Mx1 page mode DRAMIntel P21010-08 1Mx1 page mode DRAMIntel P21010-10 1Mx1 page mode DRAM                        (SFAHEY, 16150, GO COM A2)SECOND SIGHT SOFTWARE   Seriously, I'll let Michael expand further on"""""""""""""""""""""   Facelift but for the most part these are theprograms which are SS specific or aware:Graphic/Animation viewers:==========================jpeGSSecondView (comes with card)SecondView Pro (commercial -- ?still available?)GView (shareware)ThirdviewFlicGS (view FLI animation files)viewDL (view DL animations)A SS specific fractal generating program.Reference:==========DiscQuest (CD-ROM reference 'engine' which is SS aware)DiscQuest Encyclopedia (A 1995 CD-ROM encyclopedia 'engine' which is SSaware. I think the encyclopedia CD-ROM is Compton's for the MAC or PC)Games:======FalfusCogito Returns (a SS specific mod of the original)Omega-GS (Text screen based game employing SS text screen)Miscellaneous:==============CDA which gives SS screen proper IIgs border color.Facelift (Universal IIgs video API. Currently handles IIgs and SS video).SSRomFix (System INIT which fixes a bug in SS ROM)This is off the top of my head. I'm sure there are other programs out therethat I don't recall at the moment.> Does the toolbox patches you mention let existing software run> accelerated on the SSII card?Again, Michael can best answer this. But, the short answer is no. Thepatches are intended to allow greater resolution for IIgs Desktop basedprograms (if my memory serves me here...)Paul.Paul Schultzschultp@delphi.comsent your way via Spectrum 2.1 and Crock O' Gold 2.5                        (SCHULTP, 16382, GO COM A2)>>>>> > Does the toolbox patches you mention let existing software""""" > run accelerated on the SSII card?Not as such. There might be some speed improvement due to the memory layoutof the VGA modes used (8-bit pixels instead of 2- or 4-bit in SHR modes),and some rectangular scrolling operations that are done completely on thecard are quite fast. But I decided to patch in at a fairly low level,hoping to reduce the amount of work involved (it turned out to be thereverse, of course), so most of the higher-level drawing code is still thesame. This choice also avoided the problem of having to come up with my ownregion manipulation code, as Apple has a patent on their's.> In 1988 I designed an accelerated graphics card for the GS> using a TI 34010 chip, only I did not finish the project since> I was focused on graduating from college.Oh, that's a shame that the card never got finished. I would have lovedone. I originally came up with the design for Facelift well before the SSwas even rumoured, and at that point I was looking at that very chip as agood candidate. This was several years after you, though (1992-3). I wasquite disappointed when Sequential ended up choosing a lame SVGA chip fortheir card.> The difficulty as I remember it is that if even if you> shadow all screen writes to the new card any program directly> reading back the screen data would read the old screen memory> which would not be updated.Right, there's just no way around it. Full compatibility isn't possible ifyou also want to extend the system, and try to move work off to the card.My plan was to only support programs that went strictly through thetoolbox, and shut off the patches for incompatible programs. By allowingprograms direct access to the screen memory, even in a prescribed way,Apple made it very difficult to extend the system. In many ways, it seemsthat Apple intentionally crippled the system, perhaps to avoid competitionwith the Mac.-- Michael                          (SAR, 16489, GO COM A2)FACELIFT DEVELOPMENT KIT STATUS   Yes, the latest released version of the"""""""""""""""""""""""""""""""   development kit (v0.6b1) is available at:<ftp://trenco.myrias.com/users/mhackett/FaceliftDev06b1.bny>(Replace .bny with .bsq for a BinSCII version, if you prefer.)Note that this is for programmers only -- there are no demos or anything.The archive includes all the docs, the library itself, and headers forORCA/M and C. It does not include the actual CDEV that you will need to runyour programs, however. If, after reading the docs, and starting to playwith the library, you need the CDEV to continue with your work, just dropme an email and I'll set you up with what you need.BTW, just to be clear, the QuickDraw/Toolbox patches are not available inany way, shape, or form at this time.-- Michael                          (SAR, 16492, GO COM A2)SECOND SIGHT SPECTRUM DISPLAY BUG?   Ewen, or maybe I'd better say Richard""""""""""""""""""""""""""""""""""   since I think he wrote the SS-awareANSI display driver for Spectrum :-)I just ran across a bug with the SecondSight ANSI display with Spectrum2.1. I actually encountered this about a year back and e-mailed SHS butsince I became re-acquainted with this bug I thought I'd relay it here aswell.The bug occurs while in the Spectrum ANSI display and you disconnect fromyour ISP (I use the ISP's signal for disconnect...CTRL-D from their mainHOST: prompt). Anyway, you are left in the ANSI display. Now here's thebug: If you use OA-D to try to bring up the Connect Dialog box, you areleft staring at the ANSI display. On investigation, (i.e. hooking up a IIgsmonitor to the built-in video port) what is happening is Spectrum's ConnectDialog comes up on the SHR Desktop display on the built-in video but theANSI display doesn't switch out of the VGA text mode. So, if you only havea SS/VGA monitor set-up, it appears as if your computer has locked up. Inreality, hitting OA-. will cancel the Connect Dialog albeit 'behind thescenes'! Once the Connect dialog has 'relinquished keyboard I/O', you canuse the OA-W sequence to return to the SHR desktop display.Admittedly, this is a small bug. I wouldn't be surprised if I'm the onlyperson to encounter it since you need a specific set-up and a specific setof circumstances to trigger the bug.For me, I know what to avoid. But, I thought I'd report it anyway.Paul.Paul Schultzschultp@delphi.comsent your way via Spectrum 2.1 and Crock O' Gold 2.5                        (SCHULTP, 16442, GO COM A2)>>>>>   This didn't happen to me when I tried it, it closed the display and"""""   showed the dialog just fine. Make sure that you have the IIgsmonitor set to follow the ANSI display in the 'More settings' options forANSI. If it is set to follow the desktop, then you must have a secondmonitor connected to the video output. Ewen Wannop - Speccie - Wed 30 Sep 1998 - 294 days till KFest Delivered without using a IIgs by Spectrum & Crock O' Gold 2.5! Setup: Bernie ][ the Rescue 1.3 and a PowerMac 8200/120 http://ourworld.compuserve.com/homepages/ewannop/                        (EWANNOP, 16468, GO COM A2)>>>>>   I went to the 'More settings' and kept the SecondSight at: ANSI"""""   while I changed the IIgs Monitor to: ANSI also. This allows me touse the OA-D from within the ANSI display and returns me to the Spectrumdesktop and the Dial/Connect dialog. In fact, other combinations of thesetwo settings OTHER THAN THE DEFAULT SETTINGS will allow the OA-D to returnto the Spectrum desktop from the ANSI display. However, I still can't getit to return if I have the SS set to: ANSI and the IIgs Monitor set to:Spectrum desktop (the defaults).Paul.Paul Schultzschultp@delphi.comsent your way via Spectrum 2.1 and Crock O' Gold 2.5                        (SCHULTP, 16480, GO COM A2)                                RUMOR MILL                                """"""""""APPLE2.ORG EXPANDS   Just a short announcement, with all this discussion on""""""""""""""""""   who uses what type of card and where/when. I haveadded another piece to the collection at http://www.apple2.org.     The Apple II Information Resource, look for it on the link list on theleft column.What cards use what RAM, what drives work with what computer, all this andlots more information is available.Tony                        (T_DIAZ, 15929, GO COM A2)<<<<<   Anyone that wants to contribute any images, although at this time"""""   it will be a little hard to acknowledge contributions, I will keepa list. I am planning to redo most of those images in the next few months,as I put the hardware into categorized/numbered boxes. Most of it is boxedup now but just not listed which means if I want something I have to gothrough about 25 boxes, at least. JPEG is preferred over GIF, so if anyoneis making anything new use JPEG if you can.I would be nice if there was a reasonable JPEG viewer for the Apple II,even if it applied the Second Sight theory and made you scroll. I was nottoo impressed with the JPEG functions in Superconvert 4. But then again,looking at some of what I was throwing at it...Tony                        (T_DIAZ, 15968, GO COM A2)AND BYTE WORKS DOES TOO   There are some new technical descriptions and a"""""""""""""""""""""""   special offer for the month of September on theByte Works web site. Stop by and check them out atwww.hypermall.com/byteworks.Mike Westerfield                       (BYTEWORKS, 15957, GO COM A2)SHEPPY ON Y2K   The so-called Year 2000 problem is about 20% fact, 30%'""""""""""""   legitimate concern, and 50% overactive imagination.Eric "Sheppy" ShepherdMacintosh & PowerPC Programmers Forum                        (SHEPPY, 16020, GO COM A2)MARINETTI'S HERE NOW, WHEN'S SPECTRUM 2.2 COMING   The wizard of Oz does it""""""""""""""""""""""""""""""""""""""""""""""""   again...Richard has done a magnificent job with it, and you will be able to Telnetall over the place using the supplied Telnet application...You should start to see from now on the release of a number of applicationsthat will support Marinetti 2.0.But to put Spectrum users in the picture, the new Marinetti 2.0 does notwork with the TopCat XCMD that was released last year for Marinetti 1.0. Ihave no plans to write an update to TopCat, as the new Spectrum 2.2 shouldbe available some time soon. Spectrum 2.2 will allow you to choose whetheryou want a serial or TCP/IP environment, and with TCP/IP, you will be ableto open multiple Telnet sessions at once. Ewen Wannop - Speccie - Tue 29 Sep 1998 7:53:19 am Delivered without using a IIgs by Spectrum & Crock O' Gold 2.5! Setup: Bernie ][ the Rescue 1.3 and a PowerMac 8200/120 http://ourworld.compuserve.com/homepages/ewannop/                        (EWANNOP, 16430, GO COM A2)THE NEW CLARISWO. . . UH, APPLEWORKS?   Finally, some respect from Apple!"""""""""""""""""""""""""""""""""""""   They've just put up a web page forAppleWorks 5: <http://www.apple.com/appleworks> :-)Now, can anyone who has used the new version tell me what it says underimport options now for original AppleWorks files? Who's bright idea (torename CW to AW) was this anyway? In addition to the confusion caused,surely they're going to lose a lot of Windows customers who won't want tobuy a product with an Apple logo on it, even if it is the same product asthey used before.-- Michael                          (SAR, 16245, GO COM A2)>>>>>   Apple always owned Claris, and as ClarisWorks has been dragged back"""""   into the fold, and probably nobody at Apple now knows what an AppleII is, or that there is already a product already called AppleWorks, theydecide to rename ClarisWorks.If they have not changed anything since the last ClarisWorks I looked at,it imports classic AppleWorks files just fine. Something they made sure ofin all its incarnations, as they were always trying to woo Apple IIeducation users over to the Macintosh!Someone out there with an iMac can let us know the definitive answer, ifthey can find the invisible floppy disk drive that comes with that machine. Ewen Wannop - Speccie Delivered without using a IIgs by Spectrum & Crock O' Gold 2.5! Setup: Bernie ][ the Rescue 1.3 and a PowerMac 8200/120 http://ourworld.compuserve.com/homepages/ewannop/                        (EWANNOP, 16271, GO COM A2)>>>>>   I'm pretty sure they still know very well there was a former"""""   AppleWorks, at least when they consulted there lawyers about thetitle copyright. It's only, they do not care anymore anything about theoriginal AppleWorks and they're obviously sure the flood of iMacs (asprojected and obviously realized number of sales) shipped with AppleWorkswill drown the limited number of left original AW users. Sad, but true...Me too, I'm curious, how they resolved the naming problem and generally theimport of AW (classic) files. May be using AppleWorks 3 as name? There'sforeseeable, somewhere in a not so distant future, some skilled iMac user,wondering about the strange file format of the ancestor of his actualprogram . . .:))Best regards, Ulrich[ Delivered by ProTERM Message Manager (PTMM) v2.5.1 ]                       (UHAUSMANN, 16274, GO COM A2)                              PUBLIC POSTINGS                              """""""""""""""SHEPPY RECLASSIFIES SOME SHAREWARE PRODUCTS   Due to falling demand and"""""""""""""""""""""""""""""""""""""""""""   even more sharply fallingwillingness to pay for software on the part of the Apple II community, thefollowing products are being reclassified as freeware effective Monday,August 7, 1998:KeyNotifierSmartRestartProBOOT 8 (NOT ProBOOT for the Apple IIgs)TsukueWolfenstein 3D Scenario ConverterThe Apple IIgs version of ProBOOT is still shareware. If you'd like toregister a copy, send a check for $15 -- made payable to Eric Shepherd --to Joe Kohn at Shareware Solutions II; he's kindly offered to forwardchecks to me. DO NOT make the checks out to Joe; checks for ProBOOT madeout to Joe will just get deposited into the nearest wormhole, and that'sbad for your finances.Please note that this means that my three non-freeware products remaining:ProBOOT, Shifty List, and WebWorks GS are all available only from SharewareSolutions II. If you get it somewhere else, something's fishy. :)If you feel like making a special contribution to the SheppyWare generalfund, send a check to Joe, payable to me. :)And I also ask anyone that uses any of the newly-freeware products to besure to subscribe to, or renew their subscription to, Shareware SolutionsII and Juiced.GS as a sign of support for the Apple II community.Eric "Sheppy" ShepherdMacintosh & PowerPC Programmers Forum                        (SHEPPY, 15792, GO COM A2)A TRIO OF UPDATED SHEPPYWARE PRODUCTS   After a long delay, ProBOOT for the"""""""""""""""""""""""""""""""""""""   Apple IIgs has been updated toversion 5.3! The new version fixes a couple of minor bugs, corrects severaldocumentation errors, and removes some unnecessary data that was bloatingthe code.You can download the new version at ftp://ftp.sheppyware.net/pub/apple_iigs/ProBOOT53.shk.Eric "Sheppy" ShepherdMacintosh & PowerPC Programmers Forum                        (SHEPPY, 16049, GO COM A2)<<<<<   LotsaTools has been updated to version 1.1.1. The new version is a"""""   little smaller, has an rVersion resource, and has updateddocumentation.You can download the new version at ftp://ftp.sheppyware.net/pub/apple_iigs/Lotsa111.shk.Eric "Sheppy" ShepherdMacintosh & PowerPC Programmers Forum                        (SHEPPY, 16052, GO COM A2)<<<<<   Cleaner Clean Up 1.0.6 has been released. This update is a bit"""""   smaller, and has updated documentation.You can download Cleaner Clean Up 1.0.6 atftp://ftp.sheppyware.net/pub/apple_iigs/CleanUp106.shk.Eric "Sheppy" ShepherdMacintosh & PowerPC Programmers Forum                        (SHEPPY, 16054, GO COM A2)SHEPPYWARE ONLINE REGISTRATION WITH KAGI   My online registration page is""""""""""""""""""""""""""""""""""""""""   now available: you can nowpurchase SheppyWare shareware and commercial products on the Web by creditcard. Visit <http://order.kagi.com/?QGC> and have at it.If your web browser supports it, you can use a secure form to submit yourorder; otherwise, you can submit the order insecurely.At the moment, only Shifty List can be registered online. I'll be addingWebWorks GS and ProBOOT tonight or tomorrow.Eric "Sheppy" ShepherdMacintosh & PowerPC Programmers Forum                        (SHEPPY, 16397, GO COM A2)<<<<<   Wow, that was easy. My online ordering page now includes ProBOOT"""""   and WebWorks GS. So if you've been holding back on registering orbuying SheppyWare because you hate writing checks, now's the time! :)Eric "Sheppy" ShepherdMacintosh & PowerPC Programmers Forum                        (SHEPPY, 16398, GO COM A2)<<<<<   Which brings up a new point: Sarah and I have looked over our"""""   financial situation, and we've decided that I need to startbringing in more shareware money to help accelerate our process of climbingout of our rather substantial debt. As such, I'm scaling down my Apple IIdevelopment somewhat, and will be doing more Mac and BeOS development fromhere on out.There will be more Apple II software coming from me, but at a slower pace,as it doesn't make financial sense for me to keep spewing out software thatonly sells two or three dozen copies at best.At this point, you should expect one more Apple IIgs release from me thisyear. My next release for the IIgs after that won't be until early 1999.I will probably continue updating some of my older apps for contact info,as I've been doing the last few weeks, but that takes very little of mytime.If you're a Mac user, keep your eyes out for my first Mac sharewareproduct, which probably will be out in the next two weeks or so.Eric "Sheppy" ShepherdMacintosh & PowerPC Programmers Forum                        (SHEPPY, 16190, GO COM A2)JUICED.GS VOLUME 3 ISSUE 3   Announcing ...""""""""""""""""""""""""""=====  Juiced.GS, Volume 3, Issue 3  =====The September 1998 edition of Juiced.GS, the Apple II world's premierIIGS-specific magazine, is now arriving in subscriber mail boxes.This issue is being mailed to 262 subscribers in 44 states and numerouspoints around the globe.Here's what you'll find in this issue:============FEATURESCover Story:  Kfest '98 ... Avila College in Kansas City, Missouri, washome base for a flurry of announcements for new and upgraded IIGS softwareproducts. This is a firsthand report of those exciting days!In addition to official activities, read about goings-on behind the scenes-- and in the dorm rooms -- during our report on "Kfest After Hours".NOTE: Exclusive photographs from Kfest '98 are also included in this issue.REVIEWSJuiced.GS is the first publication to offer in-depth reviews of the latestIIGS software releases!GSoft BASIC:  Eric Shepherd gives IIGS users an up-close-and-personal lookat the latest IIGS-specific programming language from the Byte Works.NiftySpell:  The first and only universal spell-checker is put through thepaces. Find out about this cool new product, and see the first screen shotsto be published.WebWorks GS:  Find out what you need to know about the first IIGS-specificHTML editing software for Web page authors in this review, complete with ascreen shot.COLUMNSTelecommunications:  Searching for an ISP ... Tony Ward gives readers aprimer on shopping for an Internet Service Provider.My Home Page:  Quite a show on Kfest stage ... A few personal thoughts fromour editor on the recent Kfest, and other newsy notes from Juiced.GS.II Be Named Later:  Our columnist, Ryan Suenaga, shares his feelings on themost important Apple II event of the year.DEPARTMENTSShareware Spotlight:  Fontpimp, a new utility that converts Windows/PCTrueType fonts into IIGS font format for use with Pointless is in theSpotlight this issue, as is LILAN, a cool new Finder Extra. AnotherJuiced.GS shareware collection is also unveiled.DumplinGS:  Lots of news from around the Apple II world, including anupdated list of important Web sites that should be in every Apple II user'sfavorites list.Letters from the Land of Rom ... Juiced.GS readers ask questions, getanswers, and tell us what's on their minds.============Juiced.GS is a quarterly, printed publication available by subscriptiononly.A subscription for 1998 is $14 in the U.S., Canada or Mexico, $20elsewhere. To subscribe, send a check or money order in U.S. funds to: Max Jones Juiced.GS 2217 Lakeview Drive Sullivan, IN  47882Makes checks or money orders payable to Max Jones. Sorry, no credit cardsor purchase orders can be accepted.Complete sets of 1996 and 1997 issues are available for $14 each ($20overseas). If you would like to purchase only a specific single copy (orcopies) of back issues, they are available for $4 each ($6 overseas). Anindex and brief description of articles published in '96/'97 are availableon the Juiced.GS web site. See URL below.Apple II Forever! Max Jones Juiced.GS Delphi: JuicedGS -- Internet: juicedgs@delphi.com World Wide Web:  http://www.wbwip.com/juiced.gs                       (JUICEDGS, 16392, GO COM A2)IT'S ALL OVER BUT THE SPELLING   If You Can Use A Mouse, You Can Spell""""""""""""""""""""""""""""""   Correctly!Shareware Solutions II, in association with Chris Vavruska, is pleased toannounce the release of NiftySpell, the first and only Universal SpellChecker for the Apple IIGS computer.NiftySpell is a flexible and easy to use New Desk Accessory (NDA) thatautomatically loads whenever your system starts up. Once installed,NiftySpell adds a new menu item to the Apple Pull Down menu, and it can beaccessed from any standard Apple IIGS program that supports New DeskAccessories. With NiftySpell installed, you can spell check documents rightfrom your Finder Desktop or from within such diverse programs as Teach,Hermes, Freecell or HyperStudio.In addition to the NDA, there is also a special Spectrum XCMD included thatseamlessly integrates NiftySpell into the Spectrum telecommunicationsprogram, making it very convenient to spell check your outgoing e-mail andforum messages while using Spectrum or Spectrum Internet Suite v1.1!With NiftySpell, you'll never again be embarrassed by sending out importantdocuments with spelling or typographical errors, and you'll always lookyour best in print when the words you use to convey your thoughts arespelled correctly.Before NiftySpell, only those who used expensive word processing or desktoppublishing software packages like AppleWorks, AppleWorks GS orGraphicWriter III could spell check their work. Now anyone has theconvenience of a spell checker within easy reach. If you can use a mouse,you can spell correctly!NiftySpell requires an Apple IIGS, System 6.0.1, and a hard disk drive. Itrequires at least 512k of available RAM and at least 1.5 megabytes of harddrive storage space.NiftySpell is available from Shareware Solutions II for $20, which includespostage to anywhere in the world.To order NiftySpell, send checks or money orders to:Joe KohnShareware Solutions II166 Alpine StSan Rafael, CA 94901                       (JOE_KOHN, 16234, GO COM A2)A FEW WORDS ON CHECKWORKS FROM THE PUBLISHER   With all the recent interest""""""""""""""""""""""""""""""""""""""""""""   shown in CheckWorks, I'dlike to add a few words...CheckWorks is a set of sophisticated, integrated TimeOut modules thatoperate within AppleWorks Classic. It is a complete checking accountmanagement program that will let you do such things as write and printchecks, maintain a checkbook register, show current balances, and reconcilechecking account statements.Because so many people are using so many different versions of AppleWorks,those who purchase CheckWorks from Shareware Solutions II, will actuallyreceive three versions of CheckWorks on three 3.5" disk...one for AW 3, onefor AW 4.x and one for AW 5.x. For use with AppleWorks v4.x and 5.x,nothing additional is required to run CheckWorks. However, in order to useCheckWorks with AppleWorks v3, you must have UltraMacros 4.The complete CheckWorks package is available from Shareware Solutions IIfor only $20. Generally, SSII requests an additional $3 for CheckWorks'postage, but as a means of expressing thanks to all the friendly folks hereon Delphi's A2 for their ongoing support, I will waive the $3 postage tothose who include a Delphi name (handle, logon name) with their order.Send checks, money orders for CheckWorks to:Joe KohnShareware Solutions II166 Alpine StSan Rafael, CA 94901-1008USA                       (JOE_KOHN, 15958, GO COM A2)A2U PRESENTS: HYPERCARD IIGS""""""""""""""""""""""""""""        A2U ANNOUNCEMENT: HyperCard IIgs course starting soon!        ------------------------------------------------------The Apple II University in the A2Pro Forum on Delphi is proud to presentits first course under the new management of Dean Jeff Blakeney.Starting Saturday, the 19th of September, 1998, lessons will be uploaded tothe A2Pro's A2 University Database (go com a2p dat).  Lessons will continueto be uploaded each Saturday.  Keep in mind that the lesson files couldtake a day or two to be released for you to be able to download them.There will be an announcement in A2Pro when the lessons are ready to bedownloaded.This should give you enough time to download and read the each week'slesson before the weekly Tuesday night HyperCard Bar & Grill conference (gocom a2p con) between 9:00 and 11:00 pm Eastern time.  This is HangTime'sregular HyperCard IIgs conference and HangTime will be available to answerany questions that you have in real time.  You may even end up helping outother students with advice or work arounds that you have discovered whileworking through the lessons yourself.If you have any questions but can't make it to the conferences, you canpost them to the A2Pro Forum's A2 University Topic (go com a2p for) andyour instructor, their assistants and your fellow students will be able tohelp you to make sure you understand everything that is being taught.The course will be taught by Gareth Jones who has been creating HyperCardIIgs stacks for the past five years.  His early stacks are available fromthe Ground FTP site (ftp://ground.ecn.uiowa.edu), while his later stacksappear in _Hyper Quarterly_ (a monthly disk subscription; information andscreens shots are available at http://people.delphi.com/appleblossom/hq).While not creating stacks, Gareth writes monthly articles on all thingsApple II for the user group newsletter _Apples B.C. News_, some of whichhave been reprinted from Britain to California.  The newsletter articles hehas written about HCGS also appear on the Apple Blossom web site.All you need to participate is an Apple IIgs computer with the necessaryhardware to run HyperCard IIgs and an interest in learning how to make useof this versatile program.  HyperCard IIgs is available from many placesfor free or a very small fee and many of the official HyperCard IIgs booksare available from The ByteWorks (http://www.hypermall.com/byteworks).To summarise:      Course:  HyperCard IIgs  Instructor:  Gareth JonesAssistant(s):  HangTimeLesson schedule:     o First lesson to be uploaded Saturday, 19th September, 1998     o Lessons to be uploaded weekly     o Questions can be asked in the A2U topic of A2Pro     o Weekly chats will be held on Tuesdays between during HangTime's       HyperCard Bar & Grille between 9:00 pm and 11:00 pm EasternCourse requirements:     o An Apple IIgs with 2 MB of RAM     o A 3.5" floppy drive     o A hard drive     o HyperCard IIgs v1.1     o Plus some others that will be mentioned in the first lesson.                       (JBLAKENEY, 15971, GO COM A2)                             BEST OF THE BEST                             """"""""""""""""16408 28-SEP 05:51 Telecommunications     RE: All about Marinetti (Re: Msg 4456)     From: RICHARD_B    To: ALLWell, today (well, yesterday) is (was) the day.Marinetti 2.0 is now released and available for download from the newMarinetti Home Page:     http://www.apple2.org/marinetti/All the details are included with the archive, so I'll let you all readthat for the cool stuff.Enjoy.Regards, Richard[EOA][A2P]------------------------------                   A2Pro_DUCTIVITY |-----------------------------------Checking out A2PRO on Delphi""""""""""""""""""""""""""""by Ryan M. Suenaga, B.A., M.S.W., L.S.W.                    [thelamp@delphi.com]MORE ON BABELFISHING VIA C   This has nothing to do with C, or ORCA for""""""""""""""""""""""""""   that matter. It has to do with the fact thatyou're calling code created by a compiler. The same issue exists for APW C,TML BASIC, ORCA/Modula-2, and even assembly language.The issue is that code makes some assumptions about the environment it runsin. The only reason assembly language may have an advantage is that theassumptions are right up front--but if some bonehead does something likethis in assembly:sta there...there ds 2without setting up the data bank register, you'll have the same problems inthe assembly language subroutine that you would have in an ORCA/Csubroutine that uses global variables without initializing the data bankregister.The issue is, and always has been, that _any_ subroutine that makesassumptions about its environment must be initialized so those assumptionsare true. Assembly is no different, but it is more obvious that you need todo the initialization because you see the things you are doing moredirectly than you do with a compiler.Mike Westerfield                       (BYTEWORKS, 2114, GO COM A2)>>>>>   Hi People! Long time no type! I remember the good old days back on"""""   GEnie all the time, writing everything in assembly, patching OScalls and tool calls, etc. etc. Sheppy!, remember me? I'm still alive...Babelfish Translators...My problem is that I don't remember this stuff - it has been too long. Iwould not run away from C when writing these things. What kind of interfacecould have been devised that would be all-language safe, anyway? BTW, I didnot originally design Babelfish, but as I remember things, it was one ofthe most well-designed projects that I ever worked on! At least from adevelopers point of view. It was fully-specified before code was written -how many people can say that about their projects! Anyway, here's mypossible solution/summary...How do you write a CDev in Orca/C? Just think about that question, get afull answer, and do the Translator the same way following the sameprincipals. I would love to me more specific, but I just cannot rememberall the details.Of course you cannot call malloc(), fopen(), strstr(), fabs(), etc fromyour code resource! (Did someone say they were going to do floating pointmath...) Maybe you can, I don't think I ever knew how to do that. However,as Mike pointed out and I was not aware - the code generation can addlibrary calls when you do something as "innocent" as dereference an array!So, get out the old "Code Resource in C" section of the manual and check itout (CDev, CDEF, MDEF, Finder Extension, Request Procedures, etc, etc).Bill                         (WTUDOR, 2116, GO COM A2)>>>>>   Bill,"""""Glad to see you here on Delphi. I hope you regularly drop in. I took a lookat your Debug translator C source. (Thanks Ewen!) I noticed you did not usethe #pragma noroot as suggested by Mike W.  Do you recall if this was infact the case? It seems you didn't bother with most of the points Mikeexpressed concerns about and still were able to write some very usabletranslators. So, there definitely is some hope for using C in writing thesethings (especially if I try to cover what Mike has pointed out).One question for Bill or anyone else 'in the know':I noticed Bill used saveDBR() and restoreDBR() in his code. Is this an APWequivalent to the ORCA/C #pragma databank directive? I assume saveDBR andrestoreDBR means save/restore direct bank register?Thanks,Paul.                        (SCHULTP, 2121, GO COM A2)>>>>>   It is possible that I was using the APW/C compiler for that"""""   translator. It is also possible that I was using an earlier Orca/Ccompiler. I think the SaveDB/RestoreDB functions just did a phk/plb (savingthe old DBR first) and restore the old DBR later. I don't remember wherethey came from.                         (WTUDOR, 2123, GO COM A2)<<<<<   You don't have to use the noroot pragma--you can just delete .root"""""   later. :)If you do complete initialization of the ORCA/C environment, you _can_ usemalloc(), free(), stdio.h, floating-point, and so forth. One of theadvantages to rolling your own .root segment with the initialization doneby you, rather that using a prepackaged pragma written by me, is that youhave some choice. If you don't need stdio.h and floating point (which Iimagine would normally be the case) you don't have to initialize them.Mike Westerfield                       (BYTEWORKS, 2124, GO COM A2)>>>>>   Just what is exactly meant by the "complete" initialization. I read"""""   the manual and it says in a couple places that you should callthese routines if your program is not called in the "usual" way. What isthe "usual" way? Is only a S16/EXE considered the "usual" way?ThanksChris                       (CVAVRUSKA, 2128, GO COM A2)<<<<<   A complete initialization would make all aspects of ORCA/C function"""""   properly. It would be safe to use malloc(), stdio.h calls andfloating point.> I read the manual and it says in a couple places that you should callthese> routines if your program is not called in the "usual" way. What is the> "usual" way? Is only a S16/EXE considered the "usual" way?Basically, yes. Here's a more detailed answer:At the current time, ORCA/C supports several fully functional ways ofcreating a program. S16/EXE is one of them. There are also pragmas forsafely creating PIFs, XCMDs, and so forth. (See the manual for details.) Ifyou are creating a program that is not an S16 or EXE program, you need todo the initialization. The pragmas do that for you. If you are creating aprogram that is not an S16 or EXE program, and for which there is noprewritten pragma, then you need to roll your own. You can do that bywriting a custom .root segment that you link into your program or, for mostof the initializations, by calling the subroutines listed in the manual.The really tricky one is SANE, used for floating-point support. SANE needsa direct page area. The ORCA/C libraries get the direct page area bystealing 256 bytes from the stack, using a technique that generally doesn'twork from environments like Babelfish. It's difficult to set that upproperly from ORCA/C by calling the prewritten subroutines. You can, ofcourse, just start SANE on your own.If you're going to do this, I'd suggest that you make sure you have a copyof the subroutine library source, and perhaps disassemble a few of thedifferent .root segments created by the various pragmas. That will show youclear examples of what _I_ did to support similar environments. An NBA oran XCMD are pretty similar to Babelfish. The principal difference is that aBabelfish translator is not a single program, it's four.Mike Westerfield                       (BYTEWORKS, 2130, GO COM A2)A2PRO HASHES OUT JAVA AND OTHER LANGUAGES   Well, I just can't sit idly by"""""""""""""""""""""""""""""""""""""""""   while you disparage a languageI happen to like quite a lot. :-) And nobody "convinced me" of this. It wasmy own conclusion. I admit it's not perfect, and I don't care much for itsC++-like syntax, but I'd take it any day over C++.Apart from the OOP extensions to ORCA/Pascal (which, I admit, I have notlook at), there is no full implementation of a standard object- orientedlanguage for the IIgs, let alone one as portable as Java. There is a =heck=of a lot of Java applications (not applets) out there, most of which wouldprobably run just fine on the IIgs if we had a Java VM (and preferably aJIT). Also, with Java, you get an extensive and well-designed classlibrary.And since Sun's compiler is actually written in Java, it should run (albeitslowly) once you've got the VM running. A native compiler would be better,of course (speed-wise), but as you suggested, Mike, that would take sometime. It would permit the compilation to native 65816 code, though, whichwould allow Java to be used as a native IIgs programming language, as analternative to the C++ compiler that everyone keeps asking for.-- Michael                          (SAR, 2140, GO COM A2)>>>>>   Heck, I've disparage'd better languages than Java. ;) You should"""""   hear what I say about Pascal... and I _like_ Pascal!You're right about the Aplet issue, and I did mention that. But I doubt ifmany people are going to take up Java simply because it supports objectoriented programming.If you're really interested in object oriented programming, Object Pascalis one thing that works very well. (You did mention it, but seemed toignore it. Some people just don't like Pascal much. Whatever.) There's alsoa port of SmallTalk, although I doubt if it runs much faster than Javabased on J-code would.And honestly, I'm surprised no one ever ported one of the C++ to Ccross-compilers. Apple used one for a while under MPW. The same techniquewould work quite well under ORCA.Mike Westerfield                       (BYTEWORKS, 2151, GO COM A2)>>>>>   I haven't been able to *find* any C++ to C cross compiler sources,"""""   or I'd have tried it already.Eric "Sheppy" ShepherdMacintosh & PowerPC Programmers Forum                         (SHEPPY, 2152, GO COM A2)>>>>>   For somebody who doesn't know C++ or Java (ie. me), but does know"""""   the principles of OOP etc., what are the benefits of Java over C++,ignoring the SUPPOSED portability.Regards, Richard                       (RICHARD_B, 2141, GO COM A2)>>>>>   Well, speaking as someone with only a couple semesters using c/c++,"""""   and just one semester of JAVA, the reason _I_ like java is becauseit is _simpler_ in syntax than C/C++, without all the tricks and quirksthat have grown with those two languages over the years. It's morestraightforward to use, and gives you the benefits of OOP without evenhaving to mess with pointers and all the confusion that THEY cause theneophyte programmer.My school is going to start using JAVA to teach their CS 1 course nextyear.I know that's a wimpy attitude, but hey, I'm a wimpy programmer.  Hell, Ieven like Visual Basic!   :)_________  | homas                        (TCOMPTER, 2148, GO COM A2)<<<<<   Automatic memory management (garbage collection), a simpler syntax,"""""   and an excellent class library are probably the biggest advantages,off the top of my head. Memory management is the biggest source of errorsin C and C++ programs, and it's tedious. There are no pointers in Java,just class references, which avoids a lot of value passing issues andprevents you from messing with objects directly.Java has "interfaces" that define a set of methods for classes toimplement, and any class that implements the interface can be manipulatedby something that uses that interface. In C++, you would have to use anabstract class to do the same sort of thing, which isn't as nice.I really liked Java's exception system, but C++ also now has exceptions,and I imagine they are probably very similar to Java's, but it seems likethey aren't used much yet (in C++). In Java, the whole class library usesthem. Exceptions allow you to separate your error handling code from theregular code, and functions don't have to waste their return value on anerror code. Like with the IIgs toolbox, the error result is separated fromthe function result (although you can only have one or the other from aJava function).Another plus for Java is that you don't need separate header andimplementation files in Java. Finally, Java also has language support formultithreading.There are certainly limitations in Java. For example, it only supportssingle inheritance, but I've found that the interface mechanism is quiteadequate and avoids the pitfalls of multiple inheritance. The lack ofenumerations is a bit of an inconvenience, and there's no "preprocessor" sothat means no conditional compilation or macros, which means there'scurrently no nice way to have ASSERTs and debug code that is automaticallyleft out of a release build. However, there are Java compilers with both ofthese latter features, but they're not in the standard.The fact that there is a standard, and a simple one, plus a referencecompiler, is a plus for Java. C++ has only just finally been standardizedand it will probably be some time yet before there are any compilers thatsupport the entire, very complex standard exactly to the letter.I'm sure I missed several issues, but maybe others will jump in to addmore.-- Michael                          (SAR, 2172, GO COM A2)>>>>>   Well, for one Java is even slower than C++ ... oh wait, that's not"""""   really a benefit, is it?Devin                       (GLYNREADE, 2181, GO COM A2)>>>>>   I disagree with this statement. Here's why:"""""With a few exceptions, like LISP and Cobol, one language is notsignificantly faster or slower than another when the languages areimplemented by equally skilled programmers--yet the "speed" of a languagehas torpedoed more than one superior language.One example of a "slow" language is Pascal, which "everyone" knows isslower than FORTRAN or C. Hogwash. In point of fact, Pascal is generallyslightly faster, due to the fact that it's clean design allowed someoptimizations that are not possible on either FOTRAN or C. The differenceis negligible, but if you want to be picky, it's a faster language. CompareORCA/Pascal and ORCA/C, which use the same code generator, on standardbenchmarks: When there is a difference at all, Pascal slightly edges C outon looping, although C does better on some benchmarks if you use unsignednumbers. (That's more an artifact of the 65816 than the language, though.On a 68K, PowerMac or Pentium the signed/unsigned advantage disappears--andyou can actually get unsigned math in ORCA/Pascal using subranges.)So why is Pascal slow? Because people based their impression on the mostcommon early implementation, the UCSD P-System. They didn't bother tonotice that UCSD FORTRAN was just as slow.Another example is Ada, which got a terrible reputation for slow speed, butat a time when only demonstration compilers--few of them optimizing, andsome of them p-code based--were available for comparison. Hardly a fairtest, yet "everyone" knows Ada is slow.Java is no different. It is typically implemented as a p-code like system.Of course it's slow. Sometimes it's implemented as a just-in-time compiler.That's slower than an optimizing compiler, too. But a scratch-writtenoptimizing compiler for Java, written to compile directly to native code,should not show significant speed differences from other common languages.And a C, Pascal, BASIC, or FORTRAN compiler written to compile to J-codefor execution as an aplet will be just as slow as Java.Mike Westerfield                       (BYTEWORKS, 2183, GO COM A2)<<<<<   Mike hit it on the nose. There are a number of Java compilers now"""""   which compile to native code, and can be used to write the samekinds of programs that you could in C++. And they will run just as fast. Infact, there are those who claim that even the JITs can compile Java code torun as fast =or faster= than comparable C++ code. This is at least partlydue to the difficulty of optimizing a language as complex as C++, ascompared to Java.I've never done any side-by-side tests myself, I just prefer the Javalanguage and figure that eventually the speed won't be an issue (ascompilers and JITs improve). It's also quite easy to write a really =bad=C++ program which will often result in any speed gains being lost.Unfortunately, I see this more often than not. I just came off a projectwhere the code we inherited was so awful that there really wasn't we coulddo to fix in the time we had. It was obvious that the people who wrote thecode did not have even a decent understanding of the language. Anyway,thankfully that's over.-- Michael                          (SAR, 2186, GO COM A2)>>>>>   You know, the cool thing about posts from Mike, is that he's"""""   actually written all the stuff he talks about.You see this long detailed post about compilers and languages and all suchwonders, and you feel like saying "yeah, well what would you know aboutcompilers", just for the hell of it.When Mike posts, it usually ends the thread. Not good for Delphi, butcertainly good for the Apple II world. There's so many different expertshere, its great.Ain't the Apple II community a wonderful place. :-)Regards, Richard                       (RICHARD_B, 2184, GO COM A2)C PROGRAMMING HELP ON DEMAND   The following is a short code segment and""""""""""""""""""""""""""""   the resulting ORCA/C 2.1.0 compiler output.Anyone have an idea why this is giving me an error?Thanks,Paul.====================================================================#include <stddef.h>typedef enum {actnSpec, actnByte, actnWord} ACTN;typedef enum {propChp, propPap, propSep, propDop} PROPTYPE;typedef struct char_prop{    char fBold;    char fUnderline;    char fItalic;} CHP;                  // CHaracter Propertiestypedef struct propmod{    ACTN actn;              // size of value    PROPTYPE prop;          // structure containing value    int offset;          // offset of value from base of structure} PROP;PROP rgprop [1] = {    actnByte,   propChp,    offsetof(CHP, fBold),       // ipropBold};======================================================================ORCA/C 2.1.0Including :gno:ORCA.2.1:LIBRARIES:ORCACDefs:stddef.h  23     actnByte,   propChp,    offsetof(CHP, fBold),       // ipropBold                                                     ^ illegal operand ina constant expression1 error found.                        (SCHULTP, 2174, GO COM A2)>>>>>   The compiler is telling you that offsetof(CHP, fBold) can't be"""""   resolved as a constant at compile time, so it can't be used as aninitializer for a static variable. How is offsetof() defined? You'll eitherhave to change offsetof, use something else, or initialize the value atrun-time.Mike Westerfield                       (BYTEWORKS, 2175, GO COM A2)<<<<<   Mike,"""""From ORCA/C 2.1.0 and its <stddef.h>:-------------------------------------------------------------------------typedef unsigned long size_t;#define offsetof(type,member) ((size_t) (&(((type *)0L)->member)))So, this would make offsetof(CHP,fBold):unsigned long &((CHP*)->fBold)-------------------------------------------------------------------------It appears to me that offsetof() is trying to give me the address of thefBold member of the structure CHP.The code I am trying to compile is the rtfreader C source from Microsoft.In the source, a comment states that the member 'offset' in the structurePROP is the "offset of value from base of structure". The error I amgetting is when they try to use offsetof() from stddef.h to calculate thevalue for the 'offset' member of PROP. [Note: from the original posting, myerrors were occurring in an array of type PROP -- a structure containingthe mentioned offset member].It seems to me that the Microsoft code is expecting offsetof() to returnsomething different than what the ORCA/C offsetof() is returning. TheORCA/C offsetof() from stddef.h (as shown above) looks like it is returningan address. Specifically, the Microsoft code expects offsetof() to returnthe offset from the beginning of the structure and not an absolute address.Am I right? Or, am I missing something?Does anyone have the offsetof() from Microsoft's stddef.h for comparison?Thanks,Paul.Paul Schultzschultp@delphi.comsent your way via Spectrum 2.1 and Crock O' Gold 2.5                        (SCHULTP, 2176, GO COM A2)>>>>>   Paul, the offsetof() macro is returning a value of type size_t,"""""   which is correct: size_t is defined in ANSI-C as an integer valuelarge enough to hold the largest pointer when the pointer is converted toan integer--in other words, casting a pointer to type size_t and saving it,then converting the size_t value back to a pointer should not change thevalue.Whatever.The value returned is a long integer, not a pointer. (I forget if it'ssigned or unsigned; you can look in the headers if you care. It doesn'tmatter for this discussion.)The problem, though, has to do with the fact that ORCA/C wasn't able toresolve the macro to a constant at compile time. The solution is to use aconstant or use the macro later in executable code.Mike Westerfield                       (BYTEWORKS, 2177, GO COM A2)WHEN THE AUTHOR NEEDS HELP WITH GSOFT BASIC, HE TURNS TO A2PRO   I'm""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""   runninginto a weird problem with GSoft BASIC. I'm hoping someone can save me thetrouble of disassembling Apple's Control Panel to find out what the problemis.Here's the situation:GSoft BASIC is doing some behind the scenes work to convince the O/S thatit's OK for an interpreted program to have its own resource fork. Inparticular, it's assigning it's own user ID and intercepting the Loader'sLGetPathName and LGetPathName2 calls, telling calling applications(specifically the StartUpTools call) the correct pathname for theinterpreted file. It only intercepts these calls if the user ID passed bythe call matches the user ID assigned to the interpreted file. GSoft BASICalso intercepts the GS/OS GetName call.That actually works fine. Desktop programs are working, and StartupToolsworks just peachy.The problem is that some desk accessories, like Apple's Control Panel, arealso using LGetPathname2. That's OK, but they are also using theinterpreted application's user ID (why?!?!?) and, after getting theinterpreted program's path name, they report an error or crash in variousways. Apple's control panel does a System Death call with a resource error,saying it couldn't load resource type $800C (a P-string) with a resource IDfrom outer space ($36B6B6B6). One other NDA fails with a similar error, butwith a resource ID of 1.Presumably the resource failure is connected to the LGetPathname2 call,although I have not disassembled the code to find out for sure.Does anyone know why these NDAs might fail in this way? Even simpler, doesanyone know why an NDA would be asking the loader for my application's pathname?I suspect there is another call I need to intercept and patch, but I don'tknow what it is. Any ideas?Mike Westerfield                       (BYTEWORKS, 2193, GO COM A2)>>>>>   My first guess is that something's wrong somewhere else entirely:"""""   maybe these NDAs are using some call or other (GetCurResourceApp,perhaps?) to get the user ID of whoever is currently in charge,resource-wise, and getting the wrong value at some point. Or maybe yourchanges cause these NDAs to be passed back the interpreted application'suser ID as their own?That's actually the most likely case, I think.The other possibility is that they're calling LGetPathname2 to see if acertain app is running, so they can adjust their behavior in some manner...but it seems that the GS/OS GetName call would be better for that, so thisseems unlikely to me.Eric "Sheppy" ShepherdMacintosh & PowerPC Programmers Forum                         (SHEPPY, 2194, GO COM A2)>>>>>   I had a similar problem with Marinetti and the Control Panels NDA."""""   The solution for me was to move all the relevant resources intodata segments. I didn't feel like patching all over the place to support myown resources. I also figured because of the way Marinetti fits into GS/OS,it was probably better not to mess with resources any way.What I would like to know though, is why you're patching so many GS/OScalls. Although you're using interpreted code, surely you're just anapplication like anyone else? Just interested...Like Sheppy says, Control Panels does a lot of res ID manipulation and evenmesses with control parameter blocks if it thinks it owns them. My problemwas several depths of module calls, each with their own resources, calledfrom a CDev. Different problem, CDev. Different problem, but comes from thesame Control Panels logic.Regards, Richard                       (RICHARD_B, 2200, GO COM A2)>>>>>   The problem Mike's having is this:"""""You have an application, GSoft.Sys16, which is the interpreter. It loads afile that contains the program to run and the resources that program needs.The program is run, and it calls StartUpTools. The Resource Manager goes"Let's see, the currently-running application is GSoft.Sys16. Hey! It'salready started the Resource Manager, what's this idiot programmer doing?"and returns an error.Additionally, if the program calls MMStartUp, it gets GSoft's user ID back(it's data owned by GSoft, after all). So MMStartUp has to be patched.The end result is probably about 5 or 6 toolbox calls that wind up needingvarious patches, so the GSoft program can look and act like a realapplication.This isn't a problem when you've used MakeRuntime to build a launchableapp, but when testing during development from the ORCA or GSoft shell, it'sa serious problem.Eric "Sheppy" ShepherdMacintosh & PowerPC Programmers Forum                         (SHEPPY, 2201, GO COM A2)GNO MORE WAITING?  WELL AT LEAST A LITTLE MORE   Many people have been""""""""""""""""""""""""""""""""""""""""""""""   wondering for a long time,"When will GNO v2.0.6 be released?".  Some have questioned if it will everbe released.  Here is the status; in short, it's a mixture of good news andslightly bad news.First, the bad news.I had wanted the release of GNO v2.0.6 to come as a fairly integratedpackage where the installation process was (almost) completely automated,everything was available as source that could be built using the currentcompilers, et al.  While one of my goals is still to get the base GNOdistribution to this state, it is not there yet.I had also commented to some people in email and on Delphi that I wanted tomake a major GNO release by KFest '98.  Well, a residential move, familymedical problems, a corporate move, and other things got in the way.  KFest'98 has come and gone, and GNO still isn't released.Now the good news.It's time to make a much overdue major GNO release.There are a few stages to such a release.  Over the next few weeks you canexpect the following to happen:        - a binary release will be available via anonymous ftp.  This,          while still lacking in certain respects, is what most people          will want to eventually download.  The initial one may          merely be the most recent binary release distributed to the          the GNO Developers' group.        - most sources will become available via anonymous cvs          and anonymous ftp.  Not all sources will be available          (such as those for the modified Byteworks' libraries)          because of their proprietary nature, however the majority          of sources will be available.          Initially sources by ftp will be available only as individual          source files, but I will get it set up so that you can get          NuFX (GShrinkit) archives of portions of the source directory          tree.  Sources will not be available as a single *.shk file          because there are too many of them.        - Documentation (web pages, reference manual, et cetera) will          be updated.  This is actually an ongoing process, so if you          have any suggestions/corrections for the documentation,          please let me know.Other things also have to get sorted out, like the list of what has stillto be done, the necessary procedures for those who want to makecontributions, and so forth.  This will be done as we have time available.This won't happen overnight, though, as I am involved in yet anotherresidential move.  (Landlord problems prompted us to finally go and buy ahouse, and we're moving next weekend.)Don't get your hopes up too high though. There are still some majorproblems with GNO v2.0.6, mostly because there's "so much work, so littletime".  For example, there are some core components (like syslogd) thatwere rewritten but still require work.  There are certain aspects of theGNO v2.0.6 kernel that are less stable than the 2.0.4 kernel; of course,there are also kernel aspects which are *more* stable in v2.0.6.  However,in the spirit of "The Cathedral and the Bazaar", I hope that things will gobetter after the sources are on general release.Please don't continually flood me with email about when each stage iscoming.  As each stage is ready, I'll post a notice on comp.sys.apple2.gnoand the Delphi A2Pro forum.  Speaking of which, I usually host a GNOprogrammers' real time conference on Delphi Mondays and Thursdays from 10pmto midnight, Eastern time.  While I may not be around for the next coupleof weeks, feel free to drop in anytime; I should be back in October.I would like to finish by thanking the GNO Development team, especiallyDave Tribby who has been churning out utility updates and bug fixes likecrazy.  (The list of contributors is in the current GNO Overview andInstallation Reference Manual at http://www.gno.org/~gno/refs.html.)So keep tuned to comp.sys.apple2.gno and Delphi A2Pro for updates.-- DevinPS:  I realized that this was a bit out of date as I was uploading it;     the residential move is done.                       (GLYNREADE, 2178, GO COM A2)JAVA FOR THE IIGS AND HOW IT COULD BE DONE   It depends a lot on how you do""""""""""""""""""""""""""""""""""""""""""   it.If you get a license from, say, Sun and implement an interpreter for Java'sJ-code, it's a pretty reasonable project. Say a few dozen hours for acompetent assembly language programmer. (That's a guess; I would carefullystudy the specs for J-code before making a real estimate.)The result would work, but it would be pretty slow. There would also berestrictions on distribution, but I'm not sure what they would be. Youmight also have to develop the Java programs on another machine. I'm notsure if the Sun Java license includes the Java compiler, which convertsprograms to J-code.The next level up is a "just-in-time" style compiler. This takes J-code andcompiles it to machine code. Depending on how good a job you do, this couldtake anywhere from a few weeks to a year or two. If you do a great job, theresult should work as well as some of the current Apple IIGS compilers. Youwould still have some distribution restrictions.For the most part, the only sane reason to use Java is to develop webapplets. Unless you're trying to tie this thing to a web browser of somesort, or run applets downloaded from the web, there's no reason I can thinkof to have Java on the Apple IIGS. But perhaps you've been convinced bysomeone that Java is actually a good computer language in its own right.Well, that person's grandfather probably sold snake oil to yourgrandmother, but you're entitled to your opinion. ;) In that case, youmight consider developing a traditional compiler for Java. Assuming youdon't develop the environment, too, and that you start from scratch sothere are no distribution hassles, you're looking at a one to two year(full time) project for one to two people.So, like I said, the answer depends on your approach and goals.Mike Westerfield(Whose written enough compilers and interpreters to know what this wouldtake!)                       (BYTEWORKS, 2136, GO COM A2)HOW SOUNDIT SOUNDS OFF   Basically, SoundIt is installing a Request Handler""""""""""""""""""""""   that watches for the finderSaysBeforeOpen IPCrequest, and when it sees one that contains a sound file, it loads thesounds, plays it, then returns from the request call with a message tellingthe Finder not to bother opening the file (which would normally cause it tolaunch an application to handle it).Dave                        (JUSTDAVE, 2119, GO COM A2)>>>>>   When you click the icon, the Finder sends a 'FinderSaysBeforeOpen'"""""   message which gets picked up the Sound CDev, and anything else thatis listening. The first application to accept the message, in this case theSound CDev, plays the sound.This is all explained in the System 6 Reference. Ewen Wannop - Speccie Delivered without using a IIgs by Spectrum & Crock O' Gold 2.5! Setup: Bernie ][ the Rescue 1.3 and a PowerMac 8200/120 http://ourworld.compuserve.com/homepages/ewannop/                        (EWANNOP, 2120, GO COM A2)MORE GSBUG DEBATES   Richard: Yes. I had a shock: How ugly it is designed.""""""""""""""""""   It reminds me of Vi under Unix.The ability to step and trace is nice. Break points can be handled by NFDebugger as well as display and modify memory. Much better than GSBug,since it works together with NF Assembler, you can display your labelseasily, choose different display formats, etc.For me, it is more sensible to work with NF Debugger. The only drawback isthat is hasn't got step and trace functions, but that could maybe easily bebuilt in with breaks.I already did an update (NOT yet available on our homepage), that displaystables and cleans things up a bit.Hm. Does ORCA or Merlin pass label information to GSBug? I didn't foundthat (but I didn't look for it, either).Jesse Blue / NinjaforceCheck out our upcoming Apple IIGS game at:http://www.ninjaforce.home.ml.org                       (JESSEBLUE, 2122, GO COM A2)>>>>>   Not really. GSBug doesn't support that directly. There is a"""""   facility for naming breakpoints that is independent of the languageused to create the program. I don't use it, so I can't tell you much aboutit.Mike Westerfield                       (BYTEWORKS, 2126, GO COM A2)>>>>>   Oh boy, is this gonna be an interesting thread or what. :)"""""Ugly? No, the interface to the ProDev debugging card, now that's UGLY!You know, its hard to argue the point for GSBug when I haven't seen yourdebugger, and to be honest there's no way a quick stop in GSBug canpossibly show you all the benefits.The screen layout can be changed very easily by typing "SET" and usingvarious keys to adjust the screen to your liking. While in SET mode, "S"also toggles stack offsets.From any step and trace mode, "S" "H" "4" "8" and a half dozen other keyschange the displays from graphics to text etc.OFF and ON on the command line turn off the GSBug display to display theactive text screen.BP allows you to set up real time break points, triggered by count or firsthit. MP allows you to set windows of memory protection and real timeexecution, bypassing tracing through code which you know works, such astoolbox calls (hold down option on a toolbox call, and GSBug will ignorethe window and trace the call).You can debug to disk, and view the trace back later, with all the registerand memory display showing up, and you can use the arrow keys to go backand forth in the trace. I find this hand with beta testers. They canstep/trace a problem and send me the trace file. I can then load it intoGSBug and watch what they were doing.MEM goes into the memory display. You can type in a long address, or hit"Z" to make it a direct page location. You can also hit "P" to show a 16bit pointer, "L" to show long, "H" to show hex/ascii, and three levels ofdepth in dereferencing by typing ":"During stepping, (space bar after hitting "S" to start stepping) you canhit "X" to execute subroutine (within bank and long) at real time. Downarrow skips an instruction. Of course you can type an address followed by"S", "T" or "R" to exit GSBug.There's a calculator at the prompt, plus a hex/ascii display by typing anaddress, then a colon, then return.What else, um, you can set break points on tool calls and OS calls. Forexample, you want to know where Finder quits, issue a settbrk_quit. Want totrace your code from a particular tool call, sure settbrk_toolcall.And this is just scratching the surface, there are literally hundreds offeatures which aren't documented in GSBug itself, but are in thedocumentation.Oh yeah, I should just mention it does record templates, like Nifty Listand Pixie, and this started with your mention of eyecatchers, which GSBugsupports Apple's embedded eyecatchers. The only thing it doesn't do whichyou've mentioned is displaying labels, but then again, I doubt it wouldhave supported Merlin labels, and anyway, the eyecatchers I find a lothandier, as you can code the label or a debug message.Regards, Richard                       (RICHARD_B, 2134, GO COM A2)>>>>>   GSBug is IMHO just about the best-designed debugger out there for"""""   any platform I've worked with. It has flaws, and it has bugs, butit's easier to use, in general, than any other machine-level debugger I'vetried.Eric "Sheppy" ShepherdMacintosh & PowerPC Programmers Forum                         (SHEPPY, 2139, GO COM A2)<<<<<   That all sounds very nice, but seems to be aimed at toolbox/desktop"""""   programmers, since quite a lot is based on toolbox interaction.What I want to do with a debugger is: stop a program during execution andhave a look at all my variables (=labels), and be able to view my code in adisassembly, so I can see what happens. I rarely use the toolbox.But I think the whole debate is useless (although it's nice), since I won'tuse GSBUG, because then I would have to use GS/OS, and you won't use NFDebugger because then you would have to code under NF Assembler.Jesse Blue / NinjaforceCheck out our upcoming Apple IIGS game at:http://www.ninjaforce.home.ml.org                       (JESSEBLUE, 2142, GO COM A2)[EOA][FRE]------------------------------                FREEWARE FAVORITES |-----------------------------------QUIT-TO"""""""by Ryan M. Suenaga, B.A., M.S.W., L.S.W.                    [thelamp@delphi.com]                                  QUIT-TO                                  ~~~~~~~          Product Name:      Quit-To          Distribution:      Freeware; available in the Delphi A2                             Database, Genie A2 Library, and Apple II ftp                             sites.                             Karl Bunker          Requirements:      Apple IIgs; 33k disk space.     Unlike the Mac OS or Windows, the standard Apple II operating systems(including GS/OS) don't allow you to run more than one program at once(arguments about Desk Accessories and true multitasking notwithstanding).While this is a minor inconvenience, it becomes a major one for theneophyte who starts up in _Finder_, then runs _HyperStudio_, then quitsback to _Finder_ only to immediately start up _GShien_.  Can't we justshortcut and bypass the _Finder_?     Well, of course you can.  There are several solutions to this problem,including using _Transprog III_ from Seven Hills.  However, say you want togo directly from a ProDOS 8 program to another program--you won't have theadvantage of having the GS/OS desktop with the _Transprog III_ selection inthe menu bar.  What to do?     Simple.  Use _Quit-To_, one of the wondrous freeware Classic DeskAccessories by Karl Bunker.  _Quit-To_ does just one thing and it does itwell: it lets you select which program you want to run after you quit yourcurrent program.     You access _Quit-To_ like any other CDA--simply enter the ClassicControl Panel with the command-control-escape sequence, scroll down to the"Quit-To" selection, and hit return.  When you quit the program you'recurrently in, instead of returning to _Finder_ (or an alternative programlauncher) you'll end up in the program you wanted to run next.     To extend the abilities of this neat little program, you can alsocreate a "Run List" that lets you keep a list all of your favorite programsand select them from it.  This makes using _Quit-To_ even easier.     _Quit-To_ uses the text interface, so it's fast and simple.  Becauseit's a CDA, it's also accessible both by ProDOS 8 and GS/OS programs, anddue to Karl Bunker's generosity, it's also free.     _Quit-To_, in the tradition of the Apple II, is functional if notflashy.  It's also free, thanks to the generosity of Karl Bunker.  Irecommend this program without reservation to any IIgs user.         :: DISCUSSED ON DELPHI ::::::::::::::::::::::::::::::::::         :                                                       :         :                  Windows is a pane.                   :         :                                                       :         ::::::::::::::::::::::::::::::::::::::::: LUMITECH ::::::[EOA][INN]------------------------------                     EXTRA INNINGS |-----------------------------------About The Lamp!   The Lamp! is published on the fifteenth of every month in"""""""""""""""   the Database of the II Scribe Forum on the Delphi onlineservice (GO CUS 11).This publication produced entirely with real or emulated Apple II computersusing Appleworks 5.1 and Hermes.  Apple II Forever!     * The Lamp! is (c) copyright 1998 by Ryan M. Suenaga, M.S.W.  All       rights reserved.     * To reach The Lamp! on Internet email send mail to       thelamp@delphi.com.     * Back issues of The Lamp! are available in the II Scribe Forum on       Delphi as well as The Lamp! Home Page,       http://lamp.sheppyware.net.>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Opinions expressed herein are those of  the individual authors, and do  notnecessarily  represent  the  opinions   of  the  Delphi  Online   Services,Syndicomm, Inc.,  or  Ryan M.  Suenaga.     Forum  messages  are  reprintedverbatim and  are included  in this  publication with  permission from  theindividual authors.   Delphi Online Services,  Syndicomm, Inc. and  Ryan M.Suenaga  do not guarantee  the accuracy or  suitability of any  informationincluded herein.  We reserve the right to edit all letters and copy.Material published  in  this  edition  may not  be  reprinted  without  theexpressed  written consent  of the  publisher.   Registered  computer  usergroups, not  for profit  publications ,  and other  interested parties  maywrite the publisher to apply for permission to reprint any or all material.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<[EOF]