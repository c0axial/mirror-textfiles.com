-----------------------------------------------------------------------------

                          LOVE BYTES

              ( Or sex and the single computer )

 Micro was a real-time operator and dedicated multi-user. His broad-
band protocol made it easy for him to interface with numerous input/
output devices, even if it meant time-sharing.

 One evening he arrived home just as the sun was crashing, and had
parked his Motorola 68000 in the main drive ( he had missed the 5100
bus that morning ), when he noticed that an elegant piece of hardware
admiring the daisy wheels in his garden. He thought to himself, "She
looks user friendly. I'll see if she'd like an update tonight."

 Mini was her name , and she was delightfully engineered with eyes
like COBOL and a Prime mainframe architecture that set micro's
peripherals networking all over the place.

 He browsed over her casually, admiring the power of her twin, 32-bit
floating point processors and enquired, "How are you Honeywell?"
"Yes, I am well" she responded, batting her optical fibres engagingly
and smoothing her console over her curvilinear functions.

 Micro settled for a straight line approximation. "I'm stand-alone
tonight," he said. "How about computing a vector  to my base address.
I'll output a byte to eat, and maybe we could get offset later on."

 Mini ran a priority process for 2.6 milliseconds then transmitted,
"8K, I've been dumped myself recently, and a new page is just what I
need to refresh my discs. I'll park my machine cycle in your back-
ground and meet you inside." She walked off, leaving Micro admiring
her solenoids and thinking, "Wow, what a global variable, I wonder
if she'll like my firmware."

 They sat down at the process table to a top of form feed of fiche
and chips and a bucket of Baudot. Mini was in conversation mode and
expanded on ambiguous arguements while Micro gave occasional
acknowledgements although in reality, he was analysing the shortest
and least critical path to her entry point. He finally settled on the
old "would you like to see my benchmark subroutine", but Mini was one
step ahead.

 Suddenly she was up and stripping off her parity bits to reveal the
full functionality operating system software. "Let's get BASIC, you
RAM," she said. Micro was loaded by this stage, but his processor
module had a processor of its own and was in danger of overflowing
its output buffer, a hang-up that Micro had consulted his analyst
about. "Core," was all that he could say.

 Micro soon recovered, however, when she went down on the DEC and
opened her device file to reveal her data set ready. He accessed his
fully packed root device and was just about to start pushing into her
CPU stack, when she attempted an escape sequence.

 "No No!" she piped. "You're not shielded."
 "Reset, Baby," he replied. "I've been fully debugged."
 "But I haven't got my current loop enabled and can't support child
  processes," she protested.
 "Don't run away," he said. "I'll generate an interupt."
 "No that's too error prone, and I can't abort because of my design
  philosopy."

 Micro was locked in by this stage, and could not be turned off. But
she soon stopped his thrashing by introducing a voltage spike into
his main supply, whereupon he fell over with a head crash and went to
sleep.

 "Computers," she thought as she compiled herself, "all they ever
  think of is hex."

