My name is Chris Olson, I'm 34 years old, and home computers have been a 
large part of my life since 1980.  My father, George, worked in Research 
and Development at a local university and was given the task of organizing 
and running one of the first Atari Computer Summer camps for Grades 1-6.  
The students were using Atari 400 computers, and, as a result, Atari Corp. 
sent my father home with one to learn and use.  I was three years old at 
the time, and while I don't recall the first instance of unboxing and 
setting up the computer, I do have a vivid memory of how it looked and 
felt - solid beige plastic for the case and a very strange and difficult 
membrane keyboard!  With no cartridge installed and no cassette or disk 
drive going, the 400 would boot to something called the "Atari Memo Pad" - 
a free text screen entry mode against the normal system blue screen.  
Especially at that age, many, many characters and "masterpieces" were 
typed into the Memo Pad, despite the keyboard!

Disk drives would come later, but we had a rather modest cache of 8K 
cartridges and several cassettes.  Atari Basic and Atari Pilot were the 
first two carts that I remember, as far as the cassette tapes go - I 
remember being BLOWN away by "States and Capitals!"  A long loading 
sequence replete with tones, beeps and boops - and if you were lucky, it 
loaded without any problem.  I don't know how many other programs did 
this, but "States" actually recorded audio that synced up with the program 
on-screen presentation!  Professionally recorded voiceover and music track 
that lead into the drawing of the map of the U.S - and then the quizzing 
on all fifty states and captials.  As you could probably imagine, I 
learned these pretty quick.

I can still hear that voice and the music, even today, naming a few random 
capitals "Or, how about Juneau..."

The first time I heard redbook audio in the mid 1990's with a CD-ROM game, 
I remember thinking back all those years to that specific moment.  The 
in-line use of audio with other cassette programs might have been common, 
but I certainly didn't encounter any other programs that managed to pull 
it off quite that well.

Cassette loading was cumbersome and rife with errors...too hot, too cold, 
humid, dry, the tones had to be just right - originals fared better, but 
we frequently used the cassettes to store BASIC programs, and using 
household cassettes and "taping over" was a recipe for errors and 
frustration.

I remember thinking that the tones were very similar to the emergency 
broadcast tones heard on radio and television, too.

We did have a few of the early cartridge video games too - Star Raiders, 
Missile Command and Pac-Man are the three carts that we had with that 400.  
More on that in a little bit!

Our hardware setup was pretty typical of most users - we had a small color 
TV that required use of the signal converter, an early dot matrix printer, 
a few paddles, a few joysticks, the cassette loader/recorder, and that was 
it. The membrane keyboard was replaced with the brown tactile keyboard, 
and that was a group effort.  While the keyboard was off, George and I 
increased the system memory from 16K to 32K (verified with a tidy PEEK and 
POKE statement in BASIC) and that saw us through that first year.

The computer camps were successful and Atari machines were deployed in 
various university departments for faculty, staff and students.  The 
equipment of choice changed to the Atari 800 - which eventually replaced 
the 400 at our house as well.  The 48K Atari 800 a big step up and brought 
with it the advent of floppy disk drives, additional memory, two cartridge 
slots and four (!?!) joystick/hardware ports.  The stock keyboard seemed 
to take its cue from the electric typewriters of the time, with large keys 
and a silent keystroke (not including the audible, slightly jarring cursor 
noise that came through the TV or monitor.)

I jumped right into programming in Atari BASIC, LOGO and Pilot quite early 
on, and I'm told this was a big motivating factor in me actually learning 
to read.  Assembly language calls were accomplished with "DATA" statements 
in Basic, and there were Assembler/Hex Editors available...I remember 
using Action! to do a crude starfield (inspired by Star Raiders, of 
course!) but moreover, things like faster joystick routines, direct access 
to Port 3 for Modem Access, and loading custom character sets as "sprites" 
in Graphics Mode 3 (?) and animating them...all of that with the "DATA" 
calls in BASIC.

We also bought our first modem to use with the 800 - the venerable MPP 450 
baud model - a true 300 baud connection, pushed to 450 if you were 
interacting with a fellow MPP on the other end, but even that was far from 
trouble free.  Of course, I'll cover BBS specific stuff in the next 
message, but the action of dialing the University mainframe and then, the 
first BBS - was something quite remarkable.  Both my Dad and I were amazed 
that there was this great system, organized, interesting, and open - 
download something, if you'd like, and, of course, upload something 
too...what a deal.  I mentioned it before, but the intro screen for the 
CLAUG (Chicagoland Atari Users Group) BBS mentioning the XMODEM protocol 
by Ward Christensen.  Of course, I didn't know it then, but being in the 
Chicago area and dialing in at that early point in BBS history really 
connected me to a living piece of incredible computer history.  

The MPP worked well, but it did get pretty warm if used for longer than 
half an hour - at some point, we also had a Volksmodem (I get the joke, 
now, many years later), and burned up an old Atari 810 disk drive with the 
"Direct to Disk" download function...sigh.  The other drives fared a 
little better.  Pinball Construction Set was the culprit, if memory 
serves!

I have chosen to focus on the Atari 400 and 800 because they were at the 
forefront of my computer education and use.   We did have Apple products 
too - we had a IIc for Appleworks and purchased a IIgs, new, in its maiden 
year.  By the time the IIgs came to the house, the 800 wasn't used as 
much, but it was never really retired, if that makes sense. 

Stepping back from this and viewing in a different way - more 
specifically, to the actual 6502 and its history -- I'll talk more 
specifically about features and functionality, software, and my sense of 
how the 6502 and the Atari fit into the rest of the computer world.

I became aware of the origins of the 6502 a few years ago as a bit of a 
tangent from researching early home computer kits (4004/8008.)  From 
Motorola to MOS and back again, lawsuits, settlements, cross-licensing, 
and, then, to Commodore.  This CPU powered the jewels of the 8-bit 
computer age, in my view.  The Atari (of course), the Commodore 64, and 
growth versions powered the NES and SNES and eventually the IIgs with the 
65C816.  Shifting back to the Atari, the tumultuous "journey" of the 6502 
provides an appropriately sad foil for Atari's corporate history, which 
I'll talk about in just a bit.

Atari, with the 400 and certainly, the 800 -- allowed its users to do 
things that just couldn't be done on the early IBM PC machines of that 
era.  Sure, the processor was slow - 1.79mhz, and, yes, you didn't have an 
abundance of system RAM.  But, how, then, were the early cartridges - like 
Star Raiders -- able to accomplish fluid graphics movement, complex 
worlds, good player/missile and joystick inputs?  Why did the PCjr, which 
came out years later - lag behind in this regard?  The Apple II line (II, 
II+, IIc, IIe) also utilized the 6502 but didn't have the ANTIC chip or 
robust 4-voice sound processing...better, still, than anything IBM had to 
offer in the "PC" space, but, in my view, just not quite as complete as 
the Atari platform.

Certainly, the Commodore 64 could boast of many things the Atari 800 could 
not - and while we did have an 800XL and 130XE in the later years, they 
never really replaced the 800.

I know that the "Machine Wars" have been documented, filmed and written 
about - please don't take any of this as a call to arms or anything of the 
sort.  I do still feel, though, that the Atari never really got a fair 
shake.  "People" looked at its spec. sheet and said "There's no way that 
will be powerful enough to do what I want" - or "There's not enough memory 
to do what I want."

This leads me to an entirely different subject but one that is relevant.  
Constraints!  How did we do it with only 48k at a time?  Hell, how did 
THEY do it on hard coded 8K carts?  Are you kidding me?  Every character, 
every bit, every byte - literally - had to be accounted for.  I see, in 
this, an elegance that goes to the very core of computing and machine 
language (or assembly language).  I'd love to see some of the code for 
"Star Raiders" (and, to be fair, I haven't looked for it) because it _had_ 
to be super-optimized.  Some tricks that I remember had to do with storing 
variables - if you had a statement like this:

10 FOR A = 1 TO 100:NEXT A

You could save space by defining that "100" as a letter - let's say "D"

5 D = 100
10 FOR A = 1 TO D:NEXT A

The syntax here isn't perfect - it's close, I think, but you get the idea.  
How difficult it is not to put a semicolon at the end of those 
lines...wow.

Certainly, each different computer owner will boast about what his machine 
can do that yours can't -- and we were certainly not the norm having a 
mixed bag of Atari and Apple - but there was something compelling about 
the constraints of the 800, the 48k memory and the 6502.

Part of it, too, was the processor's flexibility.  Interfacing with the 
ANTIC routines for graphics and the sound handling certainly seemed ahead 
of its time.  Early stage 3Dfx or Nvidia, if you will.  Amazing things 
could be done with straight machine language but I keep coming back to the 
fact that much of this was possible in Atari BASIC, too.  How great was 
that?  This gave us games like any of the J.R. Kastens (spelled wrong, I'm 
pretty sure but actually written and run in BASIC) or the early Sid 
Meier/Microprose titles like Floyd of the Jungle or Solo Flight that 
actually needed the BASIC cartridge present to run.

These things were all so accessible.  Accessible to young programmers like 
me, all the way up to the big software houses like Sierra or EOA (remember 
that?).

My hat is truly off to the MOS pioneers - their story reminds me of the 
AT&T guys creating UNIX on non-sanctioned off time and then showing it to 
the bosses.  I spoke rather passionately about how the 6502 powered my 
beloved Atari 800, but, it says a lot that this technology could be 
adapted to such different and varying platforms!  I'm going to bet that 
very few people know one chip or a close variation powered the early 
Apple, Commodore and Atari systems - not to mention the early consoles.

I enjoyed programming in the 6502 environment more than on anything else, 
without a doubt.  Nothing comes close.  I know it is truly an 
object-oriented world now, and I can understand and appreciate the 
best-practice model of code reuse and modular-style programming.  I have, 
though, still, after all these years - a sense of dread writing methods in 
C++ or Objective-C because, well, it doesn't matter what order they are in 
- and growing up in a line number/subroutine environment, that's a very 
difficult thing to let go of...don't get me wrong, I enjoyed the hell out 
of creating an iOS app, getting back into the programming world through 
XCode and the Mac, but, with line numbers came a sense of order.  Some 
would say a confining environment - I say one that was logical, 
understandable - while still allowing for boundaries to be pushed...see 
also CES Demos (Robot, Spaceship, Bouncing Ball, Cycling Atari Sign.)  
Really, it made it enjoyable.  It was easy to have fun - you didn't have 
to invoke a foundation class or library to access any of this - sure, to 
get to the enhanced ANTIC modes you might have to call a Graphics mode 
that was a bit our of the ordinary, but it was all there...somehow, in 
48k.

This is getting long, even for you, Jason, I fear - I'm going to touch on 
some of the watershed software packages that I really remember, including 
games - again, maybe some of these are more appropriate for your "Arcade" 
documentary, but I'll just shotgun through them and I can certainly expand 
if necessary.

I mentioned Star Raiders already, but, Missile Command...faculty in the 
aforementioned R&D department would play this on their lunch break and 
after hours - if you really, REALLY got far, the screen colors would shift 
- background colors too...

Wizard and the Princess...Adventure...Canyon Climber...Solo Flight...Floyd 
of the Jungle...Track and Field...Temple of Apshai...Miner 2049'er...Blue 
Max...River Raid...Zaxxon...Qbert...Pole Position...Pitstop...The Great 
American Cross Country Road Race...Pinball Construction Set...Racing 
Destruction Set...Atari Music System (AMS)...Touchdown Football...Snooper 
Troopers...In Search of the Most Amazing Thing...F-15 Strike 
Eagle...Elektraglide...Raid Over Moscow...and, an all time favorite...Jet 
Set Willy.

Many of these titles were not unique to the Atari - many were ported to 
the C64, some started there, some started on the Apple II...this is, by no 
means, an exhaustive list.  Atari Music System deserves a bit more mention 
because of how incredibly full featured it was - wow.  We actually 
transcribed (read, entered every NOTE) a few songs straight from piano 
sheet music...the Love Boat Theme, I think?  Sign of the times, indeed.

Lastly, a bit of history as I remember it, back then and now, and that'll 
be it for my 6502 musings.  Certainly, the 6502 has been successful - 
across many computer platforms, in cars, appliances, etc.  IBM is still 
cranking along as a strong company and Apple is too - yet, Commodore and 
Atari are gone as we knew them, and so begins the "Tramiel Schism" that, 
to this day, is still a little baffling.

Tramiel comes from Commodore to Atari and accomplishes some great things - 
the Atari ST product line is a perfect example, right?  A great machine - 
way ahead of the Mac, but with a common CPU (the 68000).  Midi capability, 
good graphics and sound, more system memory, all the things that IBM PC, 
Commodore and, to some degree, Mac owners could point to and say "I have a 
real computer, not a game system."

Was this Tramiel's fault?  Certainly, some of the blame lies with him - 
I'm sure books have been written and more specific historical pieces 
filled in, but despite all that, looking back, the 6502 was solid, 
reliable, scalable, adaptable and more damn fun than anything else out 
there, in whatever platform you liked.  

Whew...that's enough for now.  If nothing else, I hope this was enjoyable 
to read, and I look forward to expanding on my BBS memories a bit.

Best regards,
-Chris Olson
