______________________________________
ZMAGAZINE 83         -Special Edition-
December 11, 1987       Volume 2 No.50
______________________________________
ZMAG BBS (201) 968-8148 300/1200 24 hr
______________________________________
Modifications and Technical Help Issue
______________________________________
Part 1

Publisher/Editor: Ron Kovacs

Special thanks to the following for
thier assistance this year.

         Ken Kirchner
         Susan Perry
         Mr. Goodprobe
         Steve Godun
         Calamity Jane
         John Nagy
         Rich Decowski
         Mike Shoenbach
         Ron Luks

and the systems carrying Zmagazine
each week.  Check out the end of year
issue dedicated to the Zmag Systems.
______________________________________
Xx Index 83
______________________________________
The following columns have appeared in
Zmagazine New Jersey during the past
year.  These articles will pertain to
modifications, fixes, technical help,
and other articles.  These are
reprinted and re-publication of this
material is granted as long as ZMAG is
credited.  This series of Special
Issues will contain three parts.

<*> 1050 Disk Drive Fix....W. Pelzer
<*> SpartaDos Help........Gerald Cox
<*> VCR Cable Hook-ups....Dawn Gordon
<*> MyDos Modification....J. Wallace
<*> Textpro/Express.......Don Lebow
<*> ARCX Help.............GEnie Atari
<*> Hayes 1200 Fix........F. Walters
<*> Joystick Port.........C. Grimsby
<*> Terminal Comparisons..F. Seipel

The following BBS has been added to
the Zmag System List.

  Mall Five Opus (617) 625-5348 or
                 (617) MAL-LFIV
______________________________________
Xx 1050 DISK DRIVE FIX
______________________________________
by Willie Pelzer

This text file will (hopefully) tell
to how to fix your 1050 drive ONLY if
the following conditions are true.

#1 The drive reads disc files okay.

#2 The speed of the drive is correct.
Their are Utilities in DL3 that you
may use to check the speed. Just
BRO/KEY SPEED.

#3 The drive refuses to format when
given the command and either formats
the first two tracks or none at all
and then just spins. Sometimes it will
return an error #139.

#4 It refuses to write and when given
the command,just gives an error# 139.

These are the problems that I had with
my US doubler 1050. If you have the
same EXACT problem, this fix MAY work
for you also. CAUTION! If you are not
handy with drive internals, or do not
want to take responsibility for trying
this,then send the thing to ICD for
repair (or any drive repair service).
Why am I being so cautious? Because
while this fix DID cure my drive, I
wanted to let you know that I can't
say what it may do to yours. Still
game? Okay,here we go.

You will need a pair of needle nosed
pliers, a phillips screwdriver, and a
switch (I used a cheap Radio Shack
pushbutton, less than $3.00). Also,
about 10 inches of wire. I used a
piece of small gauge speaker wire. And
a low wattage soldering iron (25 watts
will do).

First, unplug your drive and turn your
drive over and unscrew the four
recessed screws that hold the top
down. You should'nt have to remove the
front two that hold on the face
plate. Now turn the drive right side
up. Lifting from the rear, remove the
top. Be VERY careful not to disturb
anything! On the left rear of the
printed circuit there are four brown
plugs that are marked (on the board)
from front to rear as J11, J12, J1,
J10 and J14. The one we want is J11,
the closest one to the drive motor.
Take a magic marker and mark the front
of the plug, this will make it easy to
know which side is the front. The two
wires we want are the north pair of
the four (when you're in front of the
drive). In other words, of the four
wires in plug J11, we want the first
two, closest to the drive motor. Once
it's marked, CAREFULLY remove the plug
with a pair of needle nosed pliers.

Carefully remove the some of the
insulation from our two target wires.
Take a small piece of wire and connect
the two wires together. Tape them to
prevent a them from shorting out
against antthing. This is only
temporary, as first we will test the
fix to see if it works.

Replace J11 (using the magic marker
mark as thefront) and without
replaceing the top, plug up your drive
as usual. Load your dos. Using a blank
disc, attempt to format. IF when the
first two wires of J11 are connected
together, the drive formats and writes
then we are on the way! If the drive
still refuses to format or write, then
undo the jumper that you made on J11,
tape the two bare spots on the two
wires and replace J11.

Replace the cover and send the drive
out to be fixed. If the drive now
formats and writes, then on we go!

Unplug the drive and go back to J11.
If everything is working now, we have
to wire up a switch because connecting
the two wires of J11 together over
rides the write protect of the drive.
You can now write to ANY disc, whether
it has a notch, write protect tab, or
no notch at all. So, we have to put in
a switch so that we can go from the
old NO format, no write condition to
ALL format, all write condition.

Remember those extra write protect
tabs that you had? Put them on ALL
your discs! Just in case the sensor
starts working again and formats or
writes when you least expect it. All
you people that use both sides of a
disc (a bad practice I'M told), will
now be able to format or write to side
two without making a notch. On to the
finish...

Remove J11 again and remove the jumper
wire that connected the first two
wires. What we want to do is solder a
length of wire to each of the two
wires (the bared portions). Once
you've done this, tape each wire well
and replace J11 on the board. (use
your mark for front!). Each wire
should now be separate with a length
of wire coming from it.

Now solder a wire to each of the two
terminals of your switch. (first
decide where you're going to mount
it, I mounted my pushbutton on the
lower sloping portion of the face
plate). Without replacing the cover,
plug your drive in and test it once
again for format and write. If it
does'nt write or format the first time
then push the switch to the other
position. It should now work. If it
worked the first time, it should work
now. If not, go over your work. Maybe
you did'nt make one of the connections
properly.

If using a pushbutton switch, in
should allow the drive to function as
it should and out should restore it to
it's former no write condition.

Now mount your switch, (keep the wires
away from the drive mech.) and replace
your cover. As to WHY this works or
what happened to break your drive in
the first place, well sorry I don't
know. I do know that it worked for me
and I'm hopeful that this $3.00 fix
works for you.

Wpiii
Willie Pelzer 3rd ppn# 73247,206
______________________________________
Xx SPARTADOS HELP
______________________________________
by Gerald Cox

How many times have you wished you 
could call a binary file AUTORUN.SYS 
and have SpartaDOS load it automaticly
for you but the program will not run
with the key board buffer installed.
Until now the only way was to use a
startup.bat file to do a key off then
load the program.

Well I got tired of it and discovered
that you can search the X32D.DOS file
for three bytes and change them and
the default on boot up will be the key
board buffer off. Just get out the
SpartaDOS Tool Kit and load the Diskrx
sector editor. Search for these three
bytes. 20 DB FF. Change them to EA EA
EA. Thats all there is to it. I also
changed the ver. number to X32k.DOS so
I would know that it was the one with 
the default K.B. off. I think this
makes a great dos even better.

If you don't have Diskrx then format a
disk with AINIT. Copy X32D.DOS to it.

Load up what ever sector editor you 
have and go to sector 106. Now change 
the bytes 20 DB FF to EA EA EA.

Gerald Cox
______________________________________
Xx Tv-VCR CABLE HOOK UPS
______________________________________
Copyright 1986 Dawn Gordon

If you've ever had a problem hooking
up your TV and VCR to a cable system
with scrambled channels you know what
the word painful really means. But
you're in luck cause if you want to be
able to restore programmability to
your VCR, restore remote control to
your TV, restore time shifting, and
the ability to tape both regular
channels and scrambled cable channels,
here's the answer:

SUPPLIES

1 Two-way splitter
 (a type with as little dB loss as
  possible--you can even get one with
  a built-in amp)

1 A/B switch

5 Coaxial cables with attached F
  connectors

PROCEDURE

1)   Take the main cable that normally
  goes into the cable box, and put a
  2-way splitter on it.

2)   Take a coax cable and attach it
  to one of the outputs on the
  splitter with the other end going to
  the cable box input.

3)   The other output of the splitter
  goes to the A input of the A/B
  switcher.

4)   The output of the cable box then
  goes to the B input of the A/B
  switch.

5)   The output of the A/B switch then
  goes to the VCR RF input.

6)   The VCR's RF output goes to the
  TV.

Here's how it looks graphically:

          Main  :  Cable
                :
             ******
Splitter ->  *    * ---------------
             ******               :
              :                   :
              :                   :
      ************** --------     :
      * Cable      *        :     :
      *    Box     ****************
      ***************    A/B      *
                    *   Switch    *
                    ***************
                                  :
                                  :
                                  :
                    ***************
                    *    VCR      *
      ------------- *             *
      :             ***************
      :
      *******************
      *                 *
      *      TV         *
      *                 *
      *******************

Well that's how it works.  With the
switch in the A position on a standard
TV you get VHF channels, and when in
the B position you get the output of
your cable box, which unscrambles pay
channels.  If you own a cable-ready TV
and/or a cable-ready VCR you can get
all cable channels (except scrambled
ones) in the A position.

PAY CHANNELS & ROOF ANTENNA

If you have both pay cable and a roof
antenna and wish to mix them here's
what you do:

SUPPLIES

1 A/B Switch

3 Coaxial cables with F-connectors
  attached

PROCEDURE

1)   Take the main cable and connect
  it to the input of your cable box.

2)   Connect a coaxial cable to the
  output of the cable box and run it
  to the B input of an A/B switch.

3)   Take your main roof antenna cable
  and attach it to the A input of the
  A/B switch.

4)   The output of the A/B switch then
  goes to the VCR RF input.

5)   The VCR's RF output goes to the
  TV.

Here's how it looks graphically:

          Roof  :  Antenna
          Main  :  Cable
                :
       :                    :
       :                    :
       :                    :
       :                    :
************** --------     :
* Cable      *        :     :
*    Box     *       ***************
**************       *    A/B      *
                     *   Switch    *
                     ***************
                            :
                            :
                            :
                     ***************
                     *    VCR      *
       ------------- *             *
       :             ***************
       :
*******************
*                 *
*      TV         *
*                 *
*******************

When you switch the A/B switch to the
A position you get your roof antenna,
and when you switch it to the B
position you get your cable box.
______________________________________
Xx MYDOS MODIFICATION
______________________________________
by Jon Wallace

This is the correct version of the
mod.  The other one works until you
try and make your ramdisk bigger or
smaller.

Mydos 4.1 fix for Basic XE.

For you rare owners that use Basic
XE,Mydos 4.1, and a Ramdisk(of course
you would have to have a Ram upgrade)
here is a little fix so that you can
write to your ram disk in EXTENDED
mode of Basic XE without a lockup.
Simply type in these four statements
in basic and then go to Dos and
re-write Dos files.

POKE 5487,133
POKE 5488,49
POKE 5489,9
POKE 5490,175

Then you have to modify a byte in
Dup.sys.  I used Disk Wizard 2 and
scanned dup.sys for 8D 70 15 (in
hex) and changed the 70 to a 72.

You can use omnimon and change

2E15 STA $1570 to 2E15 STA $1572

and re-save Dup.sys.

Don't know if that is the fastest way
to solve the problem but it is the way
I found first.  (Second) If you have
any questions let me know.
______________________________________
Xx TEXTPRO and EXPRESS
______________________________________
by Don Lebow

Here's my method...

First, create a TEXTPRO/EXPRESS MASTER
DISK containing the following files:

DOS.SYS
RAMDISK.COM
TEXTPRO.COM (version 2.5r only!)
TEXTPRO.CNF (config file)
TEXTPRO.FNT (custom font)
TEXTPRO.MAC (default macro file)
EXPRESS.COM (1030 Express v 3.0 only!)

IMPORTANT: if you wish to use a
joystick driver with Express, you
<MUST> use the customized DOS 2.5
driver available in this DL as
TPXPST.OBJ As with the original
joystick driver (see JOYSTK.DOC in
DL2), you should append Express to the
driver using the /A parameter in DOS
2.5 (for example: select <C>opy File
then input:

D:EXPRESS.COM,D:TPXPST.OBJ/A

After you've got it appended, Rename
as appropriate.)

CONFIG.EXP  (express config file)
PHONE1.LST  (default phone # list)

Got it? NOW do some renaming...

RENAME TEXTPRO.COM to DUP.SYS
(that means that it will automatically
 be saved to D8: when you boot with
 RAMDISK.COM) Before you do this, make
 sure you've erased the <ORIGINAL>
 DUP.SYS to prevent duplicate
 filenames.)

RENAME EXPRESS.COM to AUTORUN.SYS

You're ready to go!

Boot up your XE as normal with Express
using your new master disk. Turn on
your 1030 modem, then the drive, then
turn on the computer while holding
down the OPTION key to cancel Basic.

When the load is done, and the Express
menu is up...

MOST IMPORTANT: DELETE 'D8:MEM.SAV'
using the 'J' command in Express!

Dial up wherever and capture whatever
text you want to D8: text files. When
you're done, sign off as normal and
you're back to the menu.

NOW...

<MAKE SURE> that you have your master
disk in D1: (or any disk that has the
TEXTPRO aux files on it) Ready?

Press RESET. You'll see TEXTPRO
(remember, we've fooled the computer
into thinking it's DUP.SYS) loading
(fast!) and then the aux files loading
from D1:

Viola! You are now in TEXTPRO
<without> having to do a re-boot!

The text files you have on D8: are
still there. You can now go ahead and
edit, do replies, whatever, using
TEXTPRO's power.

DO NOT turn off your 1030 modem!

When you're done editing (at this
point, I usually have a text file of
replies and msgs on D8:), and ready to
get back On Line..

<MAKE SURE> you have a disk in D1:
with EXPRESS and it's aux files (that
Master Disk, again, is REAL handy.)

Use the TP <SELECT-CONTROL-W> command
to do a binary load. At the prompt,
input AUTORUN.SYS (or whatever name
you have Express saved under.)

Providing you've followed the above
steps, you'll see Express loading
(again, no need to re-boot!) and
you'll be back in Express, ready to
Upload your new text files!

Note that D8: still contains any files
you've saved. Just like they say in
the DOCs, it's functioning as a
clipboard (though Mr. Paranoia, here
always saves anything vital out to
D1:, just in case...)

That's all there is to it. I've found
that you can continue swapping back
and forth between the two programs
with no degradation in performance.

If you run into problems, leave me a
message and I'll see if I can help...

>>don [70717,720]
______________________________________
Xx ARCX HELP
______________________________________
(C) 1987 by Atari Corporation, GEnie,
and the Atari ST Roundtable. May be
reprinted only with this notice
intact. The Atari Roundtables on GEnie
are *official* information services of
Atari Corporation.

To sign up for GEnie service, call
(with modem) 800-638-8369.  Upon
connection type HHH (no RETURN after
that).  Wait for the U#= prompt.
Type XJM11877,GEnie and hit RETURN.
The system will prompt you for your
information.


HELP for using ARCX v1.2 <file #1908>

This is a short -How to...- on the use
of ARCX version 1.2 as found in the
GEnie 8 bit Atari RoundTable.  This
file is broken into two parts:

1> loading ARCX
2> running ARCX

Since there are few differences in
ARCX v1.1 and ARCX v1.2, we will refer
only to ARCX.  It is strongly
recommended that you download ARCX
v1.2 as it is about 30% faster than
v1.1 and will therefore save you some
time off line when recovering files.

ARCX is the program that you will need
to be able to recover and use all of
the files in the Atari RoundTable that
are stored in the ARC format.  See the
file ARC.HLP for more info on the
creation of an ARC'd file.

LOADING ARCX
************
To load ARCX, place a disk with your
DOS file(s) on it in D1: and turn on
the computer.  BE SURE TO HAVE ALL
CARTRIDGES REMOVED AND ON XL/XE
MACHINES, HOLD DOWN THE -OPTION- KEY
TO TURN OFF BASIC.  ARCX is known to
work with Atari DOS 2.0 & 2.5,
SpartaDOS <all versions>, and MYDOS
4.0 and up.  ARCX  ** WILL NOT ** 
work with SMARTDOS.

Once to the DOS menu, you may set up
your RAMdisk, copy files to the
RAMdisk, etc..  It is recommended that
you have a freshly formatted disk
ready to receive the recovered files,
so you might also want to format a
disk now.

Now place the disk with the file
ARCX.COM on it in the drive and do a
binary load of the file.  From Atari
DOS, this is option 'L' and the file
name to load is ARCX.COM.

From SpartaDOS, just type ARCX
<RETURN>.  ARCX will load into the
computer and be ready to run.

Note that ARCX will work with all
Atari 8 bit computers with at least
48K of RAM and one disk drive.

RUNNING ARCX
************
The first line of the ARCX menu will
prompt you for a file name.  If the
file to be unARC'd has the extender of
.ARC <as it should>, you need only
type in the file name and not the
extender.  <ie to recover TEST.ARC,
you need only type TEST>  If the file
to be recovered is in any drive other
than D1:, you will need to give the
device as part of the file name. <ie
from a RAMdisk as D8, you would type
D8:TEST>  You may also see a directory
of a disk by pressing the '+' key.

NOTE:

ARCX does not allow the use of wild
cards, so you must enter the complete
file name.

Once you enter the file name to be
recovered and hit <RETURN>, ARCX will
ask for a destination drive.  This is
just a number from 1 to 8. There must
be an active drive that is ready to
receive the recovered file(s).  If you
want to send the recovered file(s) to
D2:, put your formated disk in D2:,
and press '2'.

The last option that you will see is
if you want the screen turned off or
not while ARCX is working.  Pressing
the 'N' key leaves the screen on and
pressing 'Y' turns it off.

Unless you are just curious, it is
recommended that you turn the screen
off <answer 'Y'> because ARCX is about
25-30% faster with the screen off than
with it on.  Once you press the 'Y' or
'N' key, ARCX will proceed to read the
source file and write to the
destination drive.

POSSIBLE PROBLEMS
*****************
At the very start of the ARCX process,
you may get several different I/O
errors.  I have found that most of
these are because of the failure to
give a valid file name.  If this
happens, make sure that you have given
the COMPLETE file name with NO
wildcards.  As a matter of habit, I
also enter the .ARC extender as part
of the file name. Also make sure that
the destination disk is freshly
formated and is not write protected.

If ARCX fails to do anything when you
load it, MAKE SURE THAT BASIC IS OFF/
REMOVED.  ARCX will lock up if BASIC
is on.

While ARCX is working, you may
sometimes hear a high pitched beep. If
the screen is on, you will also see
the note -filename.ext Fails CRC
Check-.  This means that ARCX has
encountered a file in the ARC'd file
that for some reason does not match
the original source file.  This DOES
NOT mean that the file is bad!  This
often happens on text files and is due
to the block padding that most Xmodem
file transfer systems do.  If you get
a CRC error, try to run the recovered
programs.  Odds are, they will
probably run with no problems.  If you
do find that they will not run, use
ARCX to recover the *.ARC file again
and see if the error occurs again.  If
you have more problems, please leave
E-Mail to one of the Atari RT SysOps
with the file name/number, and a full
description of the problem.

You may get a disk full error if you
are using only one drive.  ARCX
supports the use of a RAMdisk and it
is recommended that you use the
RAMdisk if you can.  If you have only
one drive and no RAMdisk, you will be
limited as to the size of the file
that you can recover since both the
source *.ARC file and the recovered
file(s) must all fit on the same disk.
As a rough guess, the *.ARC file
should take up no more than 30% of the
total disk space.

Many people have left me mail saying
that ARCX has -Locked up- when in
reality, it was doing just what it
should be.  This apparent lock up is
because ARCX is fairly slow and does
little disk access, so not much seems
to be going on.  As a rule of thumb,
allow ARCX 1 minute for every 5K of
*.ARC file size.  <5K=40 SD sectors=20
DD sectors> This way, you won't be
expecting ARCX to just zip right
through.

Hopefully, this will answer many of
your questions about how to use ARCX
to recover the files here in the Atari
8 bit RT.  If you should have a
specific question, please feel free to
drop E-Mail to one of the SysOps, and
we'll be glad to help in any way we
can.
______________________________________
Xx HAYES 1200 PROBLEM
______________________________________
by Frank Walters SysOp, T.A.C.O. Bell
Panama City, FL

When attempting to set up an Oasis BBS
system, a fellow sysop contacted me to
see if we could figure out a problem
it had with recognition of connect and
disconnect. Here is what we found out.

He has a 'new' model Hayes 1200, while
I have the 'old' model of the same
modem. The new model has 10 dips,
while the old model has 8. That's how
we tell them apart, especially if you
only have one. After talking with the
technical representitive at Hayes, it
turns out there was an undocumented
change in how the 1200 baud model
handles DSR (data set ready). Since
most terminal/BBS software uses the
DSR signal as part of the STATUS
check, it is critical for proper
operation that you understand what you
are getting.

The 'old' model, like most modems,
sets DSR high at carrier detect.
Actually, the Hayes has a jumper
between pin #6 (DSR) and pin #8 (CRX)
so that when it sets CRX high, it
automatically sets DSR high. The
STATUS call will send a value of 8 to
address 747 (decimal) for CRX high and
128 for DSR for a total increase of
136 in address 747. Most software
depends on this higher value to
determine 'connect' after dialing, or
(for BBS software) to determine that
a caller has connected.

The 'new' model (10 dip switches) of
the Hayes 1200 changed the jumper to
pins #6 (DSR) and #5 (CTS), the latter
normally not even connected by cable
to the 850 interface. However, when
the modem sets Clear to Send high, it
is BEFORE carrier detect, and since it
is directly connected to DSR, it also
sets DSR high before connect,
resulting in a false connect signal to
the software.

How do you get the 'new' modem to act
like the 'old' model?

1) Modify the modem. Nobody wants to
   mess with the modem warranty or
   screw that up.

2) Modify the software. Most people
   don't know how to do that at all,
   and you would have to change every
   program you use anyway.

3) Modify the cable. This appears to
   be the best solution. Here is how
   we did just that:

Disconnect the wire at pin #6 on the
RS-232C end. Disconnect the same wire
(also pin #6) at the 9-pin D plug for
the 850 or P:R: Connection. This will
insure that the false DSR will not be
sent from the modem.

Then to simulate DSR at connect,
solder a jumper wire at the 9-pin D
plug (850 interface end) between pin
#6 (DSR) and pin #2 (CRX). Now when
Carrier Detect is set high, it also
sets DSR high. This cable will work
with the older models too.

Here is a diagram of the new cable:

850 (9 pin/D-male)    RS-232C (25 pin)
_________________     ________________

  #1  DTR >------------------> DTR #20
++#2  CRX <------------------< CRX  #8
+ #3  SEND DATA >-------> REC DATA  #3
+ #4  REC DATA <-------< SEND DATA  #2
+ #5  SIGNAL GND ------ SIGNAL GND  #7
++#6  DSR <--/(disconnect)/--< DSR  #6
  #7  RTS      (not used)      CTS  #5
  #8  CTS <-------< HI SPEED INDIC #12
  #9  (not used)


++NOTE: Jumper between pins 2-6 so
that DSR is set high whenever CRX is
set high by the modem.

NOTE: #8 CTS to #12 HI SPEED INDICATOR
is only for auto answer with some BBS
software for baud recognition but
otherwise not required. Avatex modems
do not have #12. Some BBS software
depends on the RING INDICATOR to force
the program to send an ATA to the
modem. In this case you can use #8 CTS
to #22 RING INDICATOR instead of the
8-12 as shown.

Call Hayes Microcomputer Products at
1-800-241-6492 for further
information.
______________________________________
Xx HACKING THE JOYSTICK PORT
______________________________________
By Chuck Grimsby

As every Atari Basic programmer knows,
the joystick port can be used to
produce nine different actions or
commands (excluding the center or
'null' position), utilizing the
STICK(x) and STRIG(x) commands. The
numbers your programs look for are:

value     stick posistion
-----     ---------------
14          UP
13          DOWN
 7          RIGHT
11          LEFT
 6          UP RIGHT
 5          DOWN RIGHT
 9          DOWN LEFT
10          UP LEFT
15          CENTER (NULL)
 0          FIRE,     (USING STRIG(0)
 1          NOT FIRE

You may have noticed that there are
some numbers missing from that list,
and from all lists that show you how
to use the STICK(x) command. Where are
the numbers 0-4, 8 and 12?

Well, actualy those numbers are there
and are readable, but you can't use a
normal joystick to produce them. You
either need a numeric keypad (like the
old Atari CX-85) or a special
'joystick' consisting of buttons in
place of a single stick.

I built myself a special joystick to
use as a non-moving mouse (my desk
space is VERY limited) and discovered
I had also created a joystick that
would produce those non-standard
numbers.

My brother has dubed this device a
'Dead Mouse' and it has proved to be
very handy. It also works great as a
very accurate joystick for
MicroPainter.

The new STICK(x) list using the Dead
Mouse looks like this:

   VALUE          BUTTON(S) PRESSED
   -----          -----------------
       0          UP DOWN LEFT RIGHT
       1          DOWN LEFT RIGHT
       2          UP LEFT RIGHT
       3          RIGHT LEFT
       4          UP DOWN RIGHT
       5          DOWN RIGHT
       6          UP RIGHT
       7          RIGHT
       8          UP DOWN LEFT
       9          DOWN LEFT
      10          UP LEFT
      11          LEFT
      12          UP DOWN
      13          DOWN
      14          UP
      15          NONE (NULL)

The numbers produced through the Dead
Mouse can also be used to simulate the
numeric keypad IF you have the proper
AUTORUN.SYS file AND press the FIRE
button with the other keys.

The following list shows the funtions
that the Dead Mouse key presses will
return. Remember to ALWAYS press the
FIRE button as well.

 FUNCTION     DEAD MOUSE KEYS
 --------     ---------------
 DELETE       UP DOWN LEFT RIGHT
 YES          UP DOWN LEFT
 NO           UP DOWN RIGHT
 -            NONE (NO KEYSPRESSED)
 +ENTER       UP
 0            UP DOWN
 1            DOWN LEFT
 2            UP LEFT
 3            LEFT
 4            DOWN LEFT RIGHT
 5            UP LEFT RIGHT
 6            RIGHT LEFT
 7            DOWN RIGHT
 8            UP RIGHT
 9            RIGHT

The construction of the Dead Mouse is
simple, due to the fact that every
joystick made actualy uses four
buttons on the inside activated by
moving the stick. All you need to make
the Dead Mouse are five momentery
contact buttons, a female D9 conector,
a six conductor cable, and a project
box.

You can save yourself some time and
trouble by using the cable from an old
broken joystick, or buying a joystick
extension cord and cutting off one end
instead of making a new cable.

Start by drilling five holes for the
buttons in the lid of the project box
a little bit larger then the size of
the buttons, and one hole in the side
of the box for the cable to the
computer.

Next mount and secure the five buttons
in the holes and pass the cable
through the hole in the side of the
box. Make a knot in the cable on the
inside so the cable wont pull out.

Now solder the wire from the cable to
the switches following the table
below.

NOTE: Solder to ONLY ONE SIDE OF THE
BUTTON!!

        u 1 2 3 4 5  u
        \ O O O O O /
         u\ O O O O/u
           6 7 8 9

     PIN #     BUTTON
     -----     ------
     2          RIGHT
     3          LEFT
     4          DOWN
     5          UP
     9          FIRE

Now solder pin #7 to the other side of
ALL the buttons. This is the common or
-ground- line.

Put the lid on your box, and your Dead
Mouse is ready to use.

From experience, the Dead Mouse is a
very poor joystick, Don't even bother
to try and use it for game playing. It
is, however, a more profesional
looking device for use as a mouse than
a joystick, and a accurate drawing
tool for MicroPainter.
______________________________________
Xx TERMINAL COMPARISONS
______________________________________
Written by Frank Seipel

All terminal programs for the Atari
were not created equally.  Certain
applications can best be performed by
only one of the popular terminal
programs, three of which will be
examined in this article:

Backtalk1.2
Amodem 7.50
Express 3.0

All three of these programs exist in
various versions, so that they work
with all popular modem types:

MPP/Supra
1030/835/XM301
RS232c modems.

Backtalk, written in 1985 is nearing
its third birthday.  This program
offers some unique features.  I like
this program best if I am reading
text; even at 1200 baud, all text fine
scrolls off the screen.  It is a lot
easier on your eyes (good for those
late-night telecommunications
sessions).  This program also offers a
huge capture buffer -- under my
configuration of MyDos 4.3, it amounts
to around 10,000 characters.  Most
programs offer capture to disk, but
the larger the buffer is, the faster
the transfer will take place.

One thing which makes this program
extremely powerful is its ability to
accept macros.  A macro is a string of
text with imbedded commands.  You can
write scripts to call a board and
download files, read messages, and
then logoff. This could be useful,
say, for dialing a long distance BBS
late at night when phone rates are at
their lowest.  This program offers
more versatility in writing macros
than any other available for the 8-bit
Atari; it offers many more commands
than the competition.  Perhaps the
most useful application of macros is
repetitive commands; if you use the
flat-rate long distance service PC
Pursuit, then this program is
definitely for you.

Amodem was one of the first Atari
8-bit terminal programs available.
Over the years, it has evolved quite a
bit.  The latest version -- a single
Basic program -- runs on an MPP/Supra,
1030/835/XM301, or an RS232c modem
with no modifications!  All you need
to do is switch handlers. (in the past
different versions had to be used for
different modems).

Since 7.0 the program has been
improved drastically; it is numero uno
for file-transfers, with X-Modem SUM
and CRC being supported, as well as
Y-Modem CRC and batch.  No other
terminal programs for the Atari
support Y-Modem.  It works in a
similar manner to X-Modem, but block
size is 1,024 bytes as opposed to 128
bytes.  There are less handshaking
delays and the transfer goes about 20%
faster.  All the newer BBS programs
support Y-Modem protocol.

If you are using a 130XE and Basic XE,
you may wish to try out a special
version of Amodem -- v7.3.  It is a
modified version of the older Amodem
7.0, but with a major improvement -
the extra memory in the XE is used as
one big buffer!

Express is by far the easiest terminal
program to use.  It offers a better
autodial system than either of the
above two programs.  Although it
doesn't handle Y-Modem, its file
transfer routines are very reliable.
So many good things have been said
about Express that it would seem
useless here to bore you with the
details.

The Chameleon CRT Terminal Emulator
can be especially useful in certain
instances.  This hard-to-find program
emulate a myriad of different
terminals. It can also act as a file
server and supports Kermit protocol.

If you only need VT100 emulation,
there are a number of programs which
support this which are in the public
domain!  They even display 80 columns
on the screen.  However, the text is
compressed and difficult to read.
Still this program's advantages far
outweigh its disadvantages if you need
the full screen editing that a VT100
terminal offers.

Backtalk 1.2   AP0154 $19.95

The Catalog
544 Second Street
San Francisco, CA 94107


Chameleon CRT Terminal Emulator AP0113

The Catalog 
544 Second Street
San Francisco, CA 94107


Express, Amodem, and VT100 programs
are in the public domain and can be
found on the A.c.e.c. user group BBS
(614)-471-8559.
______________________________________
Zmagazine Issue #83  December 11, 1987
Special Edition ->Technical Help<-
(c)1987 Syndicate Services/Rovac
______________________________________
