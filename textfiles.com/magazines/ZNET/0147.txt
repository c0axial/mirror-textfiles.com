
          |SYNDICATE ZMAGAZINE|
          |    Issue  #148    |
          |  March 14, 1989   |
          |Copyright 1989, SPC|
          
                 
                
               
                           
                            
                             
 
 
 
        
        |This week in ZMagazine|
        
 
 
 
         Editor's Monitor 
             Harold Brewer

       Z*Net Press Release 
      Syndicate Publishing Company

     Turbo BASIC Command List 
          Dave and Laura Yearke
 
      Indus GT Modification 
               Rich Mier

    Bill Williams' Necromancer 
           Richard Brudzynski

      Oasis 4.3 Update News 
             Glenda Stocks

          Z*Net Newswire 
             Harold Brewer


                    

           
           |EDITOR'S MONITOR|
           
           
           |by Harold Brewer|
           


This is my second issue editing ZMag.
My thanks go to Ron Kovacs, John Nagy,
Craig Thom, Bob Puff, and many more
Atarians for their assistance and
support.  Editing ZMag is fun, and not
much of a strain on either me or my
8-bit.

I have been, and will continue to hunt
for ZMag readers' opinions.  Whether
a reader would like to see a particular
topic covered in an article, has a
commentary he would like to promulgate,
or actually wrote an article he would
like printed in ZMag--I'm all ears.

If you would like to drop ZMag a note,
commentary, or article, a listing of
ZMagazine -haunts- can be found at the
end of this issue.  Either leave a
message at the Syndicate Publishing
number or at any one of the three pay
services or five bulletin boards
listed.  ZMagazine is responsive.

Here is wishing everyone a happy
Saint Patrick's Day from the folks at
ZMag!


                    

         
         |Z*NET PRESS RELEASE|
         
   
   |by Syndicate Publishing Company|
   


Introducing Z*NET
 - The International ZMAGAZINE
Newsletter Supplement

The producers of the successful online
ATARI-interest publications ZMAGAZINE
and ST*ZMAGAZINE now bring you -Z*NET-,
a new concept in computer news
distribution for user groups!

After piloting ZMAG for over three
years of weekly online publication,
Ron Kovacs now makes Z*Net available to
Atari clubs world wide, with interest
shown so far in the USA, Canada,
Germany, England, Mexico, Panama, and
Australia.

The 12 page -hard-copy- Z*Net insert is
designed for inclusion in participating
newsletter-magazines already being
produced by Atari user groups.  The
insert features news, reviews, and
interviews, much like that which is now
included in (and WIDELY REPRINTED from)
the current ONLINE versions.  Over
1,500 issues through five publications
make up the pilot release this March,
1989.  Look for the premiere Z*Net in
the newsletters of  ABACUS (San
Francisco, CA), COMPUTAH (Salt Lake
City, UT), GREAT LAKES ATARI DIGEST
(Lansing and Flint, MI), JACG
NEWSLETTER  Pinebrook/Newark, NJ), and
MVACE (Dayton, OH).  Most groups we
have talked to are excited about the
idea, and we realistically expect to
add 100 groups this year to the Z*Net
family.

While we hate to have to keep saying
this, we are repeatedly asked by users,
dealers, writers, manufacturers, etc...

NO, ZMAG, ST*ZMAG, and Z*Net are not
affiliated in any way with ST-Report.
Although Ron Kovacs did create that
online magazine, it has long since
become independant and unrelated to
ZMAG.


             WHAT Z*NET IS   

Z*Net is a monthy newsletter designed
to go inside user group newsletters!
It features both Atari ST and 8-bit
material in a balanced way.  Z*Net
carries national advertising and
distributes the income of that
advertising to the user groups that use
it.

Groups remain in control of their
newsletter, and merely -wrap- their
material around Z*Net.  In this way,
groups have as much room for their own
news and articles as they wish, while
having Z*Net provide the national news
and features, much like TV Network news
supplementing local TV station
newscasts.  When possible, Z*Net will
even include additional pages of
articles that can be used or -banked-
for later by the clubs.

The material in Z*Net is largely
original, NOT merely recycled ZMAG or
other online articles!  Nationally
known writers from major magazines as
well as personalities from ATARI and
the major Telecommunication services
are regular contributors.  Commitments
have been made by:
Ron Luks (CompuServe),
Darek Mihocka (ST-Transformer),
John Nagy (Computer Shopper),
Darlah Pine (GEnie),
Matthew Ratcliff (Analog/Antic),
Alan Reeve (Diamond),
David Small (Magic-Sac/Spectre),
and many more.  Sig Hartmann of
Corporate ATARI has promised to provide
direct input and involvement on a
regular basis.  And we also solicit our
participating groups for contributions.


            HOW Z*NET WORKS   

Z*Net comes camera ready, for use as-is
or reduced as desired by the publishing
group.  Both -full- (8.5- by 11-) and
-2/3- format page dimensions (8.5- by
14- sideways, folded) are easily
supported.  The local editor(s) collect
locally written feature material, club
specific material, and local ads (if
any) and add the Z*Net section to make
their newsletter.  The specifics of the
size, content, and pricing to the clubs
are entirely up to the clubs and
editors.  Local duplication and
distribution continue the same as
before Z*Net was included.

The benefits of the supplement are
numerous.  In addition to having 12
pages of ready-to-print news (that you
probably would have wanted to include
in your newsletter anyway), Z*Net
PAYS YOU to include it.  It is possible
for a group to include what could be an
ADDITIONAL 12 pages of news with NO
increased production costs!


       HOW Z*NET PAYS YOUR GROUP   

Z*Net includes about four pages of
national advertising, secured by Z*Net.
Each month, the local publishers
provide proof of circulation (mailing
receipts, printer bill, or affidavit),
and Z*Net PAYS the publishers 20 cents
for each copy after a threshold of the
initial 100 copies.  Thus, a club that
regularly distributes 200 copies is
paid $20 each month, and one that put
out 600 copies receives $100.  This
arrangement pays Z*Net ad revenues
directly to the clubs in proportion to
their value in ad sales, with the
balance paying for the expenses of
production.  As overall circulation and
revenues go higher, the rebate rates
and threshold will be adjusted.
Participating groups each pay a $25
yearly fee to Z*Net to partially cover
actual mailing costs.

Additional benefits of participation in
the Z*Net project will occasionally be
special discounts or even free offers
from software and hardware
manufacturers for local publishers.  We
also maintain a special Z*Net area on
GEnie telecommunication services,
and sponsor monthly conferences for
participating clubs.


            WHO IS INCLUDED   

The Z*Net supplement is being offered
to any REGISTERED ATARI USER
GROUP, although it may be limited to
only a single publisher in any given
area.  It is Z*Net's belief that the
highest quality publication and the
most communication value will arise if
nearby clubs join together to produce a
combined -Node- magazine effort.
Combining efforts will also provide the
highest return on the economies of
scale for BULK MAIL, PRINTER COSTS, and
REBATES.

Obviously, if 5 groups that each
produce 120 newsletters were each to
independently offer Z*Net, they would
pay 5 yearly registration fees, and
each would receive the monthly rebate
for only 20 issues.  By joining forces,
4 registration fees would be saved, and
the publisher would get rebates for 500
issues.  Additionally, the -node- would
qualify for a bulk mail permit, saving
35 to 55 cents on each magazine mailed,
and the printing costs would be much
lower on a single run of 600 than on 5
runs of 120.  Advertising for local
dealers and vendors is also much easier
to get if a larger reader base is
available.  The benefits of cross-
club communication cannot be as easily
measured, but they have been readily
apparent in similar operations across
the country.


               CONTRACTS   

Z*Net requires that a simple contract
be made between the Clubs, their local
publisher (editor), and Z*Net.  The
contract principally requires the
publisher to keep financial records
open to all clubs participating in the
local magazine.  Z*Net is not available
to private commercial magazines, as
these cause legal problems and may
limit the use of otherwise free reprint
material.

Naturally, the entire Z*Net system has
a vested interest in the appearance and
general presentation of each Node
Magazine.  Compatible CLIP ART with
icons and suggested visual formatting
are offered by Z*Net as they become
available, but their use is optional.
However, the -Z*NET- cover logo must
appear somewhere on the front cover of
all node magazines.  Any Z*Net pages
must be printed TOGETHER (continuously)
within the local magazine.
Additionally, ALL advertising that is
within the ZMAG supplement MUST be
included in EACH final magazine
release, else we can't charge the
advertiser and pay the groups!

               IN SHORT...   

To summarize the transactions, each
month, the nodes send Z*Net:
    1.  The last month's issue (two
        would be nice!)
    2.  Proofs of
        circulation/production numbers
    3.  Any contributions for the
        national Z*Net (on disk
        please!)

We send back:
    1.  A check for the rebate amount
    2.  The new master copies of the
        new Z*Net (with extra pages
        to optionally use--when
        available)
    3.  Any disks sent to us in the
        previous month
    4.  (Sometimes) Software for review
        or bonus offers
    5.  Our INTERNAL newsletter with
        items of specific interest
        to our node management groups
    6.  Any new production aids and
        clip art

Z*Net also makes the commitment to
communicate with EVERY node publisher
EVERY month.


               WHAT NOW?   

Right now there are likely to be many
questions in your mind about this
project, not the least of which is
-WHEN CAN I START?-  If Z*NET sounds
good to you, CALL US NOW!  Ron Kovacs
is looking for CONTRIBUTERS,
ADVERTISERS, and participants of all
kinds.  We expect Z*NET to go to
hundreds of groups within the first
year of production...we hope YOURS will
be one of them!  Contact Ron at
201-968-2024 for more information and a
list of current commitments.  Or write:

Z*Net
Box 74
Middlesex, New Jersey,
08846.

Z*NET is a user support effort, mounted
by people who have established their
support and credentials in the ATARI
community.  It could be the best thing
to ever happen to your club newsletter!


                    

       
       |TURBO BASIC COMMAND LIST|
       
        
        |by Dave & Laura Yearke|
        
 
(This documentation is provided by the
Western New York Atari Users Group and
may be reprinted freely provided this
credit is included.)
 
 
In case you've just landed from Mars,
or just plain haven't heard yet,
-Turbo BASIC- is the exciting new
Public Domain BASIC Interpreter that we
received from the Atari Users Group in
Holland.  It works on the XL or XE
series of Atari computers.  It's almost
too good to be true and should be a
definate must for all XE or XL Atari
owners.
 
Turbo BASIC, in addition to offering 42
more commands and 22 more functions
than Atari BASIC, gives the user 1603
more bytes of program space by -hiding-
part of itself under the XL/XE's
operating system.  It also runs 3 times
faster than Atari BASIC, includes most
DOS commands, has advanced graphics and
programming functions, and is
insensitive to lowercase or inverse
characters for most commands.
 
 
       
       | Turbo BASIC Commands: |
       
 
*** Disk I/O ***
 
BLOAD  BLOAD -D:name-
Binary loads file 'name'. (DOS option L
with /N).
 
BRUN   BRUN  -D:name-
Binary load and run file 'name' (DOS
option L).
 
DELETE   DELETE -D:name-
Deletes the file 'name' (DOS option D).
 
DIR     DIR   Disk directory (DOS
option A). 
DIR -Dn:*.*-   Directory drive 'n',
note wildcard may be used.
 
LOCK    LOCK -D:name-
Locks the file 'name' (DOS option F).
 
RENAME   RENAME -D:old,new-
Renames the file 'name' (DOS option E).
 
UNLOCK   UNLOCK -D:name-
Unlocks the file 'name' (DOS option G).
 
 
*** Graphics ***
 
CIRCLE   CIRCLE x,y,r
Plots a circle with center at x,y and
radius of r.
 
CIRCLE x,y,r,r2
R2 is an optional -vertical radius- for
true circles or ellipses.
 
CLS       CLS      Clears the screen.
CLS #6   Clear screen opened in channel
6.
 
FCOLOR    FCOLOR n
This determines fill color.
 
FILLTO    FILLTO x,y
A fill command analagous to the BASIC
commands -POSITION x,y:
XIO 18,#6,0,0,-S:-
 
PAINT     PAINT x,y
Another type of fill command, this one
is a recursive routine that will
fill any closed object as long as x,y
are inside it.
 
TEXT      TEXT x,y,a$  Bit-blocks text
in a$ at x,y.
 
 
*** Memory ***
 
DPOKE    DPOKE m,v
Pokes location m,m+1 with 2-byte
integer v (0 <= v <= 65535).
 
MOVE     MOVE m,m1,m2
Block transfer; moves m2 (number of
bytes) from starting position m to
new starting position m1.
 
-MOVE     -MOVE m,m1,m2
Same as MOVE but copies starting with
the last byte of the block.
 
BPUT      BPUT #n,adr,len
Block Put; same as FOR I=0 TO len-1:PUT
#n,PEEK (adr+I):NEXT I
 
BGET      BGET #n,adr,len
Block Get; same as FOR I=0 TO len-1:GET
#N,A: POKE adr+I):NEXT I
 
%PUT      %PUT #n,a
Until now, there was no convenient way
to put numeric values onto disk or
cassette files other than by using
PRINT, which converted them to strings
first, a slow and cumbersome process.
%PUT puts the number to the device
-as is- in 6-byte FP format.
 
%GET      %GET #n,A
Get a number stored with %PUT from the
device and store it in variable
'A'.  Again, this is much faster than
using -INPUT #n, A-.
 
 
*** Structured Programming ***
 
REPEAT    REPEAT
Start a REPEAT-UNTIL loop.
 
UNTIL     UNTIL <c>
Terminate when condition <c> met.
 
WHILE     WHILE <c>
Start a WHILE-WEND loop to end when
condition <c> met.
 
WEND      WEND
Terminate a WHILE-END loop.
 
ELSE      ELSE
Optional extension for IF.  The IF
condition must not be followed by a
-THEN-, but terminated by end-of-line
or colon.
 
ENDIF     ENDIF
Ends an IF-ELSE-ENDIF or IF-ELSE
condition.  Note that this allows an IF
condition to span more than one BASIC
line, provided the -IF- statement is
structured as shown in Note 4.
 
DO        DO
Starts an -infinite- DO loop.
 
LOOP      LOOP
Cycle back to the start of a DO loop.
 
EXIT      EXIT
Exit a DO-LOOP loop.
 
PROC      PROC name
Start definition of procedure.
 
ENDPROC   ENDPROC
End definition of procedure.
 
EXEC      EXEC name
Execute procedure 'name'.
 
 
*** General Programming ***
 
PAUSE     PAUSE n
Pause processing for n/50 seconds.
 
RENUM     RENUM n,i,j
Renumber the program starting at line
'n', first number is 'i', increment
is 'j'. This function will handle
GOTOs, TRAPs, and all other line
references except those which involve
variables or computed values.
 
DEL       DEL n,i
Delete lines n-i.
 
DUMP      DUMP
Display all variables and values.  For
numeric arrays, the numbers are the
DIMed values plus one.  For strings,
the first number is the current LENgth
of it and the second number is the
DIMed size of it.  DUMP also lists
procedure names and labels with their
line values.
 
          DUMP name
DUMP to device 'name', such as -P:- or
-D:DUMP.DAT-.
 
TRACE     TRACE
Trace program during execution.
 
          TRACE -
Turns trace mode off (Default).
 
DSOUND    DSOUND n,f,d,v
Form of SOUND which activates
channel-pairing for increased frequency
range.
 
          DSOUND
Turns off all sounds.
 
GO TO     GO TO n
Alternate form of GOTO.
 
*L        *L
Turn line-indent on (Default).
 
          *L -   
Turns line-indent off.
 
*F        *F (or *F +)
Special mode for FOR..NEXT loops which
corrects a bug in Atari BASIC.
Seems that in Atari BASIC, an -illegal-
reverse loop like
-FOR X=2 TO 1:PRINT X:NEXT X- will
execute once even though the condition
is met initially (X is already greater
than 1).  Turbo BASIC fixes this bug,
but leaves it available for Atari BASIC
programs which may take advantage of
it.
 
          *F -
Turns off the special FOR..NEXT mode to
make Turbo BASIC act like Atari BASIC.
 
*B        *B (or *B +)
Command which allows the break key to
be trapped via the -TRAP- command
within a program.
 
          *B -
Turns off the special BREAK key mode.
 
--        --
Special form of REM which puts 30
dashes in a program listing.
 
 
*** Line Labels ***
 
#         # name
Assigns the current line number to the
label 'name'.  This is a convenient way
to get around the problem of
renumbering when using variables as
line numbers.  Labels can be thought of
as a special form of variable, as they
occupy the variable name table along
with the -regular- variables.  We also
believe that the number of variables
allowed has been increased from 128 to
256 to allow for the addition of these
labels.
 
GO#       GO# name
Analagous to the GOTO command.
 
 
*** Modifications ***
 
CLOSE     CLOSE
Close channels 1-7.
 
DIM       DIM a(n)
Will automatically assign a value of
zero to all elements of the numeric
array being dimensioned, and null
characters all elements of a string
(The LEN is still variable, however,
and initially zero).
 
GET       GET name
Wait for a key press, assign the value
to 'name'.  Same as:
-OPEN #7,4,0,-K:-:GET #7,name:CLOSE #7-
 
INPUT     INPUT -text-;a,b...
Prints 'text' as a prompt before asking
for variable(s), same as Microsoft
BASIC.
 
LIST      LIST n,
List program from line 'n' to end.
 
ON        ON a EXEC n1,n2,...
Variation of ON...GOSUB for procedures.
N1, n2 and so on are names of
procedures to be run.
 
          ON a GO# n1,n2,...
Similar to ON...GOTO except that line
labels are used instead of line
numbers.
 
POP       POP
This command now pops the runtime stack
for all four types of loops.
 
PUT       PUT n
Same as -PRINT CHRn)-;
 
RESTORE   RESTORE #name
Restores the data line indicated by the
label 'name'.
 
RND       RND
Parentheses are no longer needed at the
end of this command, but it will still
work if they are there.
 
SOUND     SOUND
Turn off all sounds.
 
TRAP      TRAP #name
TRAPs to the line referenced by the
label 'name'.
 
 
       
       | Turbo BASIC Functions: |
       
 
*** Arithmetic/Logic ***
 
HEX$      HEXn)
Convert n to hex string.
 
DEC       DEC(a
Convert hex string A$ to decimal.
 
DIV       n DIV i
Integer quotient of n/i.
 
MOD       n MOD i
Integer remainder of n/i.
 
FRAC      FRAC(a)
Fractional part of a.
 
TRUNC     TRUNC(a)
Truncates fractional part of a.
 
RAND      RAND(n)
Generates random number 0-n.
 
$         $nnnn
Allows input of hexidecimal numbers,
but they are converted to decimal.
Ex:  -FOR I=$0600 to $067F- => -FOR
I=1536 to 1663-.
 
&         n & i
8-bit boolean AND.
 
!         n ! i
8-bit boolean OR.
 
EXOR      n EXOR i
8-bit Exclusive-OR.
 
 
*** Memory ***
 
DPEEK     DPEEK(m)
Double-PEEK of m,m+1.
 
TIME      TIME
Time of day(numeric).
 
TIME$     TIME$
Time of day string, HHMMSS.
Unfortunately, the time commands don't
work properly because they were written
for the European Ataris which operate
at 50 Hz instead of 60 Hz like American
ones.  The net result being that they
gain 12 minutes each hour.
 
INKEY$    INKEY$
Returns last character typed.
 
INSTR     INSTR(x$,a
Returns relative location of start of
string A$ within X$ (returns 0 if not
found).  The match must be exact;
strings with the same letters but
differences in case or type (normal or
inverse) will not be found.
 
          INSTR(x$,a$,i)
The 'i' specifies the starting point of
the search.
 
UINSTR    UINSTR(x$,a
Same as INSTR, does not distinguish
between case or inverse characters.
Ex: UINSTR(-HeLlO-,-hello-) returns 1.
 
          UINSTR(x$,a$,i)
Specifies optional starting point.
 
ERR       ERR
Value of last error number.
 
ERL       ERL
Line last error occurred at.
 
 
*** Constants ***
 
%0
%1
%2
%3
 
These four constants simply stand for
the numbers 0-3, respectively. The
difference with using these in a
program is that -X=1- requires 10
bytes, whereas -X= %1- only needs 4
(numbers require 7 bytes, 6 for the
number plus an identifier preceding it.
It is always a good practice to make
variables for numbers that are used
more than three times in a program).
 
 
               
               | NOTES |
               
 
1.  Variable, Procedure and Label names
may contain the underscore (_)
character.
 
2.  To print a double-quote (-) in a
text string, use two of them together,
instead of the Atari BASIC method of
using CHR(34).
    Ex: -TEST-;CHR34);-TEXT- becomes
-TEST--TEXT- in Turbo BASIC, both of
which produce the output => TEST-TEXT.
 
3.  Upon initial boot-up, Turbo BASIC
looks for a BASIC file named
AUTORUN.BAS.  If it finds this file, it
will automatically load and run.
 
4.  Turbo BASIC also prints out English
descriptions of all errors,
including several new ones for errors
involving the new commands:
 
Error - 22 ?NEST = Loops not properly
nested.
Error - 23 ?WHILE = WEND with no
corresponding WHILE.
Error - 24 ?REPEAT = UNTIL with no
corresponding REPEAT.
Error - 25 ?DO = LOOP with no
corresponding DO.
Error - 26 ?EXIT = EXIT is outside a
loop.
Error - 27 ?XPROC = Error executing
PROC.
Error - 28 ?EXEC = ENDPROC with no
corresponding EXEC.
Error - 29 ?PROC = Procedure does not
exist.
Error - 30 ?# = Label does not exist.
Also, Error 15 has been expanded to
include an UNTIL which relates to a
REPEAT which has been deleted.
 
5.  A multiline IF is constructed like
this:
 
10 IF X > 10
20    PRINT X-10
30    GO# TOO_BIG
40 ELSE
50    PRINT X
60    GO# X_IS_OK
70 ENDIF
 
Note also the use of line labels in the
GOTO statements.
 
Enjoy your new programing toy...
 
              Bill Beerbower
              Laura Yearke
              Dave Yearke
              WNY ATARI Users' Group

(Editor's note:  Disk-based SpartaDOS
is not compatible with Turbo BASIC.
Both want to use RAM under the OS.
The new SpartaDOS X, however, does
work with Turbo BASIC when used in
conjunction with an Atari XL/XE having
more than 64K of RAM.  The SpartaDOS X
User's Manual gives more details.)


                    

        
        |INDUS GT MODIFICATION|
        
  
  |by Rich Mier, SPACE, St. Paul, MN|
  
 CompuServe: 73537,3573   GEnie: RBMIER


My Indus Disk Drive had a lot of miles
on it and, alas, was coming up with
some strange errors.  After swapping
all the socketed chips on the main
board, I determined that it must have a
bad read/write head.

By now I had been using the drive with
the case removed, the deck resting on
the top of the front panel, and a
wooden pencil across the rear beneath
the deck.  The Tandon read/write head
Part No. is 211014-001 but after
checking around town, I could find no
replacement deck anywhere.  Everyone I
talked to said I'd have to send it back
to Future Systems, or at least go to
them for a new deck.

I can't afford to lose my disk drive.
I only have one, as I have a 320K XE
and a 256K MIO.  All I need is one
drive since I have 2-192K RAMdisks
available.

American Techna-Vision advertises a
direct replacement mechanism for a 1050
drive so I called them to see if it
would work in the Indus.  They didn't
know and couldn't even give me a Tandon
Part Number.  They did say that they
have gotten orders from small companies
that repair Indus drives.  Taking a
chance, I ordered one on the condition
that I could return it if it wouldn't
work.  $47.50 plus shipping and UPS 2nd
day Air totalled $56.00.  Cheaper than
what it was going to cost me if I had
to take it to a dealer or send it out
to be fixed.

Monday evening I ordered it and
Thursday afternoon it showed up.  I
checked the Part Number first.
Different!:  Part No. 216024-019.
Digging out the wires, I found a couple
markings that were the same.
Mechanically, it was the same, but
on closer examination there were
several differences:

  1) There was no timing hole sensors.
  2) The plug coming from the stepper
     motor had 6 wires versus 5 on the
     old deck (both have a 6 wire
     connector).  Also, the colors were
     completely different.
  3) The wires coming from the drive
     motor were the same color, but
     about 3 inches shorter.  (The
     drive motors were identical.)
  4) The micro switch against the rod
     used to twist and engage the
     floppy had 3 wires on it and the
     old one, 2.
  5) There was 1 less connector plug.

Cutting some plastic tie-wraps on both
decks, I traced out the wires.  Here's
what I found:

The missing connector is 'J12' (4 pins)
on the old deck.  It is the timing hole
sensor.  Well, Atari doesn't use the
timing hole.  Ignoring it, I went on.

The three wire connector marked '14' on
the new drive is the micro switch
marked '5' on the old one and isn't
used.

The two wire connector marked 'J12' on
the new drive is also 'J12' on the new
one.  It is the front LED and isn't
used on the Indus.

'J11' on both decks is the write
protect sensor.

'J10' on the new deck is the same as
'J09' on the old one.  The head
'track 00' sensor.

The wire from the r/w head is a 5 pin
connector, same as the old drive, and
is long enough to work.  There is a
difference in colors of the wires to
which pins, but the ground is right.  I
assumed the difference in wire colors
is because of a different manufacture
of the head itself and that the plug
was wired correctly to work.

The last one was the stepper motor
plug, 'J3' on the old one and '15' on
the new deck.  A six wire connector.
The stepper motors were made by two
different companies so maybe it would
work as is.  Also, on the Indus motor
control board, pin 6 was not used.  No
foil connected to it.

Here is what must be done to make this
1050 mechanism work in an Indus:

   1.  Remove the motor control board
       from the top of the old drive.
       Note that all the plugs are
       marked on their top side.
   2.  The two screws on the top right
       of the new drive must have the
       lock washers removed so the
       motor control board will fit.
   3.  Arrange and tape the wires
       coming from the r/w head the
       same as the old drive.
   4.  Now the only tricky part of
       this.  The wires coming from the
       motor are too short.  On the
       motor control board, remove the
       4 wire connector (marked 'J4' on
       the board) for the motor plug,
       'J1'.
       Use a small soldering iron and a
       solder 'sucker'.  Turn it around
       so the pins are pointing to the
       left and re-solder it in place.
   5.  Install the motor control board
       and cardboard insulators on the
       new deck, taking care to
       position the r/w connector and
       that the board and insulators
       clear the top floppy idler hub.
   6.  Connect the r/w, 5 pin connector
       with the '0' up, the same as it
       was on the original.
   7.  You will have to cut some
       plastic tie-wraps to free the
       drive motor wires.  Turn the
       connector UPSIDE-DOWN, so the
       'J1' marking is down and the
       4 pin retaining slots are up and
       plug it into the connector pins
       that you turned around.  Be sure
       they won't interfere with the
       head movement.
   8.  Run the stepper motor connector
       up through the frame as was done
       on the old deck and plug into
       the 6 pin connector, the marking
       '15' up.  On mine, the 2 red
       wires were towards the front of
       the drive, pin 5 and 6.
   9.  Locate and clean the two mount
       holes on the left side of the
       drive where the lable is.
  10.  On the left side of the old
       drive, mark on the frame above
       the 3 plugs, the 'J' number
       found on each of the 3-4 pin
       connectors as you remove them.
  11.  Loosen the two screws holding
       the front panel to the Indus
       frame.  On older drives, you
       might have to remove it as the
       panel connectors on the bottom
       board where too high for the
       deck to clear them.
  12.  Remove the old drive, 2 screws
       on each side of the frame, and
       lift it out.  Now is the time to
       fix that front door if you've
       had problems with it.
  13.  With a screwdriver, pry off the
       front lever on both drives and
       swap them.  The lever on the new
       one is too long to fit through
       the front panel and work.
  14.  Keeping the wires clear, install
       the new deck, adjust it's
       position, and snug the two
       screws holding the front panel
       to the frame. Plug the rear flat
       cable into the control board.
  15.  There should be four connectors
       at the left rear. The two wire
       (J12) and the three wire (14)
       won't be used.  Tuck these away
       at the rear so the are out of
       the way and won't short to
       anything.
  16.  Find the connector marked 'J10'
       and plug this into the
       front-most pins where 'J09' was
       on the old deck.
  17.  Find the connector marked 'J11'
       and plug this into the rear most
       pins where the old 'J11' was.

There, that's it.  The now unused pins,
'J12', won't be used and aren't needed.
They were for the timing hole sensor.
If you REALLY want to, you could maybe
pry out the LED and sensor from your
old drive and reinstall them, but WHY?
They aren't needed.

One thing I did learn from
trouble-shooting my problem.  The
floppy controller chip used is capable
of controlling a double-sided drive.
It's a Western Digital, 2797 type.
Anyone need a challenge?  How about a
kit for a 5 1/4 inch double-sided,
double density drive or how about a
3 1/2 inch drive?  80 tracks,
double-sided is 720K.


                    

     
     |BILL WILLLIAMS' NECROMANCER|
     
          
          |Richard Brudzynski|
          
   Courtesy of CompuServe Atari8 SIG


I've been seeing an old favorite of
mine--Bill Williams NECROMANCER--in
the stores as of late.  Atari had the
wise idea of bringing this classic
-back from the grave- for the XE Game
machine.

Necromancer author BILL WILLIAMS always
found new ways to use a joystick.
In an early APX game, Salmon Run, one
had to pilot a fish up stream by a
combination of jumping and swimming
movements that was quite unlike
anything ever seen before (or since).

In a later work for Synapse, BILL had
an Alley Cat which the user had to
keep madly jumping on a clothesline,
trying to hit a target some distance
away.  Unlike most -jumping- games
there was an element of randomness,
unpredictability, and gravity in the
joystick control.  The player could
never be quite sure of hitting the
target.

Necromancer was BILL's most notable
achievement in new forms of joystick
control--the action was -spongy-.  The
user would move the joystick and
it would take a fraction of a second
for the corresponding action to take
place on the screen.  The action always
lagged behind the joystick movement,
and you could return the stick to
neutral and watch the action complete
itself on screen.

With a BILL WILLIAMS' game you knew
you'd always have to learn to use the
joystick in a way that you hadn't used
it before.  Always interesting,
always challenging.

A second notable feature of a WILLIAMS
game was the emphasis on romance as
the object of the game.  In Salmon Run,
the player piloted his salmon upstream
and, if successful, was rewarded by a
big, wet, sloppy kiss from his lady
fair (complete with smoochy sound
effects).  His Alley Cat was prompted
in his adventures by his desire to
impress his girlfriend.  Both the
Salmon and the Cat got the girl at the
end of each level and were rewarded by
increasing levels of on screen bliss.
I imagine that the successful
completion of all the levels of a
WILLIAMS game would probably result in
a degree of pure ecstacy known only to
the Finnish Commission on Eroticism
and Public Health.

All of BILL's works projected a sense
of joy and good humor--they were true
-feel good- games.

NECROMANCER was a distinct departure
from Bill's usually light-hearted
style and the closest he's ever come to
a traditional blow-the-enemy-away game.
Our Necromancer protagonist is charged
with the responsibility of restoring
light to a world from which the light
has been stolen.

Actually there are three games which
are part of the larger game in
Necromancer.

In the first game, we have to arm our
Necromancer with the tools he'll need
to successfully complete the second
game.  Our Necromancer must grow an
entire forest to use in the second
game.  In the course of this process,
he and his forest are under attack by
trolls and venomous spiders which grow
ever stronger.

Here is a really brilliant twist--a
gamer who tries to counter the
opposition by becoming increasingly
stronger will lose badly.  The correct
strategy in this section of the game is
to maintain and gradually diminish the
Necromancer's strength so as to finally
expire at precisely the -right moment-
when the forest is at its most
powerful.  A gamer who tries to -stand
against the wind- will lose his entire
forest; a gamer who knows when to bend
and eventually break will pass on to
the second game well-armed.

In the second game, our Necromancer has
an opportunity to prevent his adversary
(an evil mage) from arming himself
(with more venemous spiders).  The goal
is to use the trees to prevent the
adversary from hatching spiders from
five levels of crypts.  Each spider
prevented from hatching denies a tool
to the adversary in the third game.

All five levels are basically the same
game but as the gamer progresses
through the levels, he has to learn
precisely when to change strategies in
order to preserve his forest and
diminish the evil mage's minions to the
max.

In the third game, our Necromancer
faces a duel to the death with the evil
mage.  In this game, WILLIAMS presents
the gamer with a difficult problem
to solve.  The Necromancer is under
constant strenth-diminishing attacks by
the mage's minions.  He can reduce the
attacks by attacking the minions.
He can regain strength by attacking the
mage.  He can progress to the next
level of the third game by attacking
the mage's hiding places.

The trick in the third game is to find
the right combination of
attack-the-minions, attack-the-mage,
and attack the hiding places so as to
pass onto the next level with the
maximum remaining strength.  This is a
problem I've been unable to solve
despite years of play.  Knowing
WILLIAMS' style, I keep playing because
a real graphic treat awaits the player
who successfully completes the third
game.

Necromancer is a true arcade game.
Quick reflexes and an agile mind count
for a lot.  Nevertheless, strategy is
also critical.

A BILL WILLIAMS game is always
distinctly different from anything
else.  Trying to describe it is a lot
like trying to give a narrative
description of a Beethoven symphony,
the Mona Lisa, or a first kiss.  ATARI
deserves to be commended for bringing
Necromancer back from the grave.

>From time to time I wonder whatever
became of BILL WILLIAMS.  A few years
ago I found a set of excellent 1020
plotter routines written by a -Bill
Williams-.  I like to think that BILL
is still hacking away out there
somewhere.


                    

        
        |OASIS 4.3 UPDATE NEWS|
        
           
           |by Glenda Stocks|
           


                  [1] 

I just posted Oasis 4.3F for beta
testers.  It now includes optional
grafix support menus for all movie
menus and all main menu file sending
options.  I would like to see beta
testers with these until March 30th.
If, at that time, there are no BUGS,
then I would like to post Oasis 4.3 to
all OASIS sysops around April 1st.  If
this happens, then I can go on and add
a couple more things for Oasis 4.4 for
beta testers to test for release much
later.  Those added options would
include message threading and separate
SIG capabilities.  I am excited about
the GRAFIX support in Oasis 4.3 and
would like to see all Oasis sysops
enjoy it.  Please spread the word
around that I intend to post OASIS 4.3
by April 1st if TESTING goes well.

                  [2] 

Oasis 4.3 supports COLORED TEXT for
Commodore, ANSI and ST users.  It also
supports all ATASCII graphics and
cursor controls.  The BBS automatically
COLORIZES all 220 lines of the text
prompts used to interface between the
BBS functions and the user.  The SysOp
does NOT have to enter ANY codes at all
for the color.  The sysop is
responsible for CUSTOMIZING his 220 BBS
prompts with a TEXT EDITOR (not sector
editor).

                  [3] 

Oasis 4.3 has many new commands for use
while reading messages.  Below is a
sample menu:

  [A] Read the CURRENT MESSAGE again
  [P] Post a NEW MESSAGE
  [B] Read next message BACKWARD
  [D] Download Filename In Subject
  [R] Reply to the current Message
  [S] Scan Subjects TOGGLE
  [K] Kill the current message
  [Y] Send Message to Printer
  [E] E-Mail A Private REPLY
  [Z] Zip to another message base
  [F] Read Next Message FORWARD
  [U] Unlock the current message
  [W] Copy Message To another base
  [V] View ARC of file in subject
  [G] Goto a CERTAIN MESSAGE number
  [X] Exit back to the main menu
  [J] Jump to a CERTAIN message number
  [*] Run the filename in subject
  [L] Lock the current message
  [N] Read NEXT message FORWARD
  [C] Continuous Scroll TOGGLE

Among the new commands is the ability
to run online games directly from a
message, and the user is returned to
the same message afterward.

                  [4] 

Other miscellaneous changes:

8 Timed events
New Waitscreen
New PassWord Application procedure
New Quick Logon
Faster Disconnects
Better modem connects.
More MAC65 equates and routines.
requires system subdirectories.

                  [5] 

What's in store for Oasis 4.4?  We will
add the separate S.I.G.S. and message
threading to Oasis 4.4, and then Oasis
4.X will be finished.  Oasis 5 is due
out in December 1989, with loads of
goodies.


                    

            
            |Z*NET NEWSWIRE|
            
           
           |by Harold Brewer|
           


==>ICD's SpartaDOS X cartridge-based
   DOS is up to version 4.20.  The only
   notable change from SDX version 4.19
   being that version 4.20 now supports
   AtariWriter Plus.  This change is
   reflected in one file--X.COM.
   But SDX 4.19 owners need not get an
   upgrade ROM just yet--the changed
   X.COM file is available free on
   the pay services and ICD's BBS under
   the name of XX.COM.  Darned spiffy
   of ICD, eh what?


==>Roy Goldman's DaisyDot NLQ printer
   utility series continues.  On GEnie,
   Roy describes some of the additions
   planned for DaisyDot III:

   -Ok, here's the latest DD3 update.
   I haven't had much time, but I've
   managed to complete almost every
   editing feature in the font editor,
   including:  vert. & horz flips, 4
   way scrolling, inverse images,
   mirrored drawing, adding or deleting
   columns or rows, flood fills in two
   patterns, automatic lines, rays,
   boxes, and circles, options for
   controlling the the max height for
   each font and the underline points
   (indicates how a font will be
   underlined), and constant X,Y
   coordinate updates.-

   -The last editing feature I need to
   add is touch pad support.  I've
   tried a last ditch effort to buy
   one, uploading my request as a file.
   If I can't buy one, I'll have to ask
   to borrow one.-


==>The March 1989 issue of the wholly
   Atari magazine Current Notes has
   8-bit software reviews in abundance.
   Games, utilities, and application
   programs are written about.


                    

 
 |   Syndicate Publishing Company    |
 | P.O. Box 74, Middlesex, NJ 08846  |
 |          (201) 968-8148           |
 |Copyright 1989  All Rights Reserved|
 

        CompuServe: 71777,2140
             GEnie: ZMAGAZINE
            Source: BDG793

     ZMagazine Headquarters BBSes:     
      Centurian BBS--(314)621-5046
                     (618)451-0165
          Chaos BBS--(517)371-1106
       Shadow Haven--(916)962-2566
 Stairway to Heaven--(216)784-0574
            The Pub--(716)826-5733
