______________________________________
ZMAGAZINE 79         November 13, 1987
______________________________________
Published/Edited by: Ron Kovacs
Asst Publishers: Ken Kirchner
                 Susan Perry
Coordinator: Susan Perry
Columnists: Mike Brown
            Calamity Jane
______________________________________
ZMAG BBS  24 Hours (201) 968-8148
(c)1987 Syndicate Services/Rovac
______________________________________
Xx INDEX 79
______________________________________
<*> SpartaDos ToolKit Review...M Brown
<*> Brain Surgery...........Mike Brown
<*> Zmag Special Offer..............CJ
<*> Shareware............Calamity Jane
<*> XEP80 Review #2
<*> The Talk Box.......Project
______________________________________
Xx_______SpartaDOS Tool Kit__________
         a Rhetoric/Review
______________________________________
by Mike Brown

Quite some time ago, I heard
whisperings about a super accessory
pack for Sparta DOS users planned by
ICD. The rumors had it that the
upcoming -toolkit- would address
SpartaDOS needs such as being able to
recover files that had been lost to
bad file allocation tables, better
handle MIO configurations, and a host
of other things that -serious-
SpartaDOS users have been without from
the start. Well, those bright boys at
ICD have finally gotten the SpartaDOS
tool kit to market; the SpartaDOS user
now has professional quality tools to
rival the best in the 8-bit world.

Just a note of explanation, since
SpartaDOS has a structure more akin to
MS-DOS than Atari DOS 2.x, most
utilities for recovery and
manipulation that were written for the
DOS 2.x type file structure would not
completely work or would not work at
all. Another consideration is that
SpartaDOS supports such exotica as
Quad Density (DS/DD) disks and hard
disks up to 16mb per logical device,
such utilities that have the Atari
180K/720 sector limits built in, were
to say the least, lacking.

To give you an idea of what Is
included, I'll describe each -module-
of the toolkit (after this, called the
SDTK) in for you.

The first tool is called RENDIR and
makes short work of a touchy task for
subdirectory users. It performs
renaming of subdirectories without
having to delete files, subdirectories
and then recreate the subdirectory
under the new name. Just give the
command the old directory name, and
the new directory name. Zap! you're
done!

VDEL will be a welcome improvement in
the ERASE command built into
SpartaDOS. The ERASE command goes out
and IMMEDIATELY erases everything that
you said to erase. This can be
dangerous if you are using a file name
such as *.*! VDEL shows the name of
each file that meets the requested
conditions, one at a time, and asks
you for a -Y- or -N- to delete or not.
At the end of the process, a message
appears reporting the number of files
deleted. Nice!

WHEREIS is a little utility that will
search (good for hard disk systems)
down through all subdirectories and
give a report of any matches found for
the name you enter. If you only know
part of the file name, wildcards will
also work; the full path and file name
will be displayed for all matches. The
number of matches found will be
displayed at the end.

MIOCFG is a utility that not only
allows Floppy disk only system users
to back up their MIO configuration
(before this utility, you could only
save the MIO config to hard disk #1),
but also allows multiple backups of
the config to be saved in any file
that you specify! Of course MIOCFG
also allows you to load back in a
config that was saved to disk, and
even allows an option to bypass
formatting of the internal RAM-DISKS.

SORTDIR allows you to quickly and
reliably sort directories and
subdirectories and write them back to
disk. This utility is the only one
I've seen that will allow you to sort
by more than one file -parameter-. The
sorts supported are by: Filename, File
Type (extension), File Size, Date/
Time. There is also a Reverse sort
option that will sort in high-low
order if you so desire. This sort is
quite fast compared to some PD sorters
out there, but does not allow you the
option to abort the sort before
updating the directory- a minor point.

DOSMENU is included for those types
who just can't bear dealing with a
-command line- DOS like SpartaDOS. It
will display an almost dead ringer of
the DOS 2.x menu. The instructions for
DOSMENU say: -If you can't figure out
how to use this menu, seek some help-.
It's really that simple! Some new
commands, such as -Z- Reboot System-
and -V- View file-, as well as a full
complement of directory commands, are
terribly nice for the first time or
casual user.

The hot dogs at ICD, not knowing when
to leave well enough alone, came up
with COMMAND to soup up the SpartaDOS
command processor with extra features.
First off, it allows reprograming of
ctrl-(number key) and ctrl-shift
(number key) to any 20-character
-macro- string that you desire. They
are programmed by just keying -PF
(number) <string>- where <string> is
what you want put to the screen when
the PF key is pressed. When COMMAND
loads in, it looks for a file called
-COMMAND.BAT- to load in your standard
definitions, but any batch file can be
used to automate the PF defintion
process.

Next, you can change the screen color
with COMMAND loaded. Just key BLACK,
GREEN, or BLUE to get that color
background.

COLD is a new command that gives a
coldstart without having to wait for
extended memory systems to -drain
down-, and the content of all internal
RAMDISKS is retained.

HELP or ? will give you a brief list
of all of the new extended command
processor functions and features.

PATH is very similar to the PROMPT
command in MS-DOS. You can turn the
path display on or off as you desire.
Path ON displays not only the Drive
that is active as a prompt, but also
the current -path- is displayed (if
any).

If you turn on IBM (shame, shame)
mode, COMMAND will emulate the use of
the cursor keys like MS-DOS does. And
adds these special keys: Right arrow-
Pulls in the next character from the
last line keyed from a buffer and
place it on the current line. Left
Arrow- Back up one space (just like
the BACK SPACE key). Ctrl Ins- Places
you in -insert mode-, keypresses will
be processed without affectin the last
line buffer's index. Ctrl Del- will
advance the last line buffer's index,
deleting characters from the buffer,
not the current line. Start- Repeats
the remaining characters in the last
line buffer. If you are in the first
position of the input line, pressing
START will repeat the entire last
line. And more -last line buffer-
magik!

CLS tells COMMAND to clear the screen,
again, like MS-DOS.

I have saved the best for last, DISKRX
is a complete SECTOR editor and
RECOVERY TOOL for SpartaDOS! There are
so many neat features that it would
take another whole article to detail
them. Here are just a few of them:

Edit sectors in either HEX or ATASCII,
both translations are always
displayed, but edit flips back and
forth between the two.

The display will tell you a bit about
the sector being worked on, if it is
part of the BOOT, BITMAP, MAIN DIR,
MAIN FAT (File allocation table, or
sector map), SUB DIR, SUB FAT, or
DATA.

Blank the current sector being worked
on Show the formatted directory,
optionally you may specify a
subdirectory. Such useful information
as Full File name and Size, Present
entry Status, The first Sector Map of
the file, and the sector(s) where the
entry is actually written.

File Mode shows you all the sectors
belonging to a particular file (path
optional) for viewing or edit. File
mode will trace the file sector map
for a particular file for you.

Override allows you to recover disks
where the first sector has been
damaged, and the basic status of the
disk is not readable or incorrect.

Full searching for ocurrances of
ATASCII and HEX strings is supported
with imbedded wildcards.

Toggle allocation on/off of a sector
in the current bitmap.

Write to the current sector or specify
another sector to write to.

Read Next Sector in file or next
sequential sector, Read Prev.
File/Seq. Quick Scan forward/backward.

Tag sectors, and write them to a file
that you pecify on this or another
disk And MORE!!!!!

Again, I have glossed over some of the
most interesting parts of DISKRX and
every time I sit down with it, I find
something new and amazing that it can
do. -M- gets you a 2-page menu of
commands, and information about the
commands.

Overall, this program is well worth
the $29.95 that ICD is asking, just
for the entertainment value. Not many
dealers have it yet, so call their BBS
(815-968-2229) and order it direct.
______________________________________
Xx Brain Surgery for the ST
______________________________________
by Mike Brown

This article attempts to let you in on
some of the trials and pitfalls
associated with -Do it yourself-
memory upgrades for the 520ST. This is
not a step-by-step -how to do it-
article, nor is it a strict product
review. Think of it as my opinion on
what is viewed by some as an
attractive alternative to a new
computer.

The memory upgrade kit that I am
referring to is made by Diverse Data
Products, I would give you the
address, but I understand that the
company has recently moved. The new
phone number is 201-780-2019, if you
feel like giving them a call. The
reason that I became involved with
this -surgery- (although I do not, as
yet, own an ST) is because the owner
became frustrated trying to install
the upgrade herself, and asked for
help. This was the second upgrade kit
that was put in this computer from the
same company. The first kit caused
erratic memory failures, and may have
damaged the original computer,
although we have never been able to
trace the true cause of the
unexplained failure.

Suffice it to say, that to the
individual that is not technically
inclined, these memory upgrades are
NOT recommended. There is definitely
some skill and creativity required to
make them fly. Also, as the
instructions note in BIG LETTERS, This
upgrade does void your Atari warranty
from the factory. Diverse does
warranty the product for 90 days due
to failures in workmanship. I hope you
don't have a failure, as the company
was not too responsive to our requests
for replacement/credit/etc.

What you get for your bux; For the
going price of $149.99 (add $20 for
the so-called -solderless- version)
you get the one-piece memory
-daughterboard-, a small coil of rosin
core solder, and a 4 page
(photocopied) instruction manual. It
is recommended that (to do a good job)
you have the following materials
available:

Medium Phillips Head Screwdriver
Medium Flat Head Screwdriver
Needle Nose Pliers
Low wattage fine point soldering Iron
Duct tape
cardboard scraps
wire cutters
sheet metal shears or hobby tool and
last but not least, a cheap IC puller
from Radio Shack (or wherever).

For the most part, the instructions
cover the disassembly of the computer
and the installation of the upgrade
board in reasonable detail. I wish
that some of the Photographs were a
bit clearer, and that the drawings of
the underside of the system (mother)
board were a bit more detailed. I
recommend that you READ and UNDERSTAND
all of the instructions before
beginning work!

The big problems with this upgrade are
as follows:

1> If you want to maintain the metal
   RF shield over the video shifter
   chip and related circuitry, you
   must cut away about a one square
   inch area in the upper left hand
   corner of the shield so that the
   wiring from the video shifter
   -piggyback- socket can make it back
   to the daughterboard. I would
   defintely urge you to cover any raw
   metal edges with duct tape before
   re-assembly.

2> I don't know why it is this way,
   but the legs on the previously
   mentioned -piggyback- socket are
   about twice the length that they
   can be. I about 1/8- off of them
   with my wire cutters, and got a
   much better all-around fit.

3> The IC clip that goes over U30
   definitely requires that you remove
   the two capacitors on either side
   (C41 and C39) in order to get
   reliable contact. The instructions
   mention this, but it should be
   stressed that it is best to
   de-solder the Capacitors instead of
   just clipping the wires. Also, even
   under the best of circumstances,
   this clip sits rather loose. I bent
   the connectors -in- a bit and
   secured the whole assembly with
   small strips of duct tape to add
   reliability.

4> The photographs and instructions
   seem to assume that you have an ST
   without the RF modulator
   attachment. Anyone who attempts
   this mod to a recent model ST (this
   one was fairly new) will have to
   get creative with the wiring
   routing from the video shifter to
   the memory board itself.

5> Because of continued problems with
   the prongs on the bottom of the
   memory board either putting
   pressure on the -glue- chip, or
   shorting, I ended up clipping flush
   all of the protruding socket and
   component ends on the bottom lower
   part of the daughter board. As an
   added precaution, I taped thin
   cardboard (any sturdy insulating
   material would work OK) to the
   whole bottom side of the memory
   board with the good 'ol duct tape.

6> Even with all of these precautions,
   I still could not crank the
   external case screws down all the
   way tight without getting
   unreliable operation. To get around
   this, I bent the outside RF shield
   away from the area where the memory
   board sits, and -bubbled- the
   shield about where the ribbon cable
   connects over U30. I also found
   that the RF modulator moves the
   memory board out enough that you
   probably will want to trim the
   center plastic case attachment
   -rib- about an inch or so (down to
   the round part itself) for better
   clearance. I am not sure if it is
   necessary, but I felt better after
   running the trusty duct tape strip
   from the back edge of the lower
   half of the ST case and the back
   edge of the memory board. It seemed
   to hold things in place a bit
   better and the memory board
   -floated- a lot less during
   re-assembly. For the same reason I
   put small strips of tape to secure
   the 3 wires that get soldered to
   the bottom of the system board on
   the MMU socket pins. By the way,
   the instructions fuzzily describe a
   modification to the wiring that can
   be made to REV E or higher system
   boards (The one I was working with
   was REV H). I tried it and couldn't
   get it to work; Save yourself some
   frustration, ignore the section
   that describes this option.

So how much more -usable- memory can
you expect after getting things
squared away? The instructions claim
about 740,000 free bytes in ST basic,
a memory check accessory I ran showed
over 820,000 bytes free (TOS in ROM)
and comparisons with VIP Professional,
showed a mere 53,000 bytes free before
upgrade, and a more usable 600,000+
bytes after upgrade.

As to if this is a good thing for the
average person to invest in, I would
have to say -no-. I think that it is a
bit too -messy- for the average person
to get running without possibly doing
some damage. If you are an adventurer,
you might want to consider it, but for
the difference in price, the 1040ST
looks like a better deal to me.
______________________________________
Xx ZMAG SPECIAL OFFER
______________________________________
**************************************
*        FoReM BBS Coupon Offer      *
*The Most Powerful BBS System for the*
*        Atari ST and IBM/PC         *
*  Exclusively for Zmag and ST-Report*
*                                    *
*       NEW 2.0!   *     $59.95      *
*                                    *
*Fifteen Dollars!Off With This Coupon*
*                                    *
*           Commnet Systems          *
*            50 Eaton Road           *
*         Farmington, MA 01701       *
*        (617)877-0257 (Voice)       *
*        (617)877-8756   (BBS)       *
*       Specify ST or PC Please      *
*                                    *
*This Offer May Be Withdrawn Any Time*
**************************************
______________________________________
Your Source for Sales and Service!
Flat rate repairs on all Atari 8 bit!
     Quick turn-around on ST repairs!
 We also do flat rate repair on 8 bit
 Commodore equipment, and also can fix
 your Amiga or Apple computers!

We also offer service contracts on all
computers, call for rates today!
Be sure to take advantage of our flat
rate repair on VCR's, Video Cameras,
and Camcorders---->$99(covers all
parts and labor except heads and
Nuvicon)
Midtown TV-----------> 27 Midway Plaza
Tallmadge, Ohio 44278  (216)633-0997
______________________________________
Xx <<<< Share Ware >>>>
______________________________________
by Calamity Jane

I _love the Share Ware idea...  I mean
the WHOLE thing. If you like a program
and can use it... then send the
programmer the money.  For the most
part, the Share Ware programs I have
seen are top-quality stuff...  I mean,
top quality. DCopy by Ralph Walden, is
the first I got involved with.  I use
it EVERY DAY!! Now with the FoReM BBS
program supporting the Doors <the on-line games etc>, we will see more
of this spring up.  The Mailer that
allows FoReM to F-Net, is Share Ware.
The Mailer was not a one week job, but
several months worth of_very hard
work.  In my opinion, Dave Chiquelin
deserves something.  The -=*Space
Empire=-* game has taken alot of time
and effort... Jon deserves something
also.  So does every one else who
desires/deserves it.

I F-Netted a -check- <done in the
message base> to Dave Chiquelin for
the Mailer program -- have you had
much luck cashing that yet? <grin>
And, today I sent my ten bucks to Jon
Radoff for the -=*SE*=- game, but I
went a step further.  I have a friend
that is, well busted up and busted...
<a long story, I shall skip>  He wants
the game desperately, but ten bucks is
ten bucks.  It would be so easy for me
to get the game for myself and zap off
a copy and F-Net the sucker to him,
and not care whether HE pays for it. I
chose not to do this... I paid for him
also.  After all, I would rather have
HIM owe ME !! Some of you are going to
think I am nuts... fine, go ahead, but
I think so much of this Share Ware
program that I will do all I can to
support it.

It's one thing for me to pay 40+ bucks
for a piece of software, that I
discover is a pile of garbage.  And of
course I don't REALLY know this, till
I boot it up and play!! But it is
quite another situation for me to play
with the software, get to know it, and
see that it fits my needs.  Then send
my money.

The Co-SysOp of The Prairie Chip,
Byron Cullen, is writing a game for
the FoReM Doors...  It will be Share
Ware.  Will I pay him?? HIM??
Probably not, I can get away with just
feeding him... <grin> He will take me
up on it, even though we are a few
hundred miles away...  I do not doubt
my Co...  The Chip will be home base
for this new game and I shall attempt
to see he gets what he deserves... I
know how much work has gone into his
spectacular game. I only have so much
control though...

Another method I thought was a _nice
way to pay for Share Ware, was to send
the programmer two bucks or two
disks...  You know this one isn't in
it for the money...  The disks are for
saving all that wonderful data on...If
the author of something you use, wants
ten dollars and all you have is five
-- by all means send it !!  He or she
will appreciate the fact you even
bothered.

Support the Share Ware idea...
  May it Live Long and Prosper...

<<Permission granted to reprint>>
                        -=-CJ-=-
______________________________________
Xx XEP80 REVIEW
______________________________________
Living With the XEP80 a Subjective
Review by Wally Wong, BRACE

Yes, folks, it's finally here, the
long awaited 80 column adaptor from
Atari, the XEP80.  Actually, it's more
than an 80-column display module, it's
also a parallel printer interface (Due
to deadlines, I did not have a chance
to investigate the printer aspects of
the XEP80 but will tell what the
claims are).  There are some delights
and some plights you should be aware
of as well as a plethora of potential
programming hacking that could keep
some Atari enthusiast awake many a
nights.

The Atari XEP80 Interface Module is an
80-column video display controller and
-standard- parallel printer interface
for all 8-bit computers with a minimum
of 16K RAM. The XEP80 looks just like
the Atari SX212 modem, same size,
dimension and color - minus the lights
on the front panel. The XEP80 comes
with just about everything you need;
video cable to connect the module to a
composite monitor (monochrome
recommended), power supply adaptor
(Egads! Another one, that makes six!),
the module, a 20 page owner's manual,
a warranty card (that no one I know
sends in), and a 5 1/4- distribution
disk, all for $79.99,list.

A nice long cable runs out the rear of
the module that connects to your
computer via joystick port one or two.
Most will probably elect to use port
two and keep the other available for a
joystick. No problem except one of the
demo programs (WINDOW.BAS) will only
work if the joystick is in port two
and the module plugged into one. The
power switch is located in the rear
and a tiny diagonal window emits a
subtle green light on the front panel
when the power is on. The video cable
is a simple cable with RCA male jacks
on both ends. One end connects to the
rear of the module and the other to
your composite monitor.

The -standard- parallel printer port
is a DB25 parallel female connector
found on the STs and IBM type systems;
not centronics, and not a Atari 850 or
P:R: Connection connector. This is one
of the reasons why I haven't tried the
printer aspect of the module; no cable
and not being able to use my 850
parallel cable. The reason for using
DB25 connection is for
-standardization- which means you can
obtain a printer cable from just about
any computer store, and not be
hand-cuffed to -Atari Only- vendors
who would be the only ones carrying
850/PRC parallel cables (but we will
make our purchase at our local Atari
vendor, right!!). If you wish to use
the parallel printer port soley as a
printer port, hold down the shift key
while booting the disk and continue to
hold until its done loading.  This
will allow output to the printer
although you'll be in 40 columns
through the computer video port or RF.
Here is what the owner's manual says
about selecting the printer port:

-When you start up your system with
the XEP80 Module, the module is
prepared to direct output to a printer
throught the parallel port(P1:).
Specifying P2: directs output to the
ATARI 850 Interface Module; P3:
outputs to the 1025 Priner; P4: to the
1020 Color Plotter; P5: to the 1027
Printer; P6: to the 1029 Printer; P7:
to the XMM801 Printer; and P8: to the
XDM121 Printer.-

There is a -PRINTER.BAS- program on
the distribution disk. I haven't
looked at it, it may have something to
do with configuration and the XEP80.
The XEP80 also sports an internal 2K
buffer for printing. Nice touch.
(Nicer if its easily expandable,
that's too much to ask of Atari.)
That's all I can say about the XEP80
as a printer interface.

Turn on the XEP80, monitor, disk
drive(s), insert the XEP80 disk (of
course you made a copy of the
original, right?) and turn on the
computer. The XEP80 handler comes as
an AUTORUN.SYS file so it will boot up
automatically. If your monitor is
adjusted to give you a full screen
with a normal 40 column screen (like
mine), the first thing you will notice
is the bottom half of the last three
characters of the -READY- prompt of
BASIC in the upper left hand corner of
the screen.  If you type -DOS- to get
to the DOS menu (DOS 2.5 comes on the
disk), the first line of the heading
is tucked somewhere beneath the top of
your monitor chassis. The next thing
you will notice is the bunch of tiny
characters (relative to 40 column
characters) on the screen! Folks, you
now have an 80 column display. The
characters are quite readable on the
BMC and Commodore 1702 composite color
monitors. The display looks !great! on
a monochrome composite monitor (once I
got mine to work properly).

The characters are defined within a
7x10 cell (7 wide x 10 high) compare
to 8x8 cell used normally. I think
this is the reason for the truncated
display at the top of the screen; the
characters are taller than normal and
pushing the top of the display. Now,
this is just a guess, I'm no video
display wiz. This can be corrected by
adjusting the vertical width.
Correcting for 80-colums will create a
smaller vertical screen when you
return to 40 columns. This is okay if
the vertical adjustment is located on
the front of the monitor or easily
accessible, if not, you'll have to
decide if you want to make this
adjustment and then find someone
qualified to do it.

The XEP80 can actually display up to
256 character columns but only 80 are
available at a time (Hmm, doesn't
AtariWriter Plus scroll in 256
columns??!!). The demo program
-WINDOW.BAS- and a joystick
illustrates this aspect nicely.
Remember, the module has to be plugged
into port one and the joystick in two
for the program to work. If you want
to disable the XEP80 but want to use
the printer port, hold down the shift
key when booting the system. This
disables the 80-column and enables the
normal video output; composite video
port or RF.  The XEP80 handler
disables the ANTIC chip from
displaying and display I/O is directed
to the XEP80.  There is a document
file on the distribution disk that
explains all this in detail.

The distribution disk comes with DOS
2.5, the XEP80 driver, assorted demo
programs written in BASIC, assembly
language source code, and a doc file
that goes into the hardware and
software specifics in detail.

The following are some thrills and
chills I've experienced during the
course of a week since I bought the
XEP80.  Remember, these are only
preliminary experiences and are not
conclusive, especially the items
listed in -CHILLS.-  I qualify that
because the XEP80 handler is
relocatable and compatibilty may just
be finding the right spot for the
handler.

THRILLS:
1)It is compatible with SpartaDos 3.2.
  The XEP80 handler (the AUTORUN.SYS
  file on the distribution disk) must
  be installed through the
  STARTUP.BAT. I renamed the
  AUTORUN.SYS file to XEP80.COM and
  when creating the STARTUP.BAT file,
  the XEP80 file should be the last
  item in the batch. I have not tried
  it with the Time/Date Display (TD)
  line since I rarely use it because
  of the conflicts with other
  programs. Note: If you happen to
  setup your ramdisk (RD.COM) after
  installing the handler, you'll get
  garbage on the screen. I found that
  by turning the XEP80 off and back
  on, the screen clears and behaves.

2)ATARI BASIC - you still have a
  maximum of three lines per line
  number but now three lines equals
  240 characters instead of 120. I
  would refrain from extending BASIC
  lines beyond 120 characters to
  maintain compatibility between the
  XEP80 and standard 40 column screen.
  SETCOLOR AND DRAWTO commands cannot
  be used.

3)MAC/65, yes!

4)The display is good on a color
  monitor and great on a monochrome.
  The doc file provides plenty of
  information to develop some great
  applications taking advantage of the
  XEP80.  I've been looking at some
  PD/Shareware text editors written in
  BASIC that could easily be modified
  to use the XEP80. Remember to give
  credit to the author is you plan on
  using existing programs as a
  foundation for your programming.
  I'll leave it to your good
  programming morals to contact
  authors before you start hacking
  someones program and distributing
  them.

5)The demo programs on the
  distribution disk are a great source
  for programming ideas and tips on
  how to use the many attributes of
  the XEP80.                           
CHILLS:

1)There are no programs available that
  uses the XEP80 except for the demo
  programs.

2)AtariWriter 80, if I may call it
  that, will be a couple of months
  before it is released. November,
  maybe?? Contrary to some rumours
  that the AW80 was cancelled or
  shelved, the AW80 is being worked
  on; confirmed with Neil Harris on
  GEnie.

3)No ACTION! XEP80 does not like the
  way ACTION! behaves with the screen.

4)No BASIC XE. Same reason as number
  (3). Probably the same with BASIX
  XL.

5)I also found that with the system
  on, it may try to reboot when
  turning the XEP80 off and on with
  DOS 2.5, sometimes. Turning the
  XEP80 off and on like this is
  probably not good for your system,
  so make sure you process the
  SpartaDos batch files correctly to
  avoid this.

6)Inconvenience between switching
  plugs connecting the monitor between
  the video cable coming out of my XE
  and the XEP80. You can't have both
  connected at the same. There are two
  solutions-
  a)run out and buy a monochrome
    composite monitor and connect the
    XEP80 into this monitor and keep
    the video connected to the color
    composite monitor (or vice versa
    if your present monitor is
    monochrome) or
  b)build a switch box that will
    handle all the different
    connections. Plans for the switch
    box I built is simple and I'll
    submit it to PSAN...next month.

Neutral Notes:

1)Be sure you try out the monitor with
  the XEP80 before you buy.

2)Some monitors have a 40 or 80 column
  switch either inside or outside.
  This switch might have to be set to
  obtain a decent display (as
  suggested by Darryl, Atari Tech.).

3)If your monochrome monitor looks
  fine in 40 columns but you get
  flashes of indecipherable dots, try
  adjusting the horizontal hold.
  Again, this adjustment might be
  internal so think before you jump.

4)The XEP80 supports bit mapped
  graphics, 320x200.

5)the XEP80 handler replaces the E:,
  S:, and P: vectors in the Handler
  Address Table.

Personal Touch:
I believe this is the single product
that will make or break the -only a
game machine- mentallity of the eight
bit Ataris. If the applications
software is done well and released in
reasonable time and the advent of the
new disk drive and maybe a drop in
price, the Atari XE will be the most
affordable, versatile and serious
computer system on the market. Imagine
the day when new computer buyers
choose the Atari because it's
AFFORDABLE and DOES THE JOB WELL!....
and it has great graphics and games.
We know this already, now it's time
for the public to find out.
______________________________________
Xx The Talk-Box
______________________________________
by Gene Strojny and Robert Emerick

Can we talk?  I mean... can we talk?
Better yet, can your Atari XL home
computer system talk?  What?  You mean
you don't have a speech synthesizer
for your computer?  Well, now there's
no excuse not to.  I'm going to show
you how to build one yourself for less
than $30.00.  Sounds too good to be
true, doesn't it?  Well, it is true,
using Radio Shack's SPO256-AL2 IC
speech processor chip.

The main problems with the speech
sythesizers currently on the market is
that they cost too much, or use an
excessive amount of RAM.  The
schematics for the -Do It Yourself-
kits are usually too technically
complex for all except an experienced
Electronics Technician.  Even the
schematics for the SPO256-AL2 are
obscure for someone who only knows the
very basics of electronics.  I have
tried to simplify things and have
eliminated all but the most essential
components.  I ended up with a
schematic that just about anyone
should understand.

The SPO256-AL2 Chip

The Radio Shack SPO256-AL2 chip is a
pre- programmed IC chip.  It has all
the basic speech sounds programmed
into it.  This means that no RAM is
tied up holding the speech synthesis
routines.  I won't elaborate too much
on how the words are formed from the
basic sounds, since the SPO256-AL2
comes with a small user's manual. This
manual contains a lesson on basic
speech production, a list of the basic
speech sounds programmed into the chip
and their decimal POKE equivalents, a
small dictionary of words and their
decimal equivalents, as well as the
technical data for interfacing.

The Circuit

There is nothing critical about the
circuit.  You may assemble it on a
perf board using wire wrapping, or if
you like, you may make your own
printed circuit board.  The parts list
is given in Table One.  The wiring
diagram is given in Figure One, and
the pin out configuration for the joy
stick ports is shown in Figure Two.

When building the circuit, install the
28-pin DIP socket first.  The use of
the socket is strongly recommended so
that you don't have to apply the
soldering iron directly to the chip
and risk burning it out.  Next,
install the resistors, capacitors and
cables.  The wires in the joystick are
color-coded, but as far as I know,
there is no correlation between the
color of the wire and the pin numbers.
Check each wire to be sure which pin
it corresponds to.

Table One:  Parts List

Qnty.
and ID   Description        Part #
======================================
C1-C4    1 4.47pF           272-121
C5       1 0.1uF 50v        272-1069
C6       1 1.0uF 16v        272-1434
R1       1 100K 1/4 watt    271-1347
R2       1  10K 1/4 watt    271-1335
IC1      1 SPO256-AL2       276-1784
Xtal     1 3.579 MHz        272-1310
         1 28 pin socket    276-1997
         2 Joystick Cables  276-1978
         1 Phone Jack       274-251
         1 Plastic Case     270-222
         1 Amplifier        277-1008

Attach the wires corresponding to the
joystick port's pins to the
corresponding pads on the circuit
board.  These are labelled in the
schematic diagram.  Install the
SPO256-AL2 chip last, after everything
else is in place.  Leave the chip in
its package until you're ready to
install it.  While this kind of chip
is very forgiving when it comes to
miswiring, it will give out quite fast
when faced with static electricity.
This means that you must make certain
that you are grounded and aren't
charged with static electricity
whenever you touch the chip.

There are two ways to hook up the
audio.  You may use a small battery
powered audio amplifier like the
#277-1008 that Radio Shack sells, or
you may take your RS-232 cable end
apart and solder a lead corresponding
to pin #11 of the CIO port, as shown
in Figure Three, to the center pin of
a miniature phono jack (Pin #11 is the
Cassette Audio pin.).  The sound will
be channeled through your monitor.  If
you do use this method, all other
computer generated sound will be cut
off until the connection is unplugged
from the Talk-Box.  If you plan to use
the speech synthesizer in conjunction
with programs that have sound effects,
use the first method.

Whichever method you choose, don't (I
repeat, DON'T) connect your computer
to an external, unregulated line
powered amplifier.  If you do, you
will most assuredly fry your computer
into Silicon Heaven.

Using the Talk-Box

All that has to be done to make the
chip pronounce a word is to POKE the
chip's decimal addresses (via the
joystick ports) with the numbers which
correspond with the group of sounds
which make up that word.  For example,
the word HELLO consists of four
sounds:  H/E/LL/O.  After you
determine the word's individual
sounds, look up the appropriate
decimal values in the data manual
supplied with the chip.  The word
HELLO would therefore be represented
by the numbers 27, 7, 45, and 53.

The joystick port must be configured
for output before you can POKE data to
it.  This is done by PEEKing location
54018, subtracting 4 from the value
found there, and POKEing the result
back into 54018.  Then you must POKE a
127 into 54016 and then returning
54018 to its original value.

Your program must check to see if the
SPO256-AL2 chip is busy before sending
any data to it through the ports. This
is done by checking bit 8 to see
whether it's high or low (viz. 1 or
0).  the chip sets this bit low when
it's not busy, and high when it is
busy.  When bit 8 goes low, you must
first POKE 54016 with (64 + the
decimal value of the sound you wish
produced).  Next, strobe bit 7 by
POKEing 54016 again with only the
decimal value of your sound.  This
lets the chip know there is data on
line, ready for it to accept.  The
chip will then accept the data and
simultaneously set bit 8 high again
until it is done making the sound.

Listing One is a small program to test
your Talk-Box.  Just type in the
listing and RUN it after you have
plugged the Talk-Box into the joystick
ports.  Make sure that if you are
using the battery powered amplifier,
it is turned on and the volume is up.
When the program is RUN, you should
hear it say, -Hello.  How are you?- 
If it doesn't, check to make sure you
plugged all the cables into the
correct ports -- the Talk-Box won't
work if they are reversed.  If it
still doesn't work, re-check your
wiring.

If at this time you're all confused,
don't worry about it.  You really
don't need to understand how the
process works to use your Talk-Box.
Just copy lines 100, 130 and 140 into
your own program.

Listing Two is a small word
development program.  It allows you to
quickly enter words so that you can
preview their sound.  This is
especially handy when you're not sure
which of several similar sounds will
produce the desired results.

When you RUN Listing Two, it will
prompt you to enter the decimal
equivalent of the first sound in your
word.  Type in the number and then
press RETURN.  Continue until all the
sounds of your word have been entered.
Then press RETURN again.  The program
will pronounce your word, and will ask
if you would like it repeated.  If
not, just press RETURN to continue.

There are many uses for a speech
synthesizer.  Use your imagination.
You might use it to give verbal error
messages, prompts, or any other
message that would normally be printed
to the screen.  I hope you enjoy the
project as much as I did.  If the
response is good, I'll see if I can
come up with some more easy projects. 
Did I hear someone mention a Do It
Yourself printer buffer?  Well, I just
happen to....
______________________________________
Zmagazine Issue #79  November 13, 1987
(c)1987 Syndicate Services
______________________________________
