_________________________________________________________________________
///////////////////   ZMagazine          June 19, 1988       Issue #111
///////////////////   ___________________________________________________
///////////////////   Atari 8 Bit News and Reviews
///////////////////   ___________________________________________________
///////////////////   American Publishing Enterprises, Inc
//////////////////    Post Office Box 74
         ////////     Middlesex, New Jersey 08846-0074
        ////////      ___________________________________________________
       ////////       Publisher/Editor:  Ron Kovacs
      ////////        Sales Manager   :  Gary Gorski
     ////////         ___________________________________________________
    ////////          Support BBS: (201) 968-8148  (Syndicate BBS)
   ////////           Support BBS: (216) 784-0574  (Stairway To Heaven)
  ////////            ___________________________________________________
 ////////             Available on :
//////////////////          CompuServe: Atari8: Data Library 11
//////////////////          GEnie     : Atari8: Library 14
//////////////////          Delphi    : Database
//////////////////    ___________________________________________________
//////////////////    ST Support BBS (904) 786-4176  (Bounty Atari ST)
/////////////////////////////////////////////////////////////////////////
_________________________________________________________________________
[Contents]

[*] Editors Desk                     [*] Newsroom Review
[*] Getting Started With Magic-Sac   [*] Canadian News Update
[*] Commentary                       [*] Computer Repeats
[*] Programming in Atari Basic #9    [*] Carina II BBS Help Part 1
[*] Closing Comments


=========================Editors Desk>                      by Ron Kovacs

This week Atari settled it's suit with Micron Tech, the details of the
settlement were not released.  Could this mean the end of the current
DRAM shortage?

In my calls to area bulletin boards, I have seen an apparent increase in
ST vs 8 Bit messages.  Many ST users are now into a lecture to the 8 bit
owners.  I will not comment on this right now.  However, if you see this
happening locally, please let me know your thoughts.  I would like to
publish these comments here.

AMy Report, our Amiga Online Magazine was released last week.  If you
havent seen it yet, check out the Amiga areas on the services. You can
also call (201) 968-8148 to download this first issue.  Please pass the
word to your AMiga friends!


=========================Newsroom Review>             by  Ioan Castravet

Because of pressure from Antic magazine and everybody who wrote to
Springboard Software, Inc., The Newsroom was finally released for the
Atari 8 bit community.

The Newsroom has been around for quite a few years now for the Apple,
Commodore and IBM computers. This review is based on the Atari 8 bit
version. I do not have any former experience with The Newsroom on any
other computer.

The manual is very well written, easy to understand and will get anybody
familiar with the capabilities of The Newsroom. The manual has four
parts: an introduction to basic newspaper publishing and terms;
presentation of the program features and instruction for each step in
creating your own newspaper or newsletter; a tutorial where you are
guided in the creation of a single page family newspaper; a listing of
the graphics (clip art) available on the disk included with the program.

The Newsroom will run on the 800XL, 65XE and 130XE computers only, with
one or two 1050 or compatible disk drives (a nice touch, letting the user
employ a second disk drive). It certainly cuts down on the frequency of
disk swaps.

Other clip art disks are available either from your dealer or from
Springboard directly.

Loading the program took a few tries because the internal BASIC has to be
enabled for some reason. The main menu is in the shape of a publishing
shop where each department (banner, photo lab, copy desk, layout, press
and even an exit) can be selected with the cursor keys/SELECT/joystick/
trigger combination. The work performed in each department has to be
saved on a data disk before leaving that department.

The banner department let's you create the banner that contains the
title, date and other information, together with graphics. This banner
will occupy the top of the page.

From here it's to the photo lab, where graphics are selected from the
clip art disk(s) and a snapshot of the entire graphic or just any part of
it is taken. However, the snapshot cannot be reduced or enlarged. Here,
as in the banner department, you have the possibility to add your own
artwork, or modify the graphics taken from the clip art disk, with the
features selected at the graphics tools menu. This includes single line,
continuous lines, circles, boxes, doodle mode and an eraser. A variety of
pen tips is available, as is a selection of fill patterns. The graphics
tools menu, as well as the other areas of the program are selected via an
icon bar at the left of your work area. Text can be entered using fonts
selected from the graphics tools menu.

Next is the copy desk. Here the photos are pasted down on the panels
(there are up to eight panels available on the 8 1/2 by 11 paper, 2 more
panels on the 8 1/2 by 14 paper). If the photo itself is not too large,
text can be entered in two sizes around the photo. The text will format
itself automatically so that it will not overwrite the photo. The photo
can later be moved to another area of the panel and the text that was
already entered will reformat: a very nice feature. A panel can contain
only a photo, photo plus text or text only] Entering text is done via
what Springboard calls a sophisticated word processor. The same five
fonts in two sizes are available. Especially using the large fonts, text
entry is very slow; you have to pause a little after each character.

The Layout Department is just a short stop. Here you get the panels
created at the Copy Desk and arrange them on the final page. This page
has to be saved also.

Last is the Press (printing) Department. This is also where you select
the printer that you use from a list displayed on the screen. This list
appears to cover just about any printer that could be hooked up to an
Atari computer. This information is saved on the program disk, and so it
does not have to be repeated everytime the printer is used, unless you
change your printer. Here you can print a banner, a photo, a panel or the
entire page.

It sounds too good to be true, right. Well, the programs seems to be bug
ridden (at the least the one I have). This includes serious program bugs
and the less harmless design bugs. Here is a run down of the bugs that I
located:

     1. A banner that has a background of horizontal lines evenly spaced
        at the thickness of the line, when printed the lines are not
        evenly spaced anymore. This seems to be due to the fact that the
        program sends data to the printer (mine is a Star SG10) for only
        seven pins for printing and only seven micro line feeds after
        each line. The lines seem to be of equal thickness after the
        printing is done, but while the printing is done every third line
        is only half as thick as it should be, because, due to the odd
        number of micro line feeds on every third pass the top pin will
        print above the line printed by the seventh pin during the
        previous pass. The same stands true for the spaces in between the
        lines. It should print using eight pins and advance eight micro
        lines after each printed line. The result is a poor quality
        banner, where sometimes text entered with the Large English font
        is almost unreadable. Also the graphics will be distorted to a
        certain degree.

     2. If a box, the size of the work area, is drawn, when printing, the
        right vertical side of the box is gone.

     3. A lot of times an extraneous horizontal line, full width of the
        paper, was printed at the bottom of the banner, where it should
        not have been.

     4. Even though the program is based on Atari DOS 2.5, data disks
        cannot be formatted in the 1050 density. They format in single
        density only. Also, if the disk to be formatted, was formatted
        previously in true double density, or just a plain blank disk,
        will throw Newsroom to never-never land, or close to it. This is
        due to the fact that before formatting, the program checks to see
        if the disk is the program or a clip art disk. DOS 2.5 cannot
        read true double density. The disk will format in single density
        but only after the read retries established by DOS are exhausted,
        and this seems to take forever. The program will not format data
        disks in the enhanced density.

     5. The program disk has the write protect notch uncovered, to allow
        writing of the printer information to the disk. However, after
        this information is written, there should be no reason why the
        notch should not be covered. But the program checks for it, and
        if the disk is write protected it prompts you to insert the
        program disk in the drive. This continues until the write
        protection is removed. It's true, the program and clip art disks
        are protected against erasure and formatting within the program
        itself, but at the DOS level they are just as vulnerable as any
        other disk.

     6. The program and data disks are supplied in the 1050 density. This
        way it only can be used by somebody who has the 1050 drive or any
        compatible, like Indus GT or Rana. The space actually occupied by
        the various files on the program disk amounts to less than the
        standard single density capacity. It seems that the extra sectors
        are used for some kind of copy protection method. The DUPLICATE
        DISK function in DOS 2.5 will not duplicate The Newsroom disk
        entirely, but it will stop at the equivalent of a single density
        disk.

     7. The busiest department is the Banner, the Photo Lab and the Copy
        desk. Here you might have to go back and forth between the work
        area and the graphics tools menu. This menu is loaded from disk
        everytime it is called, and a lot of time is wasted. It is like
        you would have to go into the next room for every single pen,
        brush, eraser and so forth.

     8. An EXIT option is provided on the main menu. This allows you to
        exit the program gracefully. EXIT brings you to the DOS 2.5 menu.
        In the process of calling DOS the MEM.SAV file is written.
        Another slow down without any apparent purpose. However, if
        trying to choose the B option in DOS, a message pops up on the
        screen saying that the cartridge is nowhere to be found
        (remember, BASIC had to be enabled at the beginning).

     9. The data disks can be maintained only from the DOS level. This
        includes any deleting, renaming and copying of files.

     10. When saving the various steps to the data disk, only up to six
        character filenames are allowed. Six characters is not enough to
        give a bunch of files meaningful names. This is because two
        letters are added to the filename by The Newsroom, to
        discriminate between the various file types. But this could be
        done, and it was traditionally done by using the filename
        extenders.

     11. The manual itself seems to conflict in regards with the
        permission to copy the disks. The front of the manual warns
        against copying, stating that disk damage might occur, while a
        section in the warranty statements provides that the disks can be
        copied solely for back-up purposes.

     12. There is no provision to allow use of a Ram Disk for temporary
        storage of data, while moving between departments.

     13. While your graphics masterpieces can be saved as banners and
        photos, there are no provisions for one to create and save
        original pieces of clip art, or convert the vast library of
        pictures available in many formats to clip art for The Newsroom.
        Even converting icons created for the Print Shop to Newsroom clip
        art would be useful.

     14. There are actually only three types of fonts in two sizes. Again
        the user has no provision of creating his (her) fonts and save
        them to the disk. A utility program to convert the hundreds of
        fonts available for the Atari to Newsroom format would be most
        welcome. Daisy Dot II, a share-ware program, handles this very
        nicely.

     15. Printing the first page, banner or what have you, after the
        printer is first powered up, the first two line are out of
        register and most of the time extraneous characters or graphics
        show up right at the beginning. This has to do with the way the
        printer is initialized for graphics dumps.

     16. The printer should not be left in graphics mode after the
        printing is done. This is mentioned in the manual and the reader
        is alerted that the printer should be reset, most easily done by
        turning power off and on.

A few of the bugs listed above seriously impair the use of The Newsroom,
the others make the process a slow, tedious and sometimes an awkward one.

In a few words, The Newsroom suffers a lot from these bugs and
oversights. Let's hope that Springboard will update this long awaited,
original and useful piece of software.



=========================Magic Sac>                        by Chuck Trier


What exactly is Magic Sac?  Magic Sac is a cartridge containing two Apple
Mac chips that plugs into the ST cartridge port.  It can be left there
permanently and will not interfere with the operation of the ST in any
way.  ST software can be run or Mac software can be run after the 1Magic
program is run.  It's really like having two computers in one, an ST and
a Mac.

How long has Magic Sac been on the market?  Magic Sac (Data Pacific 609
Speer Blvd. Denver,CO 80203  (303)733-8158) has been on the market two
years.   Data Pacific is one of the most responsive companies around for
ST users.  Write or call them for a complete brochure on their products.

I've heard that the Apple chips do not come with the Magic Sac, where do
you get them?  While it is true that the two Mac Rom chips do not come
with the Magic Sac, they can be obtained thru companies that advertise in
the Computer Shopper magazine.  They take about five minutes to install
(just try not to bend the pins).  If you are a little squeemish regarding
things electronic, ask a friend or Computer store person to help.

OK, so I buy the cartridge and have the chips put in, what else do I have
to do to run Macintosh programs?   Just as there is preparation in
running ST programs, there is preparation in running Mac programs.  Disks
need to be formatted for Mac programs using McFormat.prg or DCFormat.prg.
Mac programs need to be put on those Magic-formatted disks, and then the
programs can be used.

Why can't I just go out and buy the Mac programs at my local Apple dealer
and run them with the cartridge?  To stay low-cost, use the Magic Sac
cartridge and magic formatted disks.  To run Mac disks directly, the
Translator One device is required (also from Data Pacific).  The ST disk
drive is plugged into Translator One and it enables the ST to read and
write exact Mac disks.  Like the cartridge, it does not interfere with
the ST in any way (unless the Midi port is needed - Translator One has a
cable that uses this).  ST programs can be run and when a Mac disk is
needed, the Translator One is ready to go to work.

If I decide to use just the cartridge, how do I get Mac programs?  One
method is to use a cable between the Mac and the ST.  Another method is
to download Mac programs from bulletin boards with a modem.  ST users
familiar with Flash, 220-ST, Interlink, or Uniterm programs can use them
to download Mac programs to their ST-formatted disks.

How do I get the Mac programs from the ST disks to the Magic disks?
After a Mac program is downloaded, install a Ram-disk in memory with
designation drive D and put the Mac program in it.  There is a an
ingenious little program called TV299.prg (or Trnsv29a.prg) by Doug
Wheeler that will transfer programs from an ST-formatted disk to a Magic
Sac formatted disk.

Run this program next.  Under the drive menu, select drive D for the ST.
Under the file menu, select ST>Magic Sac.  Insert the magic-formatted
disk and transfer the Mac program.  A little practice with this program
and you will be quite pleased with the results.

I'm sorry, but all of this is starting to sound a little complicated. One
way to keep the ST side of things simple is to put on your boot disk (the
one you use when you turn on the ST):

        1) Ramdisk program
        2) modem communications program
        3) McFormat.prg or DCFormatter (this will format either ST or
           Magic disks)
        4) 1Magic.prg and Driver.prg (these are the programs that come
           with the cartridge to turn the ST into a Mac).

This way you have one disk with everything that is needed to format
disks, download programs, transfer programs between ST and Magic disks
and run either ST or start running Mac software.

Ok.  I get the idea that certain programs should be on the ST disk, what
has to be on the Magic disk?   After the 1Magic program is run, it asks
for the Magic disk to get the Mac-mode going.  In order to do this, we
need the recommended System3.2 and Finder4.1 on that disk.  Part of the
Mac system is in the 2 chips in the cartridge, but the rest is in these
two programs.  System contains the fonts and desk accessories and Finder
keeps track of what appears on the desktop.  Other programs should be on
that Magic disk, but let's first start with these two programs.

What should I see after I put in this magic disk?  You should get a Happy
Mac Icon.  After a short time a message saying, -Welcome to Macintosh,-
will appear. Then the Menu bar at the top of the screen with the Apple
logo, File, Edit, View, and Special in the top menu bar. You should also
get a disk icon in the top right of your screen.  The top right disk icon
represents where the current system and finder files are that are
currently being used.  (As an aside, if you want to use a system-finder
combo on another disk or in Ram-disk, just open the disk and hold down
the control and alternate keys while you double-click on that finder.) If
none of the above happens, reseat the cartridge and try again.

Wow!  The desktop reminds me of the ST.  Is it really that easy?  That is
what is useful in running Mac software, there are a lot of similarities.
A couple of details are new and should be noted, however.  One is that
all disks should be named.  To name a disk, just click on the bar under
the icon and type in a new name and hit Return.  Secondly, get in the
habit of hitting Control e  before you eject a disk.  You will see a
flashing -A- at the top of the screen and that means that it is safe to
eject that disk.  It is a nuisance once a person is used to the ST way of
ejecting disks at any time, but hitting, -Control e- before ejecting a
disk in the Mac-mode won't take long to learn.  It is very important
since information is updated to the disk at that time!  Thirdly, once the
pull-down menu is used, the item is highlighted and selected when you let
go of the mouse button!  One final note in this regard.  In the Mac, many
options are not made available, unless they are highlighted. If you find
that a program (an -application- in Mac language) won't work or parts of
it don't seem to work, try highlighting the application or feature and
see if that doesn't make other options available.

This is kind of fun!  But hey, when I go to download Mac files
(programs), a lot of them have .sit or .pit endings.  What do I do about
that? Just like .arc in the ST and MS-Dos world, the Mac also has
file-compression programs.  What is recommended is a program called
Stuffit 1.40.  This is also available as a desk accessory.  It will
unstuff and also unpit those compressed files.  It is handy to have on
the first magic disk.

How about Ram-disks for the -Mac?-   There is a very good one called
Ram-Plus 2.0.   Double-click on its icon to install it.  When you see the
bottom size bar, click on this to shift the size of the ram-disk up or
down.  It will then finish installing the ram-disk and save this as the
size that is wanted for the next time the Ram-disk is installed. It will
also load into ram-disk any programs that are in the same folder as
Ram-Plus.  Excellent feature! Many programs for the Mac also offer the
feature of selecting the drive (A, B, Ram-drive, etc.) to get a file for
use with an application.

With so many desk accessories and fonts available, how do you move them
into and out of the system file and other programs such as MacWrite or
Ready, Set, Go?   This brings us to the final file which really is a
should-be on the first magic disk and that is Font D/A mover.  This very
nice application moves fonts and desk accessories in and out of system
and other applications in a swift and efficient manner.

Anything else?  I'm ready to go exploring!  One thing that might throw
you is moving things into and out of folders on the -Mac.- In the ST, the
same program can exist inside and outside of a folder.  On the Mac using
its usual filing system (MFS) and not the newer version (HFS - which is
more like the ST-GEM method), the folders are an illusion.  Once a file
is moved, or copied, it is moved!  Using Mac programs on the ST with
Magic Sac opens up a new dimension for us St users.  There's really a lot
to explore!

=========================Canadian News Update>


Hi!, Here in Montreal, Quebec we have a pretty userbase of Atari St's. In
fact we are priviledge over you, because we get infos and products from
France, in french and english (from England).  There are at least four
or five majors magazine that covers the french market, wich is, as you
may now, VERY dynamic.

At least one is at least dedicated to the ST.  This -ST magazine- has on
its cover a line saying: -Standard Atari and compatibles-.  Hey!  What
do you mean -compatibles-?

It means compatibles, like an IBM compatible. Yes there is now at least
one St compatible computer, called -Athena ST-.  It features most of the
same components as the ST, plus three analog/digital programmable
converters, a noise generator and a fully programmable keyboard.

Those two computers share the same motherboard, but the 68000 has been
remove from it, to be placed on an auxilliary board.  It support rom TOS
and the OS9 operating system, this one succesfully tested in a 8 computer
network.  All the softwares known are supposed to work pretty fine on it.

The main advantage of this machine is that it allows you to produce
yourself expansion cards (up to three) to be installed inside the Athena
St.

This machine has been designed to fit the need of developpers and
teachers, wich seek particular needs.  The machine costs about 2500$ and
every expansion card is about 350$.

The magazine indicates that a full test will be done for the june issue.

Another great thing that we get from Europe is software, months sooner
that you guys get.  Desktop publisher, by Timeworks is available in
french. Superbase Professional too, etc..

Some tips now about what is going in France:

-the city of Lyon (1,100,000+ habitants) has all its circulations lights
 hooked on a Mega St4

-their has been a big fight last year between Atari, IBM and Macintosh.
 It was concerning the new equipement of the daily newspaper Liberation.
 Guess who won?  Atari!  And they provided a new word-processor, Le
 Redacteur (The writer), wich is TRULY the fastest on around, including
 several analysis tools absolutly not found in any machine!

-Not only the PC1 and PC2 clones are available now but the new AT
 compatibles should on the shelves now.  Since those are all produced in
 Germany, you understand why we (yes here also) do not get these.

-Also very popular are the Minitel emulators and servers.

-You can count on MAJOR softwares for physicians, dentist, school
 administration, accounting.

-When you look at an ad in a magazine, you see a pretty big difference
 with here.  Most of them are dedicated to the business world, showing a
 big gap between their approach and ours.

-you should see their 6 pages professional brochure!!!

Well that is about it for now!  I'll try to get you some more
(frustrating) news regularly.

Martin Fournier
CIS:   73637,3532
GENIE: M.FOURNIER 


=========================Commentary>


               What is to become of the Atari 8-bit?
               -------------------------------------

I have owned an Atari 800XL for about 2 1/2 years, and my dad has a
130XE.  Excellent computers!  I am still amazed at the untapped potential
of these machines.

However, we have a problem (as if I need to say this):  the market for
these computers is dying...unless we do something about it.  The big
software publishers have abandoned us;  Electronic Arts, Infocom, and
others.  And who can blame them?  They are in the -profits- game, and if
they don't forsee profits from us Atari 8-bitters, they go elsewhere.

But, some of us Atarians take this personally. The thing that gets me is
that, instead of us users writing to the companies about this (or produce
our own software...not as hard as it may seem), we just kind of sit back
and complain.  I know, because I have had that attitude myself.

There are exceptions;  because of an influx of letters to Springboard,
they were persuaded to translate Newsroom for the 8-bit. Why am I saying
all this?  Well, to be honest, I am in the profits game, too.  I work for
a company called -Homemade Software-, and we specialize in the -cream of
the crop- in public-domain software for the Atari (if you want a free
catalog, see the address at the end of this text file).  But, if we find
the 8-bit market failing, we will go elsewhere, probably to the ST...not
by choice, but by necessity.

Personally, I think I would stay with the 8-bit for my own use. What can
the average user do? For one thing, he can share his own software
creations with the Atari community in several ways:  he can simply
distribute it as freeware to local BBS's, and time-sharing networks.
Better yet (for him, anyway) would be to distribute it as shareware. This
way he can make some money for himself.

The best way of all is to produce and sell the software as brand new
stuff!  I have begun a topic in Category 3 (#32, I think) called, -How
to Write and Sell Atari Software-.  I am asking experienced users to
contribute to this. When I think there is sufficient information (or, all
I'm going to get!)  I will compile it, and produce a step-by-step text
file.  I'll then upload it here at GEnie.  Watch for it.  I predict the
Atari 8-bit will last much longer than anyone thinks, because:

-*- The Atari 8-bit is a truly powerful machine, with a lot of un-tapped
    potential.  This potential represents profits to certain companies.

-*- Many Atari enthusiasts are die-hards:  we seem to have an attitude of
    -I'll give up my Atari 8-bit when they pry my cold, dead fingers from
    around the joystick-.  This represents a fairly stable market.

However, these profits probably will go to the smaller companies that use
Atari machines themselves. Which is fine with me!

Mark Quigg 

P.S.  For a free catalog, write to:

               Homemade Software
               6011 Hyde Park Cir.
               Jacksonville, FL 32210
               Demo disk, $3.00.


=========================Computer Repeats>                        by Ron Kovacs

This past week I had the pleasure of speaking to the President of Computer
Repeats, Inc.. This is an outfit that will take your used 8 bit equipment as a
trade and allow you to put the money down on an ST system.  You can also take
your equipment and upgrade it to better 8 bit hardware.

Here is an example of some hardware:

*  130XE for $109.00 with the trade in of your 48K 800.
*  XF551 Drive for $99.00 with trade of 127K 1050 drive.
*  520STFM cpu for $199.00 with trade of 130XE, 1050, XM301, color monitor.
*  IBM XT compat for $349.00 with trade of 130XE, 1050, color monitor.


There are a number of other trades offered for the Commodore, Amiga, IBM clones
and Atari.  We hope to provide more information on this company in a future
issue of ZMagazine.  If you want more info call:

    (303) 939-8144 with questions and orders.
    (303) 939-8174 for modem software quotes.

or write:

                          Computer Repeats, Inc.
                          2017  13th Street
                          Suite A
                          Boulder, Colorado  80302


=========================Atari Basic>                    by Jackson Beebe

LESSON 9A                       Version 1.12

                            INPUT AND OUTPUT I/O

                    (C) COPYRIGHT 1988 by Jackson Beebe

This lesson is placed in the Public Domain. Individuals, user groups and
BBS's may reprint, copy or distribute it, as long as this notice remains
intact with the lesson.


CONTENTS:

     Storing and Moving Data
     IOCB's 
     Devices
     OPEN # Statement
     GET # Statement
     PUT # Statement
     INPUT # Statement
     Editing
     Versions

[Ed. Next week the conclusion of this part]

This is Lesson 9A of LEARNING TO PROGRAM IN ATARI BASIC, brought to you
by Jackson Beebe. Contact me at the address at the end of the lesson.


Greetings. Welcome back to old users, and 'Hello' to new users. This is
the ninth in a series of programming lessons, designed to help you get
the most from your 8 bit Atari computer, a very powerful, and flexible
machine. Previous Lessons are available on CompuServe's ATARI8 Forum, and
other BBS.

Feedback:
---------

THANKS to John McGowan of Columbia, Missouri for pointing out the correct
location of the 'runtime stack' as Locations 142,143, and not page one as
I mistakenly said in Lesson 6 (the POP statement.) Sorry, I had the wrong
stack.

And a HELLO and warm thank you to Dave Brehm of Mishawaka, Indiana who
writes: -I do some programming, but...I am finding better ways, different
ways, and other things I either didn't know about or had forgotten
about.-

It's reassuring to know someone IS OUT THERE ! Thanks.

Introduction:
-------------

Most new users don't know much about computers, but buy one to perform a
set task, like word processing or game playing. Atari computers have many
excellent games written for them, with outstanding graphics. Many users
initially regard their Atari as a slick toy, and well-built plaything,
and gradually become aware, that it is a Real Computer, and even can be
programmed (whatever that is?)  I want you to realize that you have (or
can buy for $17.50 post paid) a programming language BASIC, available to
you as part of this package, that can unleash the enormous power and
speed of the modern day computer, in whatever ways you can imagine, think
up, and write down.

BASIC is a very -learnable- language, that can help you get started in
literally one day. Many languages cannot make that claim.

Storing and Moving Data:
------------------------

Up to this point, we have been learning the nuts-and-bolts commands and
statements of BASIC that allow us to perform basic computing functions.
We can now write and store programs on disk, load them back in and use
them.

Programs may be thought of as large -streams of data- entered from the
keyboard, sent to or from a disk drive, to a printer, etc. Computers move
this data around a lot during use. For instance in printing out a BASIC
listing while programming, the computer actually goes through a process
of checking to see if a printer is present and ready, then sends a stream
of data, one byte at a time from  RAM, to the printer. The computer
starts and stops sending data from time to time, so it doesn't exceed the
printer's maximum speed, and quits sending when finished. Printers print
out this stream of data, and disk drives write it to disk, storing it as
a string of magnetic impulses.

BASIC includes a set of built-in commands that allow us to send or
receive data between devices, with very little effort.  Again, BASIC is a
HIGH level language, meaning it operates high up, away from the machine,
eliminating a great deal of administrative housework for us. This is very
evident here, where the use of a few commands, can transfer data
flawlessly between complex peripherals without the user even knowing how
the machine accomplishes the task. The true task of a programming
language.

IOCB's:
-------

IOCB stands for Input/Output Control Block. Atari has 8 of these,
numbered 0-7. IOCB's are sixteen bytes long, and are used for
communication and housekeeping between devices. For example they point to
the device that is open; specify what kind of I/O we are doing; status of
the last operation; address of the data buffer; filename; amount of data
yet to be transferred; disk sector number, etc.

The computer itself always uses IOCB #0 for the screen editor, so we
should get in the habit of starting with #1, when specifying an IOCB.
IOCB #7 is used by BASIC to communicate with the printer, disk drive and
cassette.

An example of their use will clear this up a little, after we get to the
OPEN # statement. Bear with me a moment.

Devices:
--------

We reference devices by using names already assigned to Atari
peripherals, and other data devices. They are:

   NAME   DEVICE
   =============
    C:   Cassette
    E:   Screen Editor (kybd + scrn)
    K:   Keyboard
    P:   Printer
    R:   RS-232 Handler (850)
    S:   Screen


For example, from the DOS menu, we can COPY a filename from D1:FILENAME
to P: to get a printed copy. We can COPY from D1:FILENAME to E: to see
the file listed to the screen. Use CONTROL+1 to start and stop the screen
scrolling.  Try this. Copy a few files to the screen and/or printer.
Copying to the screen is the most common way to tell what any file on
your disk is. Note what BASIC, text and binary files look like.


OPEN # Statement:
-----------------

Now we put it all together with a statement to open an IOCB to a specific
device. Devices must be opened before use with an OPEN # statement. One
additional piece of info is needed to use the OPEN # statement, and
that's the code for the type of I/O we're performing. I/O modes are coded
as follows:

 I/O
 Code   Mode        Operations
 =============================
  4    Input       Read Only
  6    Directory   Disk Drive DIR
  8    Output      Write Only
  9    Append      Add to End of File
 12    Update      Read and Write


These are used in an OPEN # statement as follows:

  OPEN #(IOCB),I/O Code,0,-Device-

For example:

10 OPEN #1,8,0,-P:-  opens printer for output.
15 OPEN #1,4,0,-K:-  opens keyboard for typed input.
13 OPEN #2,6,0,-D1:*.*- for a disk directory of D1:
10 OPEN #3,12,0.-D:FILE.TXT- opens FILE.TXT for reading and writing
   (update)
12 OPEN #1,9,0,-D:TEXT.DOC- opens the file TEXT.DOC for appending
   data to the end.

The first argument to OPEN # is the IOCB. We are free to choose any
number we like. One through six is a good idea to start.  Just use #1 to
begin, and if you find you need to open another, for instance to read and
write separately, use #2, etc.

The second argument is the I/O code, for the type operation being
performed. See chart above.

Note that the third argument to OPEN # is always a zero. That's just the
way it is. It has to be there to work.

The fourth argument is the device name, always enclosed in quotes, with a
colon. Don't forget the quotes.

Don't despair, or panic, these aren't really hard. You keep a chart of
examples of devices, and I/O codes in front of you on a -cheat sheet-, as
you may not use them often enough for memorization.  So much of
programming involves having a good, ready, reference library, rather than
memorization as you may think at first. See RWP.BAS at the end of this
lesson for reference.

At first, it's hard to tell whether you should code Input, or Output mode
for a given transfer, but keep in mind that it's input or output with
respect to RAM, or from the point of view of 'the program'.

Okay, now that we can open an IOCB to a device, what next?

GET # Statement:
----------------

We use the GET # statement to get a byte (character) of data from an open
device.

This statement takes the form of:

    10 OPEN #1,4,0,-K:-
    20 GET #1,A

The number following the # sign (no space) is a number of a valid IOCB
already opened with an OPEN # statement previously.  The variable A, is
the name of a numeric variable, to hold the ATASCII code of the character
you are -getting- from the disk drive, keyboard, etc.

Okay, time for a little code here:

  10 REM ** OPEN101.BAS  **
  20 REM ** GET Demo **
  30 REM
  40 REM ** Open an IOCB **
  50 OPEN #1,4,0,-K:-
  60 REM
  70 REM ** Prompt and GET a byte **
  80 ? -Hit a key -;
  90 GET #1,A
 100 REM
 110 REM ** Print it **
 120 PRINT CHR$(A):?
 130 REM
 140 REM ** Loop back **
 150 GOTO 80


Try this. It's only a program fragment, but demonstrates the point. It
prompts us for input, and prints our keypress on the screen as soon as we
hit the key. The program GETs a character at line 90 as soon as we press
the key, unlike the INPUT statement that requires a <RETURN> first. Type
in this program, and save it under OPEN101.BAS which tells us it's
Version 1.01 and it's a BASIC program.

Now, let's add a test to Quit the program if desired. We'll update the
REM at line 10 with this program's new version number, 1.02. Do this by
LOADing OPEN101.BAS into RAM, and typing in the new lines with the
correct line numbers. Remember new lines replace old lines with the same
number.

  10 REM ** OPEN102.BAS **
  85 ? :? -(Q) to Quit -;
  95 IF A=81 OR A=113 THEN END


What we have now is a program that prompts us for input, and prints out
the keypress on the screen. If we type an upper or lower case Q, the
program ends. This is the usual way of writing menus, eliminating the
need to push the <RETURN> key. We usually arrange a pile of IF-THEN
statements, with one that tests for Q to quit.

Editing:
--------

Actually the way I work is I LOAD in the 101 version, run the cursor over
the last 1 in 101, and type a 2. When you change a line using the full
screen editor (which you are doing), be sure to hit <RETURN> WHILE the
cursor is in the line you are changing. If you 'cursor' out, without
hitting <RETURN>, your new changes will be lost, and the line will be
unchanged.

I've gotten in the habit of working as 'full screen' as possible. When I
want to add a line such as line 85, I LIST the program, run my cursor to
line 90, and push SHIFT+INSERT, inserting a blank line in the correct
location for 85. I then type line 85 in this space. It always gives me a
full screen view of the program, and somehow aids in the way I visualize
the program logic.

Versions:
---------

SAVE this program under the name OPEN102.BAS. This allows us to still
save, examine and use the earlier program, and also save this, the latest
version. It's always easy to see which version is the latest on disk, as
it has the highest number. It's easy to see which program listing goes
with which program, as we have the program's correct version number in
the initial REM statement in the program. We can add the date in REM's
also, but it's pretty inconvenient to have to update more than one item
when working on a program. I work on long programs in  perhaps 50-100+
sessions, sometimes for only 10 minutes at a time, and eventually end up
with copies on multiple disks after a long while. Getting your latest
version mixed up, can cost a lot of time, and losing your only copy of
the entire program is really a disaster.

I always number my program versions one number higher, each time I modify
or work on them. One advantage to saving versions of programs, is
recovery after accidentally pressing the wrong key when finishing up a
long session at 2 AM, only to realize you've wiped out your only copy of
the program. What a frustration. It's not a question of WHETHER or not
this happens to you, but WHEN this happens to you. If you save
frequently, the worst you can do is go back to the previous version, and
add the latest changes. It's also possible to SAVE your program routinely
as:  OPEN106.BAS, and save again as:  OPEN106.BAK  to create a clone of
your current program every time you save.  Believe me, you WILL lose your
completed programs, and having a clone on disk, makes recovery quicker
than going after the disk with an UNERASE program. (You DO have one don't
you?)

Here's my all-time disaster:  I worked for weeks on a long program, that
I had only one copy of. I MEANT to make a back up, but...what could
happen? At the end of a late session, when I thought I was finished, I
saved the program with: SAVE -D:FILENAME and shut off the computer. About
10 minutes later, I decided to make a printout to look over later. I
turned on the computer, put in the disk, and in BASIC typed: LIST
-D:FILENAME-.  Disaster. It took the -nothing- that was in RAM, and
dutifully LISTed the empty file to disk, under the same name. My old file
was GONE. I of course meant to say: LOAD -D:FILENAME, and then: LIST -P:-
but that's not what I did! Perhaps I could have hunted my file down with
a sector editor and salvaged it, but as it was an old fragmented disk, I
just started over, a wiser man!

I even use two disks now, a working disk, and a backup disk, and store
copies of versions on EACH disk at the end of a session. I know it sounds
paranoid and stupid, but...extra disks are only 50 cents, and I certainly
have had to go to my backups more than once, or even twice.


=========================Carina BBS Help  Part 1>

 An Introduction to Carina II 
==============================

Carina II comes with a user manual (in text-file format) containing all
of the help files shown in this database.  If the SysOp has it in the
download area, I strongly suggest you download it and print it out to
your printer (if you have one).  To download the file, make sure you are
in ASCII mode with no VT-52 graphics and no page breaks.  If you have an
80-column printer, make sure you are in 80 columns.  If you have a
40-column printer, switch to 40 columns.  You can change all of these
parameters by typing -Settings- at the command prompt.  When you are
ready, and you have located the file, download the file using ASCII
protocol (X-on/X-off) (i.e. Capture it), save it to disk, and print it to
your printer.  After you have finished, change your settings back to
normal.  If you have no idea what I just said, then just ignore it.  If
you have some idea of what I just said, then download the file anyway you
want and read it off line at your leisure.

Welcome to the Carina II BBS software!  I hope you enjoy your stay.  The
first thing that needs to be said is  DON'T BE INTIMIDATED!  This is a
very large system that does a lot of things.  Don't think for a second
that because you can do so much implies that it is going to be hard to
use, it's not.  The system was designed to be very consistent.  For
instance, once you've gotten the hang of the message area (reading them,
moving from one message to another, etc...) you'll instantly know how to
use the file area (and visa-versa).  Everything should be (fairly)
self-explanatory.  There are mini menus at most prompts.  These mini
menus are very brief explanations of what commands can be used.  If you
need a detailed explanation on how to use them, you should come back to
this help database for the full explanation.  You should get the hang of
it very quickly.

 General Usage of Carina II 
============================

First, Control-S at any time will pause any printing, and Control-C will
abort any printing.  When reading messages or browsing files,  RETURN 
will automatically send you to the next message/file, and  SPACE  will
take you immediately to the  Command [?]=Menu:  prompt.  Now that that's
out of the way...

 Carina II's Structure 
=======================

Carina II is divided up into sections (Special Interest Groups (or SIGs
for short)).  Each section has its own message area, file area, game
area, database, vote-poll, user's listing,  bulletins, and (if you're
lucky) its own SysOp.  In other words, each section is somewhat of a
bulletin board in itself.  So remember, Section (or SIG) means Special
Interest Group.

 Using the Command Parser 
==========================

There are 3 different ways to input commands: By typing out what you want
to do in English (using the appropriate words), by using macros, or by
typing a character associated with the command you wish to execute.

 Single-letter Input 
=====================

The simplest way of entering a command is with the single character
input.  Each command has a character associated with it.  For instance,
the character associated with the Read command is -R-.  Typing this
letter (followed by the  RETURN  key) will execute this function.

 Macros 
========

The most commonly used form of input is by far the Macros.  As with the
single-letter commands, each command has a macro key associated with it. 
The macro key for Read is Control-R (that is, while holding down the
 Control  key, press -R-).  When this key is pressed, -Read - is
displayed next to the command line.  One of the advantages of using
macros is that pressing a macro key will display what that key will do
before the command is executed.  If you decide that this command isn't
really what you wanted to do, you can backspace over it (or hit Control-X
to delete the entire input line).  It is also easier to stack commands
when you use macros (command stacking will be discussed in later
paragraphs).

All macros for commands are displayed in the main menu.  There are,
however, some supplementary macros not listed.  They are Control-A for
-All - and Control-N for -New -.  -All- means All sections.  -New- means
(effectively) that which you haven't seen before.  Both of these
supplementary macros are mostly used with the message bases and file
areas (e.g. Read New or Browse New (or even Directory New)).  If you were
to type -Read ALL New-, it would show you new messages in ALL sections,
etc....

 English 
=========

Using English input is much the same as using macros (except you do a
little more typing).  English input is especially useful if you are
totally lost.  For instance, typing:

I need some serious help.

would get you some serious help (it would put you right into the help
database).  It's also good for laughs.  For instance, typing:

I'd like to read all of the new messages, then download a file or two.
would indeed show you all of the new messages, then ask you which file
you would like to download.  Take note that the period at the  end of the
sentence is not needed, however the comma is (it separates the two
commands).  The key words recognized in the previous sentence are Read,
All, New, and Download.  In the first phrase, the word ALL means all
sections.  It tells the program to execute a -Read New- while taking you
through -All- sections.  New means messages stored between the highest
message you have read, and the highest message existing in that section. 
You can think of it as messages you haven't seen before (for simplicity's
sake).  All and New are parameters to the command Read.  The use of -All-
and -New- in your input is called -Parameter Stacking-.  Parameter
stacking is a way of saving time by avoiding prompts that will be
displayed if you don't give the BBS enough information to execute the
command.  As you use the system, you will learn very quickly which
parameters can be used with each command.  The -Download- command seen
after the comma is not a parameter, but is actually a separate command,
which brings us to our next subject...

 Command Stacking 
==================

Command stacking is a very useful tool that allows you to execute
sequences of commands with just one input.  Like parameter stacking, this
also saves time by avoiding prompts (mainly the command prompt).  It is
also quite nice to be able to plan out exactly what you want to do on the
BBS before you start.  Command stacking is very straightforward with
English input, and just as versatile with Macro input; However, you need
to be careful if you are using single-letter commands.  The command (-R-
for instance) must follow  DIRECTLY AFTER  the comma.  It is essential
that the letter associated with the command be the first character in a
command phrase (call it a phrase if you are using supplemental commands).
Here are some examples of different types of input you may be using:

Go General
Read New General
Read All New
R
R All
Read All New, Browse All New, Logoff
Sections,R All New,B All New
Other BBSs State -FL-

There are endless combinations.  Also, there is a lot more typing here
than really need be.  Each command (and parameter (including SIG names))
can be abbreviated in 2 letters, you don't have to type out the entire
word (unless the first two letters of a parameter are identical to
another parameter, then you may need to type 3 or more letters).  For
instance:

Re al ne, Br al ne, Lo

is the same as:

Read all new, Browse all new, Logoff

 Account Numbers 
=================

Every user is assigned an account number.  Account numbers are used
basically for speed.  You do not NEED to remember your account number
when using this system.  You can always use names instead of account
numbers; however, that means a little more typing, and a SLIGHT decrease
in speed.  Carina II is VERY fast when using either method.

[Ed. Next week another edition of the Carina Help Column]

=========================Closing Comments>                 by Ron Kovacs

For the latest in ST news and reviews read ST-Report.  Available on BBS
systems everywhere and the online services.

If you have a comment about this magazine or any of our other fine
publications, please leave a message in the Magazine Feeback area on the
Syndicate BBS (201) 968-8148.

________________________________________
ZMagazine
June 19, 1988          Vol 3, Issue #111
Copyright (c)1988 APEInc, SPCorp
All Rights Reserved
________________________________________
